%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Composite.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Carlos-Manuel LÓPEZ-ENRÍQUEZ
%%CreationDate: 23/03/14
%%BoundingBox: 0 0 845 770
%%HiResBoundingBox: 0 0 844.1387 769.0801
%%CropBox: 0 0 844.1387 769.0801
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 120 8%%BeginData: 9944 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD29FFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7D847D7E7DA8FD42FFA87D7DA8FD37FFA9A87D7D7DFD3EFFA87E7DFD3EFF%A87DA8FD3BFFA87D84FD11FFA8FD2FFF7D7DFD39FFA87DFD0CFFA8A8A8A9%FFFF7DA8FD06FFA8A87EA8A8A87EA8A8A87EA8A8A87EA8A8A87EA884A8FD%14FF847DFD37FF7D7DFD0CFFA8FD0452FFFFA87DFFFFFF7D7D7DFD04A8FF%A8A8A8FFA8A8A8FFA8A8A8FFFD04A87D7D7DFD13FFA87DA8FD34FFA87DFD%0EFFA8A852FFFFFFA8A8FFFF7DA8FD19FFA87DFD13FFA87DFD33FFA87DFD%18FF7DA8FF7D7DFF7DFFA8A8597DA8FFA8A87DAF7DA8A87D52A87DA87DA8%FFA952FD13FF7D7DFD32FF7DFD11FFA8A8FD06FF7EFFFFFD047D527D277D%527D7D7DA87DA87D537D595252527D52A8FFFFA8A8FD13FF7DA8FD30FF7D%7DFD10FFA8A8A87DAFFD04A87DFFFF7E7D7D59FD047D7E7DFFFFA852FD05%7D527D537D53A8FFFF7DA8FD14FF53FD30FF7DFD11FFA8FFA8A8A8FFA8FF%A87EFD1DFFA8A8FD14FFA97DFD2EFF53FD13FF84A8FD05FFA87DFD09FFA8%FD05FF7EFD0DFF7DA8FD15FF7DA8FD2CFFA8A8FD1AFFA8A8FFFFA8FFA8A8%A8FFA87EA8AFA8A8FF52A8FD0CFFA8A8FD15FFA87DFD2CFF7DA8FD15FFA8%FFA8FFA8A87DFFFF7D5252277D7D5227527D5227FF52FD0DFF7DA8FD16FF%7DFD2CFF7DFD1BFFA87DFFFF7DA8537DFFA853A87DA8527DFFA8FD0DFFA8%A8FD16FFA87EFD2AFF7DA8FD1BFFA87DFD1DFF7DA8FD16FFA87DFD2AFFA8%A8FD14FFA884FD05FFA87EFD1DFFA8A8FD17FF7DFD2AFF7DFD14FFA8A8FF%7DFD05A87DFFFFFD0AA8FFFD0AA8FD06FF7DA8FD17FFA8A8FD28FFA884FD%14FFFD04A8FD04FFA8A8FFFFA8FD0AFFA8FD08FFA8FD06FFA8A8FD17FFA8%A8FD29FF7DFD15FFA8FD07FF52FFA8A8A8FFA8FFA8FFA8A8A8FF84FFA8FF%A8AFA8FFFD07A8FF7DA9FD17FFA87DFD28FFA8A8FD14FFA8FFA8FFFFFFA8%AFFFA87DFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8A9A8FFA8FFFF%FF7DA8FD18FFA8A8FD28FFA87DFD13FFA8FD0452FFFF7D52FFFFA859A8A8%FD15FFA9A87DA8FD1AFF7DFD28FFA8A8FD14FF7D8452A8FFFF7DA8FD04FF%7E7E7D7E7DA87DA87DA87DA87DA87DA87DA87DA87D7D7DA87DFD1BFFA87D%FD28FFA87DFD15FFA8A8FD0CFFA8FFA8FFA8FFA8FFA8527DFF7DFFA8FFA8%FFA8FD1FFF7DFD28FFA8A8FD2CFF52A8FFA8FD24FFAF7EFD28FFA87DFD2C%FF7EA8FF7DFD25FF7DFD28FFA8A8FD2CFF7DFFFFA8A9FD23FFA87EFD28FF%A87EFD2CFF7DA8FF7DFD25FF7DFD28FFA8A8FD2CFF7DFFFFA8FD24FFA8A8%FD28FFA8A8FD2CFF7DA8FF7DFD25FF7DFD28FFA8A8FD2CFF7DFFFFA8FD24%FFA87DFD28FFA87DFD2CFF7DA8A827A8FD24FF7DFD28FFA8A8FD2CFF7DFF%A87DA8FD23FFAF7EFD28FFA87DFD13FF84FD30A8FD11FF7DFD28FFA8A8FD%13FFA8FD2FFFA8FD10FFA87EFD28FFA87EFD13FFA8FD04FFAFA8FFA8FFA8%FFA8FFA8FD21FFA8FD11FF7DFD28FFA8A8FD13FFA8A8FFFFFFA8FFA8FFA8%FFA8FFA8A8FD21FFA8FD10FFA8A8FD28FFA8A8FD0CFFA87EFD05A87DFFFF%FFA8FD09FFA8FD21FFA8FD11FF7DFD28FFA8A8FD0CFFA8FD06FFA8FFFFFF%A8A8FFA8FFA8FFA8FFA8A8FD20FFA8A8FD10FFA87DFD15FFA884FD07A87E%A8FFFF7D7DFD04FFA87DFD0CFFA8A8FD05FFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FD21FFA8FD11FF7DFD16FF7DA8527D527D527D7D7DFFFFA87DFD04%FFA8A8FD0CFFA8FD06FFA9FD04FFA8FFA8FFA8A9A8FFA8A8FD09FFA8FD16%FFA8A9FD10FFAF7EFD15FFA8A87DA85352A8A87DA87DFFFFA87DFD04FFA8%7DFD0CFFA8A8FD05FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FD06FF7E52A8%F8A87D7DFD14FFA8FD11FF7DFD1AFFA8FFA8FD0BFFA8A8FD0CFFA8FD06FF%A8A8FFFFA8FD0EFF7D8452272727F82752FFA8FD12FFA8FD10FFA87EFD1B%FF7DFF7DFD0BA87DFD0EA8FD05FFA8FFFFFFFD0AA87DFD04FF7DF827527D%7D7D27272752FD05FF7D52FFA8FD09FFA8FD11FF7DFD1AFFFD05A8FFA8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FD06FFA8A8FFFFFFAF%FD07FFA8FFFFFF847D52277DFD05FF7D2752FFFFFF277D27277D52A8FD08%FFA8FD10FFA8A8FD1BFFA8A8A8FD0AFFAFA8FD13FFA8FD10FFA8F8277DFD%07FF5227F87EFF52F8272727F8FD09FFA8FD11FF7DFD28FFA8A8FD13FFA8%FD10FFA85227FD09FF27527D522759A8FF7D27277DFD06FFA8AFFD11FF7E%FD28FFA87DFD13FFA8FD0FFFA827F87DFD09FF5227522027A8FFFFFF2727%7DFD07FF7DFFA8A8A8A9A8A8A8A9A8A8A8A9FD04A853A8A8A9A8A8A8A9A8%A8A8537DA8FD1BFFA8A8FD13FFA9FD10FFA8277DFD09FF7D27525227FD04%FF5227FD08FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87DA8FFA8FFA8%FFA8FFA8A92752A8FD15FFA8A8FD04FFA87DFD13FFA8FD0FFFA87DF87DFD%09FF52277DF8277DFFFFA8F82752FD07FFA8FD11FF7DFD16FF7DFF7D7E7D%A884A859A8FFFF7D7DFD04FFA8A8FD13FFA8A8FD0FFF522728FD09FFF827%52FF27275252F827A8FD08FFA8FD10FFA87EFD15FFA87D59FD04527D537D%53FFFF7D52FD04FFA87EFD13FFA8FD11FF52277DFD07FF52277DFFFF2727%27F852F8FD09FFA8FD11FF7DFF7DA87DA852A87DA87DA8527EFD09FFA8FF%FFA852FFA8FD05FFA8FD05FFA8A8FD13FFA8A8FD0FFFA85227277DFD05FF%522720FFA8A8A8FF7D7DFFA8FD09FFA8FD10FFA8A8A85252FD047D52537D%537D7DFD0EFF84A8A8FD0AFFA87DFFA8FFFFFFA8FFFFFFA8FFA9FD07FFA8%FFFFFFFD0BA8FFFFFFA8A8F827277D7D7DF82752527D5252FFFFFFA8FD0B%FFA8FD11FF7DFFA8FF7DAFA87D52FFFD04A8FD0DFFA9A8FFFD0BA87DFD0E%A8FD06FFA8FFFFFFAFA8FFA8FFFFFFA8FFFFA8A8FFFFFFA8527D27F82727%5227522727F827527DA8FD0BFFA8A8FD10FFA87DFD1BFF84A884FD0AFFA8%7DFD0CFFA8A8FD05FFA8FFFFFFA8FD09FFA8FD05FFA8FF527D7D27FFA8A8%5227A8522727FD0DFFA8FD11FF7DFD1CFFA8FD0BFFA8A8FD0CFFA8FD06FF%A9FD04FFA8FFA8A8A8FFA8A9A8A8FD0AFFA8FFFFFF2752FF7D27FD0DFFA8%A9FD10FFAF7EFD28FFA87DFD0CFFA8A8FD05FFA8FD05FFA9FFA8FFA8FFA8%FD0FFF5227F852F8277DFD0DFFA8FD11FF7DFD28FFA8A8FD0CFFA8FD06FF%A8A8FFFFFFA8FFA8A8A8FFFD04A8FD0FFF7D277D527DFD0DFFA8FD10FFA8%7EFD28FFA87EFD0CFFA87DFD05A87DFFFFFFA8FFA8FFFFFFA8FFFFFFA8FD%0FFF7D52FD10FFA8FD11FF7DFD28FFA8A8FD13FFA8A8FFFFA8A8FD2AFFA8%FD10FFA8A8FD28FFA8A8FD13FFA8FFFFFFA8A8A8AFA8A8A8FFA8A8A8FD21%FFA8FD11FF7DFD28FFA8A8FD13FFA8FD2EFFA8A8FD10FFA87DFD28FFA87D%FD13FF7DA9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87EFD11FF7DFD28FFA8%A8FD14FFFD17A8AF7DFD16A8FD11FFAF7EFD28FFA87DFD2BFFA8277DFF7D%FD25FF7DFD28FFA8A8FD2CFF7DFFFFA8A9FD23FFA87EFD28FFA87EFD2CFF%A8A8FF7DFD25FF7DFD28FFA8A8FD2CFF7DFFFFA8FD24FFA8A8FD28FFA8A8%FD2CFFA8A8FF7DFD25FF7DFD28FFA8A8FD2CFF7EFFFFA8FD24FFA87DFD28%FFA87DFD2CFFA8A8FF7DFD25FF7DFD28FFA8A8FD2CFF84FFA87DA8FD23FF%AF7EFD28FFA87DFD2CFFA8A8A8F8A8FD24FF7DFD28FFA8A8FD14FFA8FFA8%FFFFFF7DA8FD04FFA8A87DA8FD057D7E7D7D53FD087DA87DA8A8FD1BFFA8%7EFD28FFA87EFD13FFA8FD0452FFFFA87DFFFFFF7D7D7DA8A8FFA8FFAFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7D53A8FD1AFF7DFD28FFA8A8FD14FF%7D7E27A8FFFF7D7DFFFF7DA8A8FD06FFA8FD0AFFA8FD07FF7DA8FD18FFA8%A8FD28FFA8A8FD15FFA8A8FD06FF7DFFFF5259A959A87D7D5253A8A8A87E%7DFF52A87D52597D7D7D52FFFFFF59FD19FF7DFD28FFA8A8FD16FFA8FD05%FFA87DFFFF7D7D5252527D277D537D7EA8FD047D52527D52277D5252FFFF%FFA8A8FD17FFA8A8FD28FFA87DFD14FFA87DA8A8FFFD04A87DFFA8A87EA8%7DA87DA87DA8A8FFFFA87DA87DA87D7D7DA87DA87DAFFFFF7DA8FD17FFAF%7DFD28FFA8A8FD14FFA8FFFFA8A8FFA8FFA87DFD1DFFA8A8FD17FFA8A8FD%29FF7DFD15FF7DA8A8FD05FF7DFD09FFA8FD05FFA8FD0DFF7DA8FD17FFA8%A8FD29FF84A8FD1BFFA884FFFFA8FFA8FFA8FFFFA8A8FFA8FFFF7D7DFD0C%FFA8A8FD17FF7DFD2AFF7DA8FD16FFA8FFA8FFA8A87DFFFF5228FD045253%527D52527DFF7DA8FD0CFF7DA8FD16FFAF7DA8FD2AFF7DFD17FFA8FFFFFF%A8A8FFFF5253527DA8FD057D27A87D52FD0DFFA8A8FD17FF7DFD2BFF7DA8%FD1AFFA87DFD0BFFA8FFFFFFA8FD0DFF7DA8FD16FF7DA8FD2BFF7DA8FD13%FFA9A8FD05FFA87DFD1DFFA8A8FD16FF7DFD2DFF59FD12FFA8A8A87DFFFD%04A87DFFFD0BA8FFFD09A8A9FD06FF7DA8FD15FF847DFD2DFFA87EFD11FF%A8FFA8A8A8FFA8FFA87EFFFFA8FD07FFA8FFA8FD09FFA8FD06FFA8A8FD15%FF7DFD2FFF7DA8FD11FFA8A8FD06FF7DFFA8FFFFFFA8FD05FFA8AFA8FFFF%FFA8FFFFFFA8A8FFA8A8FFA8FF53FD15FF7DA8FD2FFFA87DFD19FFA97DA8%A8FFA8FFA8FFA8FFA8FFFFA9A8FFA8FFA8FFA8A8A8FFFD04A87DA8FD14FF%A87DFD31FF7DA8FD0EFFA8FD047DFFFF7D7DFFFFA97D7D7EFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D53A8FD14FFA87DA8FD32FF7DA9%FD0EFF527D277DFFFF7D7DA8FFFFFFA8A87D7E7DA87D7E7DA87D7E7DA87D%7E7DA87D7E7DA87DA8A8FD16FF7DA8FD34FF52A9FD0EFFA87DA9FFFFFFA8%FD32FF7D7DFD36FF52A8FD45FF7D7DFD38FF52A8FD42FFA87DA8FD3AFF7D%7DA8FD3FFF7D7DA8FD3CFFA87D7DA8FD3AFFA8A859A8FD40FFA87D7E7DA8%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A87D7D7DFD44FF%A8A8FD067D537D7D7D537D7D7D537D7D7D537D7D7D537D7D7D597D527D53%7D7D7D537D7D7D537D7D7D537D7D7D53FD047DA87DA87DFDE5FFA8FD7EFF%A8FD80FFA8FD7EFFA8FD80FFA8FDFCFFFFFFFFA8FDF5FFA8FFA8A8A8FFFD%05A8FFA8FFA8A8A8FFA8A8A8FD68FFA8A87D7E7DA8A8A87EA8A8A87DA8A8%A87EA8A8A87EA87D7E7DA8A8FD64FFA87DA8FD0DFFAFFD09FFA87DA8FD4E%FFA8FFA8FFFFFFA8FFFFFFA8FFAFFD08FFA8A8FD09FFAF52A8FF7D7DFD0A%FFA87DFD29FFA8FD0BFFA8FD07FFA8FD0EFFAF84FD04A8A9FD08A884FD07%FF7DFD0BFF52FD047DFD0BFF7DFD29FF7DA8A87DFF7DFF7D7D7DFF527DA8%7D52A87DFFA87D52A87DA85384A87DFD06FFA8FD16FFA8A8FD09FFA8A87D%27A8A8FD0AFFA884FD29FF52A8527D27A87D5227A87D525253277D7D527D%A85352277D5252527D52FD06FFA8A8FD0DFFA8FD07FF7DFD0BFF277DA852%52FD0AFFA87DFD29FF52FD057D84527DAFA852A8527D7D7D52FF7DA852FD%077DFD06FFA8FD16FFA8A8FD09FFAF7DFFFFA87EFD0AFFA884FD29FFA8FF%A8FD13FFA8FD0DFFFD07A8A9A8A8A8AFA8A8A8FD07FFA87D7DA8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87D7DA8FD65FFA97D847DA87E%A87DA87EA87DA87EA87DA87EA87DA87D847DA9FDAAFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Victor</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">SimpleAndComposite7</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2014-03-23T12:10:45-06:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:ModifyDate>2014-03-23T12:10:45-06:00</xmp:ModifyDate>
         <xmp:MetadataDate>2014-03-23T12:10:45-06:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqx+880zT3sum+XrUanfQNwu7hn9Oytm2qsswDcpBWvpRgt/Nx64qsXypfXvx69rN1dk9bSyd9&#xA;PtV9lWBhOw9pJmB8MVVY/IPkhG5/oGwklpxM0tvFLIR4GSRWc/ScVVP8E+TP+rBp3/SJB/zRirv8&#xA;E+TP+rBp3/SJB/zRirh5K8lkAjQdNIO4ItIP+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/6RIP&#xA;+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/&#xA;6RIP+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/6RIP+aMVd/gnyZ/1YNO/6RIP+aMVUP8AAHlK&#xA;MD6jYDS2X7L6Y8lgQf8Ao1aIH5HY98VU2s/OOjkPY3Q1+xX7dlelIbwD/im5QJE9OyyoK95BiqZ6&#xA;J5g07WYZGtS6T27end2c6GK4gk/kljbdfY/ZYbqSN8VTLFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;WK6rdaj5h1GbQ9JuGtNLtW9PW9WhYrLzoCbO1cfZkIP72QH4BsPj3RVkWn6fY6dZxWVjAltaQLxh&#xA;gjAVVHXYD33OKojFXYq8y8+eVfzKmur6/wBC1W4ljmmtza2FtO0DrF6kAmQh5YIlCxxzNyVubF6d&#xA;q4VZcugXz+TW0TUZYtVu5IHhmkugxikLk0D15swUGlTUmm++BUPDeXflry3o2kNCt/rZijsbK1hY&#xA;okrwR0MjOw/dxqicnYjboKsVBVS2K5W+16fQ9b80SW+sRpHJ+iLKlhEUlVmUwSODcXFAjcmSWgp9&#xA;lcVRQXyB+j/0j/iFzp4l+rm9/Tt36Prf779T61w5/wCTWuKrdE/wRrVzdWmnarfTXlm7pcWp1TUU&#xA;mUIQvqem04cxtUcXA4t2OKoi70/ylZ6jb6bc6lexX1ykk0Nu2q6jyMUI5SSH/SPhRafaO2KoV5vy&#xA;8XTZ9THmGSTT7chZrmPXLyRFZl5qlVuT8TLuq9T2xVRgu/y7u7KG4i8xz2wuLZb6P1dZu4plt2Ac&#xA;StFPcVVaHcstMVRNlPrCW73/AJb1yLzVp8LmOaymkt3kDIAWSC8twiiRa/ZmDVruy9cVZJpGq2er&#xA;abBqFmWME4JAdSjqykq6Op3V0ZSrA9CMVRmKuxV2KpJ5h8uvfsmoabONP1+1Ui0vwvJWWtTBcJt6&#xA;sL916j7SkNviqt5e11dVt5UmiNrqdk/oalYsatFKBWqn9qNx8Ub/ALS+9QFU1xV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVIvNmqXlvb22m6Y4TWNXl+rWTkchEoUvPcMPCGIFhXYvxX9rFUx0fSbLSNNg06yUr&#xA;b268V5HkzEmrO7HdndiWZj1JriqMxV2KuxVj+uQTvqJaeG9nszAq2a2MrxFbnk/Pnwkj3ZSnFn+E&#xA;UNSK7qomzt/NQtIBcX1n9YEaib/RZG+PiOXxC4Su/fiPliqUyJqS/mPoq3txDOp0fVmjEMTwgEXO&#xA;mip5SzV2bbpTfxxVfrH5fWmp66+snUbq2uHeyfhEIOIFg8jxqC8bsAzTEtvirHbj8idIuIZopdc1&#xA;KRZ5Fld5PqssnJYzExEkkDMC6Hff9dMNqmOmfll5Ykujci+bVbNLi9FxZyi2mhdpUjt5IJWWPkfR&#xA;Nv0LVDVrjaojUPKGhWWq6ALHVx5dSzeRNL0m2Wzjjmkk5NOEWaJ3ZnRjyCnYbih3wKgLX8mdItPq&#xA;z22qXkVxaW9va283Czfilsk0dSkkDxsWS5cEsp8cVQdj+QuhWDxyWmsX8ckScUcpZSEOIfq6vWS3&#xA;YikQ40Hz8cVZp5T8r2/lrSzpdpcyz2SyvJaxzCOsKOeXphkRCwDEmr1bfrTFUN5G/wB4NTHYaxqd&#xA;B87yQn8TirI8VdirsVdirGfNkEmmTxebbNWM2nIU1aFASbjTqlpBxH2pID+9j7/aUfbOKskilimi&#xA;SWJw8Uih43U1DKwqCCOxGKrsVdirsVdirsVdirsVdirsVdirG9GQal5r1fWHFY9PppGnk9AECzXb&#xA;r/ryssbf8YvvVZJirsVdirsVdiqGS2ulMZa7dwkkruCsY5o5YpGaLsI+QAI3PHeu+Ksfnjli/MLQ&#xA;ElmM8g0bWeUrBVJrd6YeigDbp0xVKPO3lT8w9U1PUbnQNVjsIZNPS1sI5Lu7RBP66PI7RW6xiMtF&#xA;zT1OTvupTgQaqpdD+XX5ixeX1hTzTcDX5L+Nri+kvLmaJbBIZLakcZVU9XhL61OAUyhSxPEHFUPb&#xA;eQPzVtdL1K3h1uJ7+WD/AHF3cuoagyQSSTCS4hki4j1A4aTjcMxkT4QqilcVZBo/kjXUXydLrV1F&#xA;e3nl9ry4vbh5ZbiQzXMbxxpFLMvqPGizEVkPL4VryO+Ks5xV2KuxVjnkb/eHVP8Atr6l/wBRcmKs&#xA;jxV2KuxV2KuIBBBFQdiDirHPJQ+p2195fIoNDuWtrUf8ucirPage0ccnpf7A4qyPFXYq7FXYq7FX&#xA;Yq7FXYq7FXYqx/yCC3lDTbphR9RjOoyA1B537tdNXkAa1mxVkGKuxV2KuxVINc0trjUBPNpq6tbG&#xA;AR28LNGvoTBmLSfvCKcwyjmlXXjsDXFVex0bVorK3judbunuEiRZnVbUqXCgMQXgLUJ8TXFUoure&#xA;Sw/MDQLi7vpbiG4sNTsYWuBCo+sSyWc6Rr6UcW7x2sjb/wAu2Kpj+lLdri6N1rAsPRmZRbepaACO&#xA;Agsx5q7jmHHKp2FKccVXtd2CAq/mQgiqkmSyBBjPqP8A7q6hCOXgu/XfFV1leo2rxW0Oqm/QwTvL&#xA;F/o7cWDxMhLRKhWiS0A7jf5qoay1S0ms4Lm418QyyRrJND6lkFRo95l+w3QuFb4jTbeu5Kq5vLBe&#xA;St5j+KMEPWSyBHpnm5P7raikA+A998CutdZs7cajcXOqLcafZJG0ly/pcY+QZ2BeIKD8LLtTpTrX&#xA;FUdBrekz3KW0N3G9w7TxpEG+IvasEnWnjGzANiqUeQmWTR7u6jIa3vNS1C4tpB0eJ7uTg6nurgcl&#xA;Pcb4qyTFXYq7FXYq7FWPKotvzAcjb9KaUCRXqdPuKcqeNL8An5eAxVkOKuxV2KuxV2KuxV2KuxV2&#xA;KobU/wDjm3f/ABhk/wCInFUL5WjSPyzpEaCiJZW6qPACJQMVTPFXYq7FXYq8w8++RPPd5dahqOia&#xA;zcsbqW39GwhuLm3KQrLB6sZpdQQ8BHFKfgCOxehfvirKpfLGsnyKfL66vI+qGARfpZmnR+XPkSGS&#xA;X1xRfhWspb+Zm3qqq2PlNH8spomuTfpIRyOyT8pVkQCZpICsjO0oeFSqh+ddsVUk0vzjYAR297aa&#xA;1bLsiakjQXIXbZrmBZEfYU/uAfEnFVaOfzmVDS6NpSy7lguozsATsaMbBTuPbFV6z+b1JK6RpgJ6&#xA;kahOP+xHFUjsfPF7qHmnUvK9vY6XJrGlxRz3cH1+agWfein6luV+Hn4clxVMtM1fzRqNot5Do2nK&#xA;jPIo538oaqOYmO1kepT7sVRD3PndQBBpGljkfiJ1G4FNutBY/F8qj54qoTeXdd1j935g1FF04/b0&#xA;rTVeFJR/LPcOzSyL4qnpg9GqMVZHDDFDEkMKLHDGoSONAFVVUUCqBsABiq7FXYq7FXYq7FWPam5T&#xA;z1oNAKyWOpRsSN+PO0egPzQYqyHFXYq7FXYq7FXYq7FXYq7FUNqf/HNu/wDjDJ/xE4qh/LX/ACjm&#xA;lf8AMHb/APJpcVTHFXYq7FXYq7FXYq7FXYq7FXYqxnSIIR5+8wyCNQ/1TTvjAFdzc1396Yqi/Jv/&#xA;ACj8P/Ga5/6iZMSqd4q7FXYq7FXYq7FXYq7FWOat/wAp15e/5hNS/XbYqyPFXYq7FXYq7FXYq7FX&#xA;Yq7FUNqf/HNu/wDjDJ/xE4qh/LX/ACjmlf8AMHb/APJpcVTHFXYq7FXYq7FXYq7FXYq7FXYqxixl&#xA;9Hzn5mm4NJ6djpz+nGOTtx+tGijuT2GKqP5W6/Za75Pgv7JJVtmnuljaZDGX/fu3JQd6fFx+YOKs&#xA;txV2KuxV2KuxV2KuxV2Ksc1b/lOvL3/MJqX67bFWR4q7FXYq7FXYq7FXYq7FXYqhtT/45t3/AMYZ&#xA;P+InFUP5a/5RzSv+YO3/AOTS4qmOKuxV2KuxVItL0uC8gmnnmu2ka7u1+G7ukUKl1IigKkiqAFUA&#xA;ADFWpoNBgdklub5WSob/AEq/PQqvUP4uMKrQnl48aXN9RyAp+s6hvyZkH7f8yHFW7eHy/cPEkVze&#xA;lpqemDdX615IZB9pxT4FJ3xVHfoCx/37ef8ASbef9VcCu/QFj/v28/6Tbz/qriqknlbSEuJblPrK&#xA;3Eyos0wvLsO6x14Bm9WpC8jT54quh8s6XBGI4TdRRgkhEvLtVBY1Owl7k1xVf+gLH/ft5/0m3n/V&#xA;XFXfoCx/37ef9Jt5/wBVcVd+gLH/AH7ef9Jt5/1VxV36Asf9+3n/AEm3n/VXFV3l+WSXQdNllcyS&#xA;yWsDO7ElmYxqSST1JxVH4q7FXYqxzVv+U68vf8wmpfrtsVZHirsVdirsVdiqRXnnXQrGW+S9eWBb&#xA;CaC3lkMTuHluRWNY1jDu1T8NeNK7DFULa/mZ5Iuplit9SEru8ccfGGfizTcPTCt6fFuXrIdj0YHo&#xA;cVReledNA1bUhp9hJLNK9rFexy+hMsLQz8uBEjIFB/dnY08OtaKoka7H/iT9BNbTLKbVrxLo8PRd&#xA;EkWNkWjl+SmQVqoHucVRWp/8c27/AOMMn/ETiqH8tf8AKOaV/wAwdv8A8mlxVMcVdiqTzQS3eu3M&#xA;Bup4YYbW3dEhfgOUkk4YnY9o1xVW/Qn/AC/3n/I7+zFVvlqP0tLaPmz8bu9HNzVj/pcu5OKqNm2r&#xA;WMElsYLVzHJK0Z9f0uQkZnWqLCAp5Oqn5137qq36R1Xix+q2vMV4L9bO/QLv6Pc8x9HvsqsrfXl/&#xA;ZNPFbRR2szzKyTGZ2rHNEoVeEdCUcMTv3Hviqb4q7FWlZWFVIYbioNRtscVbxV2KuxV2KuxVLvLX&#xA;/KOaV/zB2/8AyaXFUxxV2KuxVjmrf8p15e/5hNS/XbYqyPFXYq7FXYq7FUmuvJ3ly7upbq4tDJPM&#xA;6SyOZZd3iblG1A9BwO606YqxVPy38t6XqFzY6dYx3UuqxtNxvH9KO2t7b0I1htmgjWQfYiAPIsvE&#xA;GvQEqmehweUYBYX9vpdxa3VlB9VhEMF7NGiKzgorohjlRWkfg++zbUriqYvJ5efV49Xa0vDqMUZh&#xA;Sf6pf7Rt1Xj6fGh+WBVXUtesTp10BFd1MMg3srsD7J7mLFUP5d12yXy/pimK7qtpADSyuyNo16ER&#xA;UOKpj+n7H/fV5/0hXn/VLFXfp+x/31ef9IV5/wBUsVUtNnFzrV7cxxzJCba1jV5oZYasklwzACVU&#xA;JoHXp44qm2KpdoH+8Mv/ADGXv/UZLiqXW8dkiSLe6RLcXCyTF5mtkcsCxmFG5SVH7tAPi6hfoKql&#xA;NFT410J+UZJUi0StUYOOP+ylJHvyxVYlrYtqWnfUtINsLed3knMAhVESCa3WhUrXqAoofhPTuAqn&#xA;5+82x+XPLWqX1vcWY1a0tJLq1tLyUIJPT7ceSseRHEU77Yq8J0/zr+df5i+ZLfzR5H0w6TbWtkdP&#xA;uJJ5g9lI5PN2CzBUZg7bcVJFByOKUuutJ/5yD/L/AMrQ2ssbv5dtr0ajfz6ZMGuuPqc5UeRD6ojk&#xA;O7HiR4mlQVXuH5V/mrB+YcWp3llpktjp1hLHDDNPIjPK7KWcFE+xx2/aNa4oTnWPzB8paVHrQuNR&#xA;ha70G3+s6hYq6+sqmMyIoViKs46AeI8cVUtA/MnyjrOnaJdx38NvNryA2FjNIgnL8atGVUt8S9Di&#xA;rKMVdiqXeWv+Uc0r/mDt/wDk0uKpjirsVdirHNW/5Try9/zCal+u2xVkeKuxV2KuxV2KuxVDX2ma&#xA;ffoqXtvHcKhqnNQStetD1Feh8RtiqvFFHFGkUSCOKMBURQAqqBQAAdAMVXYqhtT/AOObd/8AGGT/&#xA;AIicVQ/lr/lHNK/5g7f/AJNLiqY4q7FXYq7FUu0D/eGX/mMvf+oyXFUxxV2KuxV8zfn9HJ5q/Mry&#xA;15WudAfTZ5rxLSHXnYH61aSOgPp0AHGMuzcSSQfCu6kPo/S9MsNK06203T4FtrK0jWG3gQUVUQUA&#xA;xQiiARQ7g4q+R/O2m6Z+X352XaWUk9pZ3MSanpVpbmX0FvnqYFnihPN4EnVjwXelB06qUx8i+Srj&#xA;85fP+v6552kjhXSDFaXFlpw9JZJVDxqAzGR+C+kSSTU12IAxVd+Y3kBPyf8AOPlzzT5KZJDdzyW0&#xA;VhqJ9WOOZ4/T2YGNuDLIdy1VPeh2VfS2gtrjaPaNry2yawYwb1bIubcSd/T9T46fPFCPxVj3l7XL&#xA;KPQNMRo7sslpApK2d0wqI1GzLEQR7jFUw/T9j/vq8/6Qrz/qlirv0/Y/76vP+kK8/wCqWKu/T9j/&#xA;AL6vP+kK8/6pYqx7VNbsj530BxHdcUtNRBBs7oHc23RTFU9O2FWQ/p+x/wB9Xn/SFef9UsCu/T9j&#xA;/vq8/wCkK8/6pYqxmL84fJr+cbnyi/12HV7cxgK9nPxf1YklBHFWdRSQCsirv7UJVZvirsVYLq/m&#xA;Hzpb6hqkGmafNMTcW0djPPaPJbJET6c70SaNpOFef2hyG23XCqQeXPzL/MTVr2+jOjW5TTGt01K2&#xA;gjLzQO4geaP/AHpq8iiWVQvpr/d1r8XEKsm8t6551u9Zs/0vZPbWN7YQyPAtpxWC7Uz+urzGdiv2&#xA;Y6Ao1QVp+0SFVprnzMfzIt7eIXieX1tWNy7RxGzaXiSixsF9UPXdmZqbBQpqSFWSan/xzbv/AIwy&#xA;f8ROKofy1/yjmlf8wdv/AMmlxVMcVdirsVdiqXaB/vDL/wAxl7/1GS4qmOKuxV2Kvmr/AJyRsrzy&#xA;35q0Lzr+n3u7+K+jl0vQZVCpBFbhXdoyv7JdFD1FTy70xSHvPkzznoXm/QbfWdHnWWCZR6sVR6kM&#xA;lPiilUfZZT9/UbYoTPUtS0/TLGa/1G4jtLK3UvPcSsERVHck4q+XbFtU/Nf80fMHmfSb+0sNG0yB&#xA;bWQX7vCzaZIrxSupT44zwDycqjiSATilEXHlrzz+XnmzzB5j/LGxJ8n2VnDPcPeOs1rdQrCJZGiY&#xA;uryqnxGqNyG49sVbt/L35kfml5p8q6v5+06R/KGopM1rHpnwQwI0RdJJAGkeMSsF+J2qRt7Yq+k9&#xA;B0Wy0PR7TSLIyG0soxFCZnaR+I6cnbc4oR+Kpd5a/wCUc0r/AJg7f/k0uKpjirsVdirFvMd5bWPm&#xA;7Rb25f07a10/VZp3oTxSMWzMaCpNAMVQln+bHlq7uYraOG7WaSRISrpGvCSR4UVW/eb/AO9UTfDX&#xA;ZvnQ0qEt/wA5dAMdib2xvLOS+ExRWEDhVgkjidjwlLfamQAca+22NK6L81vLhntZbHTLh21O5igu&#xA;ZwtvEyl7KS6jeRmkHLjHAV+I7UPgAVWf4FdirsVSbX7KW4ubR5LN9RsEWVZ7FGjHKRihikZZXiRw&#xA;gVxudiQQO4VWaZpmvx2MaS6i0R+IrC6LO8aFiUjaViTIyIQpYnelanFUV9Q1r/q6f8kI/wCuKobU&#xA;rHWRp10TqdR6MlR6Cfyn3wqh/LtjrB8v6YV1PiptICF9BDQemu1a4qmP1DWv+rp/yQj/AK4Fd9Q1&#xA;r/q6f8kI/wCuKtadJfpqd3Z3VwLhYoIJo34CMgyvMrA0O/8AdDFUzxVLtA/3hl/5jL3/AKjJcVSy&#xA;C70iaKaS+1b6vcJJMs0YumgEYVzIKxmVuP7qHl1+zyNACRhVVE/lkAyDW/hjNWY35Kj025nlV6be&#xA;soNe3EHamBVkE2lLqOnxafqj3chmZJovrUlx8EME0Z5qGcCkkdGL0HMfz0xVONQ061vYmWWGGSX0&#xA;5I4pJollCeotG+FuoO3IV3xV85Xf/OOHm3yzNoUnk3Xr1NWvJ/R1rUIG+rwQRU5eoFRlcoOnEk8v&#xA;auKbU5vyF/NDzVda/ZeaPMt3MdKMa6DPdtJJaXbupYvQu3phRRW4qTU/5O6tsZk8l+aW/MbUPy30&#xA;HUtMhlvLJIr+7hgjjCwrEks1p6iIZWAdRX9pqAtTcYqz78jfNn5l3OtSeQLq30y60LyqXstWvBX1&#xA;PSQPDFHGynhJ8aHrHuB8RBxV9AxRRxRpFEgjijAVEUAKqgUAAHQDFC7FXYql3lr/AJRzSv8AmDt/&#xA;+TS4qmOKuxV2Ksb1dVbzz5fVgCps9SBB3BBNtiqZL5Y8tqkCLpNmEtWMlqot4gInJBLRjj8JJUGo&#xA;xVCN5H8rHXLbW10+KO/tBN6TRjgnK4KmSRo1ojOTGvxkV2xVFf4X8tenJF+ibL0ppBNMn1eLi8i1&#xA;4uw40LDkaE+OKpnirsVdirsVdirsVQ2p/wDHNu/+MMn/ABE4qh/LX/KOaV/zB2//ACaXFUxxV2Kp&#xA;VOupwaxPdW9oLmGe3gir6ioQ0TzMdmHhKMVX/X9a/wCrX/yXj/piq3y00jaYzSJ6chu70tHUNxP1&#xA;uXao64q1bHVb2EzpdC2VnlVYzCSQEl4j7fpn7KH9n9raoAqqri01Yca36mhHL9wBWjMT+13Uhfor&#xA;iqjXVba5sEmu0nWeX0pR6fpk8beRyVpz3LoDQ027+KqaYq7FXYq8H/NH/nHPTJNPj1DyDYy23mQ3&#xA;nqSut2yKYpiTI3756LwPQIRtXrirLPy5/IvSPIeujVtK1i+m9W1NvfWkxT0p5CwYSEKBTjvQb/Pr&#xA;VV6ZirsVdiqXeWv+Uc0r/mDt/wDk0uKpjirsVdirHNW/5Try9/zCal+u2xVkeKuxV2KuxV2KuxV2&#xA;KuxV2KobU/8Ajm3f/GGT/iJxVD+Wv+Uc0r/mDt/+TS4qmOKuxV2KuxVI9N1KGyhmt7iG6Eourt/g&#xA;tLmRSslzI6EOkbKaqwOxxVYH8sjnx0+dfUZmkC2F2oLSBg5IEXVg5r88Ku9Ty3xK/UbmhrUfUbz9&#xA;rjX/AHV/kL92Kr4Lry/BKJYbK5SQFiHFjeVBclmP913LH78Cov8AT9j/AL6vP+kK8/6pYq79P2P+&#xA;+rz/AKQrz/qliqHj836HJezWMb3D3tuiST2y2l0ZESXkI2dRFUBuDUr1piq+380aTcxCa3F1LESw&#xA;DrZXZFVYq3+6uxBGKqv6fsf99Xn/AEhXn/VLFXfp+x/31ef9IV5/1SxV36fsf99Xn/SFef8AVLFX&#xA;fp+x/wB9Xn/SFef9UsVX6DDLBoenQTKUlitYUkQ9QyxgEH5HFUdirsVdirHNW/5Try9/zCal+u2x&#xA;VkeKuxV2KuxV2KuxV2KuxV2KobU/+Obd/wDGGT/iJxVD+Wv+Uc0r/mDt/wDk0uKpjirsVdirsVdi&#xA;rsVdirsVdirsVYnpflvRbX8ytb1eC34ajc6dYme45yEv6ktyrVUsV+zbxgbbcdsVTHyb/wAo/D/x&#xA;muf+omTEqneKuxV2KuxV2KuxV2KuxVjmrf8AKdeXv+YTUv122KsjxV2KuxV2KuxV2KuxV2KuxVDa&#xA;n/xzbv8A4wyf8ROKofy1/wAo5pX/ADB2/wDyaXFUxxV2KuxV2KuxV2KuxV2KuxV2KpHFNFD5u1ia&#xA;Z1jhj0zT3kkchVVVmviWYnYADFUP+XmqaZqXlmObTruC9hS4uUaS3kSVQ3ru/ElCRXiwPyIxKskx&#xA;V2KuxV2KuxV2KuxV2Ksc1b/lOvL3/MJqX67bFWR4q7FXYq7FXYq7FXYq7FXYqhtT/wCObd/8YZP+&#xA;InFUP5a/5RzSv+YO3/5NLiqY4q7FXYq7FXmfnn8yfN3lu61Bk0WP9G2ssEMF3OJgjieS3iEgkAEb&#xA;Vad/3ankOFTscKss/SWuT+THv7iCXTtXa3ZvRt4jcSpICQpSIqxJbY8WG1aHpgVbY+ZTZ+UdL1HW&#xA;UnGo3EMMUloYSl1NeFKPEkFE+JnVj0Apvsu+KoW01HzVrVzdQQ3un6O9oyrc2KD9IXsJkXnH6zCS&#xA;KGJmU14hXHgxxVFyeX/MzuWXzRdRg9EW1sqD/goWP44qhNP07V9RtvrNh50nurcs6erDb6e68o2K&#xA;OtRD1VgQcVWHyxqseqs7ebbkahewCPg1vY8pIbVmOyGHojXJqQP2hXtiqF03yTJ5T0JoLLzNLpej&#xA;2YlnkH1awWOMMxkkdmaHpUk7nFU1tdH8xSQLcW/mqW5jmVXhka2s3jKtuGHpxx1DD/KxVbLqfm/R&#xA;h6uqW0GsactTNd6bHJDcxL/MbN3n9UAfaMcvLwQ9AqyCyvbS+s4byzlWe1uEWWCZDVWRhVWB9xiq&#xA;tirsVdirsVdirHNW/wCU68vf8wmpfrtsVZHirsVdirsVdirsVdirsVdiqncwie2lhJ4iVGTl1pyF&#xA;K4qlPki4e58maFO+0kmn2pkBpUP6K8geO1Q1RtiqdYq7FXYq7FUl1W8vJL+WxgFqiW1st5K96rMj&#xA;8mdQq0K8Avp1d/i41HwnFV9nrt5dWkFyujXgWeNZFBa1FA6hu86nv3GKpTNdz3f5iaFFcWUttHFp&#xA;mq3EazmFqyrNYRB19KSWhVJnXemzYql2v/lrf6l5puNftr+2tbiVrdYZHtWllSCOCWKaIt6qqyym&#xA;QEqVoaUIOFWOXP5F6zPoS6IddtVsFu5LxEFk4ETSxRRkRRpcJEvExuy/B9pidicVT/Q/yqm0/U7q&#xA;6l1P91fi++vGyWayuJWu7tbqJjNDMCrQ8SgoPssw74FRN1+Xl+PMVpqVhe24trewn02X69FPeXc0&#xA;VywdhNcyXHKQIy/ByGwLDfairHI/yOvo7NLJdUsns1t4oWs5bKV7d5hCIprx41uY63BKhkeu2/tQ&#xA;qox/kNqaG4aTWra7a5tfq0jXNpM5oyqhQ0ugrRxU5Qqy/AwXrTdV6L5L8tHy1oMekc4ZUgeQxywx&#xA;eiXVmJDSjk/KU/tttU9sCqHkMBNMv4UHGKHVtTSJB0VfrkrcR7VY0HbFWSYq7FXYq7FXYqkF3+88&#xA;+aWoCkW+mX7vUfErSz2ixkGvcRyYqn+KuxV2KuxV2KuxV2KuxV2KuxVjvkxvq8Op6O20mlX88ar0&#xA;/cXDfW7en+SIpwnzU9xirIsVdirsVdiqGvNM029MZvbSG5MR5RetGsnE+K8gaYq1HeXDNGGsZ0Dy&#xA;yRMzGGiJHy4zNxkJ4ScRx41b4hyVd6KpBPLJL+YegSSQvbudH1msUhQsKXemDf02dd+uxxVinnX8&#xA;xfzG0jzBqNro3lyfUdKt1hS3uYNNvLhhI9C8jEy2yzBdwEg5fzNItOJVdbecfzkmeyLaJaRrqNxJ&#xA;YpGbO8H1R4lTnd3DvLHytyRLwARS9FAb4sVS3/lYX5n6fo7zJ5cupJfURks/0dqN7OI70fWTOZHm&#xA;iUiBpPQNsG5qRWqIAMVZDqt/r2o6x5NtZINS0/VWFve6xdWaagNMjUAPNaycE9F2lZeAE/2Fqahu&#xA;NVXouKuxV2Ksc8jf7w6p/wBtfUv+ouTFWR4q7FXYq7FXYqx3RD9d81a9qQ3htvq+lQHsTbq08zL/&#xA;ALO64H3TFWRYq7FXYq7FXYq7FXYq7FXYq7FWM6050XzPZa300/UlTS9VNNkk5k2U7HsPUkeFv+Mi&#xA;9lxVk2KuxV2KuxVIdb1aS31D6s+owaTAsAminnCt60nJgUHNl+GMKC4X4jyFCtN1VWw1bXbixt7i&#xA;TSDHJNEkjoZkBUsoJFCKilcVSqSe9k/MbRHu7X6qv6J1aOMmRX5O1xpzcRTvxjJ+/wAMVT2LUNQu&#xA;VkksreCWFHmiVpJ3jJkhlMTAgQvQVRt6nFV8k2uAN6dpbMRz4BrmRa0/u60ganL9rrx/ysVWHU54&#xA;bmSK8iijRIZLgPHMZGMcZUboUjP7R6V7eOKtpc61JH6iWlqQys0f+kyb/F8Ff3G1U3Pgdt+uKr3m&#xA;1scuFpbH7fGtzIK0+xX9wacv2vD3xVfY3c073UcsaRvbTelSOT1KgxpICfhQqaSfZp+vFUVirHPI&#xA;2+n6k43R9X1Mqw3BpeSKafJlIxVkeKuxV2KuxVLPMmsjR9HnvVj9e52isrUGjTXMpCQxL/ruwHsN&#xA;8Vd5a0htI0W2spZBPdKGkvLgCnq3MzGWeWn+XK7NiqZ4q7FXYq7FXYq7FXYq7FXYq7FVDULCz1Cx&#xA;nsbyITWl1G0U8TdGRxQjFUi8u6leWN5/hnWZTJfwoX02+fb67aJQcyenrxVCyr3+2BRqBVkmKuxV&#xA;2KvNPO/5oeYfL19fxp5f9eys5LeOG6lFyFf15IIkkDJA8TVedwqRu0nwH4fBVk83mTW08kHXRpLr&#xA;qwi9QaSVndi3PiBxjiaf4h8VPS5D9oDfFVsVpL5q8v2lzqEM2j6vbTyPbzRh0lt54XeL1I/WRS0c&#xA;qA7MtGRqYqhIYPNmnOyXmnzaojSNILnS7z0yzSV5Fra9kiWIVavFZnA7U2GFXLrN0pU/oLzCePHY&#xA;vbmvEEb/AOk967+OKuh1eSNmZvLmvTM0XocpWt2IQ9aH61sT3brirS6vcrxA0HzDReg5256Jw/5a&#xA;fp+e+KtrrN0pB/QXmE8SpoXtyPhXjv8A6T37+JxVpNRdrWW0/wAM67MJpEncvLbJI0kITh+9N5HT&#xA;+5X9oA9+pxVqLRfMt7LH6ER8uWYSWN5munvNQKTy+tKqIWe2iYv0kLSlRsoUUwKyrTdOstNsILCy&#xA;jEVrbII4o6k0A8Sakk9STuTiqJxV2KuxVbNNFDE80zrHDGpeSRyFVVUVLMTsABirGdISXzFq0XmG&#xA;4QppFny/w/A4IMhdSj37qdxzRikIPRCW/boFWUYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBreiWWsW&#xA;f1a65oyMJLe5hb054JVrxlhkG6uK/SKg1BIxVJovMmoaGwtfNYC29eNv5hiXjaSDt9aAr9VfxLfu&#xA;z2YE8QqyeORJEWSNg6OAyOpqCDuCCMVbxVSubS1uovSuoY54qg+nKodajoaMCMVVcVdirsVdirsV&#xA;dirsVdirsVdirsVdiqX6z5g0fRoo31G5WJpjwtoAC80z/wAkMKBpJG9lUnFUlGl6n5ndZdetzZaC&#xA;pDwaGxBluCpDI98VJXiKVECkj+cn7IVZUAAKDYDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq4gE&#xA;EEVB2IOKsebyRpcMjS6PPdaHK5LN+j5AkJJNS31WVZbXkT39KuKtrpfnSFSsOv203wkK15p/qNy7&#xA;E/V7i1B+4YqpfUPzJ/6vujf9we6/7yeKu+ofmT/1fdG/7g91/wB5PFXfUPzJ/wCr7o3/AHB7r/vJ&#xA;4q76h+ZP/V90b/uD3X/eTxV31D8yf+r7o3/cHuv+8niqyaz/ADLSF3TW9GdlUsqfoi6FSBUCv6T2&#xA;rirobP8AMt4Ud9b0ZGZQzJ+iLo0JFSK/pPemKr/qH5k/9X3Rv+4Pdf8AeTxV31D8yf8Aq+6N/wBw&#xA;e6/7yeKu+ofmT/1fdG/7g91/3k8Vd9Q/Mn/q+6N/3B7r/vJ4qvhsfzDEgM2t6Q8fdU0m5Q/edSf9&#xA;WKrj5f8AMVwAL7zHOqftR2FvBbBh4FpFuZR/sHU++KovSfK+h6VM9za23K+kHGa/nd7i6devF7iY&#xA;vKV8F5UHYYqmuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqN4AbSc&#xA;FQwMbgqx4g/CdidqD3xV1mALSABQoEaAKp5AfCNgd6j3xVWxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqN5/vJPXjT03/vPsfZP2qdvHFXWf+8k&#xA;FONPTT+7+x9kfZr28MVVsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWySR&#xA;xRtJIwSNAWd2IChQKkknoBiqAi1/TJeHAzEPw4H6vOAfVJC0JT238O+KuHmDTSiuDPRgCP8ARrit&#xA;Gf0xt6dftD7t+mKubX9NVWYmeigs1La4JoH4dBH/ADH+PTFVWLV7CW5S2Dss0hkWNZI5IwzRfbVW&#xA;dVBPU0B3AJGwOKozFUl8zXGpAadY6fc/UptTu/qzXgRJHiRbea4Zo1kDJzPocRyUgVrQ4qojyNob&#xA;kPeveajLUEveXlxKpINaiLmIV+SoBiqr/gryr/1bYfuP9cbVjnmT/Amg61penaho6C01KG5llvwC&#xA;YrcW8lvEDPv8MbtdKvPoppXbcFXRf4En83R+WrLSEnKxTPc3qA/V4pIPTrbhq/FIBKCwH2dq7nFD&#xA;I/8ABXlX/q2w/cf64LSsfyL5ZLc4raS1kpT1LS5uLVu/7UEkZ74qhrB9R0nzZa6E99NqGn39jd3s&#xA;Bu+LTQPZzW0ZQSqqtIji8r+8qwK/aoaBVk+KuxV2KuxV2KuxV2KuxV2KuxV4p+gvzVk8s2em2ml3&#xA;2lXbTapcX0sd/awsb++mM9rcvJBcM728DSyepH1aijgwriqN17RfzWk0fUktItQm1ee9uhJPFqMc&#xA;Eclp6dwbAWaieNYFST0PWPFJG+L7QxVSvfKX5lW/kK4tbKCeXV9T1O+udTjgu44Lp4vRkgsmNz6q&#xA;D4jDbtLR+RWo8VwqlfmLyB+ZVxA2iQW13NoFlZW9lb21tfx28E9rCtinpCL14v3vw3TM0gANFXlQ&#xA;7qsk0vRfzNhl82z3Md07tp1zbaDbyXyywTT+tcC2MSvM3pcbdYAzycWZixYnArGJ/wAuPzJs/MMs&#xA;WkG/sdFf6tam4sbtOXo2tnbRQNGj3lt6aRSi4JXiw3H7uRaUKoy08pfm/Fdtez3erVmeeSSKPUIp&#xA;fSE9ve/DFDNcCAlJZrZUBoq8KjucVemfl7Y65Y+TtOtteWRdWRX+tCW4kupKmRipaWSW4bkUoSok&#xA;ZVPwqaAYFTfWK/om9oSD9XloVbgw+A9GoeJ98VUI9d0pIE9W6RXVTzDEk1joH7b0J3xVVbW9JUsD&#xA;dRgpy5Cu44AM23sDirQ1zSC3EXSFgaEA9wvOn/AmuKoeXUbO7vNOW1mWXjcFn4Fdla1lIryFe4+z&#xA;v9FcVTbFUg823UVi+jalcBhZWN+ZLyZVZxFHJaXEAkcKCQgklXk3QDc7Yqm9jqOn6hbrc2FzFd27&#xA;fZmgdZEPyZCRiqIxVh3nLy1r2seY9KawlS101rDUbDV7sgNKkN3LZvwhRqj1JBbMvJhRRU9aAqoT&#xA;QvI2oeXvNGmQ6cUfylY296LOJj+/tZLlomMJY7yxkxllY/ENwa7YqzzFWpJEjRnkYIiirMxoAB3J&#xA;OKsTg1Gy1j8wLG70qZL2z0zTNQtr26gPOFJ7q4smii9RaoX42shZQarTelRirLcVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYdrH/Kpv0gf0n+hv0pXfl9X+t1qP&#xA;5f3v2qYqpf8AIK/+XT/hsKHf8gr/AOXT/hsVd/yCv/l0/wCGxV3/ACCv/l0/4bFVn/IGvrSev+hv&#xA;rO3o/XPR5V3p6fr9+v2cUs1tvq31eP6rw+r0HpelThx7ceO1MCqmKuxV2KuxV2KuxV2KuxV2KuxV&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Distiller 9.0.0 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F87F117407206811A219E07490F06740</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F87F117407206811A219E07490F06740</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:32ffadc2-e473-48f3-bc52-ad436dcc9145</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:4b464059-2996-41d3-90e6-daa27b41a9f0</stRef:instanceID>
            <stRef:documentID>uuid:32ffadc2-e473-48f3-bc52-ad436dcc9145</stRef:documentID>
            <stRef:originalDocumentID>uuid:32ffadc2-e473-48f3-bc52-ad436dcc9145</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811A219E07490F06740</stEvt:instanceID>
                  <stEvt:when>2014-03-23T12:10:45-06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>30.409444</stDim:w>
            <stDim:h>27.904722</stDim:h>
            <stDim:unit>Centimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CourierNewPS-BoldMT</stFnt:fontName>
                  <stFnt:fontFamily>Courier New</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Courier New Bold.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-SemiboldIt</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Semibold Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-SemiboldIt.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -769.08 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 769.08 li
844.139 769.08 li
844.139 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2.04 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
329.939 58.6807 mo
328.259 60.4199 327.419 62.46 327.419 64.8604 cv
327.419 67.2607 328.259 69.3008 329.939 71.04 cv
331.679 72.7803 333.719 73.6201 336.12 73.6201 cv
338.519 73.6201 340.559 72.7803 342.299 71.04 cv
344.04 69.3008 344.879 67.2607 344.879 64.8604 cv
344.879 62.46 344.04 60.4199 342.299 58.6807 cv
340.559 56.9404 338.519 56.1006 336.12 56.1006 cv
333.719 56.1006 331.679 56.9404 329.939 58.6807 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
382.439 63.8408 mo
345.78 63.8408 li
@
336.419 123.96 mo
338.82 123.96 340.86 123.12 342.599 121.38 cv
344.339 119.641 345.179 117.601 345.179 115.2 cv
345.179 112.801 344.339 110.761 342.599 109.021 cv
340.86 107.28 338.82 106.44 336.419 106.44 cv
334.019 106.44 331.979 107.28 330.299 109.021 cv
328.559 110.761 327.719 112.801 327.719 115.2 cv
327.719 117.601 328.559 119.641 330.299 121.38 cv
331.979 123.12 334.019 123.96 336.419 123.96 cv
@
382.559 114.181 mo
345.959 114.181 li
@
634.079 215.341 mo
634.079 415.98 li
321.299 415.98 li
321.299 215.341 li
634.079 215.341 li
cp
@
94.9194 279 mo
93.1792 280.681 92.3394 282.721 92.3394 285.12 cv
92.3394 287.521 93.1792 289.561 94.9194 291.301 cv
96.6597 293.04 98.6997 293.88 101.099 293.88 cv
103.5 293.88 105.54 293.04 107.28 291.301 cv
109.019 289.561 109.86 287.521 109.86 285.12 cv
109.86 284.641 li
109.679 282.42 108.839 280.561 107.28 279 cv
105.54 277.261 103.5 276.42 101.099 276.42 cv
98.6997 276.42 96.6597 277.261 94.9194 279 cv
@
95.6997 347.341 mo
93.9595 349.08 93.1196 351.12 93.1196 353.521 cv
93.1196 355.92 93.9595 357.96 95.6997 359.7 cv
97.439 361.44 99.479 362.28 101.879 362.28 cv
104.28 362.28 106.32 361.44 108.059 359.7 cv
109.74 357.96 110.58 355.92 110.58 353.521 cv
110.58 352.5 li
110.339 350.521 109.5 348.841 108.059 347.341 cv
106.32 345.66 104.28 344.82 101.879 344.82 cv
99.479 344.82 97.439 345.66 95.6997 347.341 cv
@
276.059 244.141 mo
276.059 284.521 li
109.86 284.641 li
@
110.58 352.5 mo
275.699 352.5 li
275.699 385.74 li
@
294.659 733.801 mo
294.839 733.62 295.079 733.501 295.379 733.501 cv
295.679 733.501 295.919 733.62 296.099 733.801 cv
296.398 734.521 li
296.099 735.24 li
295.379 735.541 li
295.079 735.541 294.839 735.421 294.659 735.24 cv
294.479 735.061 294.359 734.82 294.359 734.521 cv
294.359 734.221 294.479 733.98 294.659 733.801 cv
cp
289.499 733.801 mo
289.679 733.62 289.919 733.501 290.219 733.501 cv
290.519 733.501 290.759 733.62 290.938 733.801 cv
291.239 734.521 li
290.938 735.24 li
290.219 735.541 li
289.919 735.541 289.679 735.421 289.499 735.24 cv
289.319 735.061 289.199 734.82 289.199 734.521 cv
289.199 734.221 289.319 733.98 289.499 733.801 cv
cp
285.779 733.801 mo
286.079 734.521 li
285.779 735.24 li
285.059 735.541 li
284.339 735.24 li
284.159 735.061 284.039 734.82 284.039 734.521 cv
284.039 734.221 284.159 733.98 284.339 733.801 cv
284.519 733.62 284.759 733.501 285.059 733.501 cv
285.359 733.501 285.599 733.62 285.779 733.801 cv
cp
279.239 733.801 mo
279.419 733.62 279.659 733.501 279.959 733.501 cv
280.199 733.501 280.438 733.62 280.679 733.801 cv
280.979 734.521 li
280.679 735.24 li
279.959 735.541 li
279.239 735.24 li
278.999 735.061 278.879 734.82 278.879 734.521 cv
278.879 734.221 278.999 733.98 279.239 733.801 cv
cp
316.619 733.801 mo
316.979 734.521 li
316.619 735.24 li
316.438 735.421 316.199 735.541 315.898 735.541 cv
315.179 735.24 li
314.999 735.061 314.879 734.82 314.879 734.521 cv
314.879 734.221 314.999 733.98 315.179 733.801 cv
315.419 733.62 315.659 733.501 315.898 733.501 cv
316.199 733.501 316.438 733.62 316.619 733.801 cv
cp
310.079 733.801 mo
310.259 733.62 310.499 733.501 310.799 733.501 cv
311.099 733.501 311.339 733.62 311.519 733.801 cv
311.819 734.521 li
311.519 735.24 li
310.799 735.541 li
310.079 735.24 li
309.898 735.061 309.779 734.82 309.779 734.521 cv
309.779 734.221 309.898 733.98 310.079 733.801 cv
cp
306.359 733.801 mo
306.659 734.521 li
306.359 735.24 li
305.639 735.541 li
304.919 735.24 li
304.739 735.061 304.619 734.82 304.619 734.521 cv
304.619 734.221 304.739 733.98 304.919 733.801 cv
305.099 733.62 305.339 733.501 305.639 733.501 cv
305.938 733.501 306.179 733.62 306.359 733.801 cv
cp
299.759 733.801 mo
299.938 733.62 300.179 733.501 300.479 733.501 cv
300.779 733.501 301.019 733.62 301.199 733.801 cv
301.499 734.521 li
301.199 735.24 li
300.479 735.541 li
300.179 735.541 299.938 735.421 299.759 735.24 cv
299.459 734.521 li
299.459 734.221 299.579 733.98 299.759 733.801 cv
cp
253.499 733.801 mo
253.679 733.62 253.919 733.501 254.219 733.501 cv
254.519 733.501 254.759 733.62 254.938 733.801 cv
255.239 734.521 li
254.938 735.24 li
254.219 735.541 li
253.499 735.24 li
253.319 735.061 253.199 734.82 253.199 734.521 cv
253.199 734.221 253.319 733.98 253.499 733.801 cv
cp
248.339 733.801 mo
248.519 733.62 248.759 733.501 249.059 733.501 cv
249.359 733.501 249.599 733.62 249.779 733.801 cv
250.079 734.521 li
249.779 735.24 li
249.059 735.541 li
248.759 735.541 248.519 735.421 248.339 735.24 cv
248.159 735.061 248.039 734.82 248.039 734.521 cv
248.039 734.221 248.159 733.98 248.339 733.801 cv
cp
244.679 733.801 mo
244.979 734.521 li
244.679 735.24 li
243.959 735.541 li
243.659 735.541 243.419 735.421 243.239 735.24 cv
242.999 735.061 242.879 734.82 242.879 734.521 cv
242.879 734.221 242.999 733.98 243.239 733.801 cv
243.419 733.62 243.659 733.501 243.959 733.501 cv
244.199 733.501 244.438 733.62 244.679 733.801 cv
cp
238.079 733.801 mo
238.259 733.62 238.499 733.501 238.799 733.501 cv
239.099 733.501 239.339 733.62 239.519 733.801 cv
239.819 734.521 li
239.519 735.24 li
239.339 735.421 239.099 735.541 238.799 735.541 cv
238.079 735.24 li
237.898 735.061 237.779 734.82 237.779 734.521 cv
237.779 734.221 237.898 733.98 238.079 733.801 cv
cp
237.419 738.24 mo
236.699 738.601 li
236.398 738.601 236.159 738.48 235.979 738.24 cv
235.799 738.061 235.679 737.82 235.679 737.521 cv
235.679 737.28 235.799 737.041 235.979 736.801 cv
236.159 736.62 236.398 736.501 236.699 736.501 cv
237.419 736.801 li
237.719 737.521 li
237.419 738.24 li
cp
236.699 741.66 mo
237.419 741.961 li
237.719 742.681 li
237.419 743.4 li
236.699 743.7 li
236.398 743.7 236.159 743.58 235.979 743.4 cv
235.799 743.221 235.679 742.98 235.679 742.681 cv
235.679 742.381 235.799 742.141 235.979 741.961 cv
236.159 741.78 236.398 741.66 236.699 741.66 cv
cp
235.979 747.12 mo
236.159 746.94 236.398 746.82 236.699 746.82 cv
237.419 747.12 li
237.719 747.841 li
237.419 748.561 li
236.699 748.86 li
236.398 748.86 236.159 748.74 235.979 748.561 cv
235.799 748.381 235.679 748.141 235.679 747.841 cv
235.679 747.541 235.799 747.301 235.979 747.12 cv
cp
235.979 752.28 mo
236.159 752.041 236.398 751.921 236.699 751.921 cv
237.419 752.28 li
237.719 753.001 li
237.419 753.721 li
236.699 754.021 li
236.398 754.021 236.159 753.9 235.979 753.721 cv
235.799 753.48 235.679 753.24 235.679 753.001 cv
235.679 752.7 235.799 752.461 235.979 752.28 cv
cp
275.519 733.801 mo
275.819 734.521 li
275.519 735.24 li
274.799 735.541 li
274.499 735.541 274.259 735.421 274.079 735.24 cv
273.898 735.061 273.779 734.82 273.779 734.521 cv
273.779 734.221 273.898 733.98 274.079 733.801 cv
274.259 733.62 274.499 733.501 274.799 733.501 cv
275.099 733.501 275.339 733.62 275.519 733.801 cv
cp
268.919 733.801 mo
269.099 733.62 269.339 733.501 269.639 733.501 cv
269.938 733.501 270.179 733.62 270.359 733.801 cv
270.659 734.521 li
270.359 735.24 li
270.179 735.421 269.938 735.541 269.639 735.541 cv
268.919 735.24 li
268.619 734.521 li
268.619 734.221 268.739 733.98 268.919 733.801 cv
cp
265.199 733.801 mo
265.559 734.521 li
265.199 735.24 li
264.479 735.541 li
264.239 735.541 263.999 735.421 263.759 735.24 cv
263.579 735.061 263.459 734.82 263.459 734.521 cv
263.459 734.221 263.579 733.98 263.759 733.801 cv
263.999 733.62 264.239 733.501 264.479 733.501 cv
264.779 733.501 265.019 733.62 265.199 733.801 cv
cp
258.659 733.801 mo
258.839 733.62 259.079 733.501 259.379 733.501 cv
260.099 733.801 li
260.398 734.521 li
260.099 735.24 li
259.379 735.541 li
259.079 735.541 258.839 735.421 258.659 735.24 cv
258.479 735.061 258.359 734.82 258.359 734.521 cv
258.359 734.221 258.479 733.98 258.659 733.801 cv
cp
268.259 761.521 mo
268.559 762.24 li
268.259 762.961 li
267.539 763.261 li
267.239 763.261 266.999 763.141 266.819 762.961 cv
266.639 762.78 266.519 762.541 266.519 762.24 cv
266.519 761.94 266.639 761.7 266.819 761.521 cv
266.999 761.341 267.239 761.221 267.539 761.221 cv
267.839 761.221 268.079 761.341 268.259 761.521 cv
cp
271.979 761.521 mo
272.159 761.341 272.398 761.221 272.699 761.221 cv
272.999 761.221 273.239 761.341 273.419 761.521 cv
273.719 762.24 li
273.419 762.961 li
272.699 763.261 li
272.398 763.261 272.159 763.141 271.979 762.961 cv
271.799 762.78 271.679 762.541 271.679 762.24 cv
271.679 761.94 271.799 761.7 271.979 761.521 cv
cp
256.559 761.521 mo
256.739 761.341 256.979 761.221 257.279 761.221 cv
257.519 761.221 257.759 761.341 257.999 761.521 cv
258.299 762.24 li
257.999 762.961 li
257.279 763.261 li
256.559 762.961 li
256.319 762.78 256.199 762.541 256.199 762.24 cv
256.199 761.94 256.319 761.7 256.559 761.521 cv
cp
261.659 761.521 mo
261.839 761.341 262.079 761.221 262.379 761.221 cv
262.679 761.221 262.919 761.341 263.099 761.521 cv
263.398 762.24 li
263.099 762.961 li
262.379 763.261 li
261.659 762.961 li
261.479 762.78 261.359 762.541 261.359 762.24 cv
261.359 761.94 261.479 761.7 261.659 761.521 cv
cp
247.679 761.521 mo
247.979 762.24 li
247.679 762.961 li
247.499 763.141 247.259 763.261 246.959 763.261 cv
246.239 762.961 li
245.938 762.24 li
245.938 761.94 246.059 761.7 246.239 761.521 cv
246.419 761.341 246.659 761.221 246.959 761.221 cv
247.259 761.221 247.499 761.341 247.679 761.521 cv
cp
251.398 761.521 mo
251.579 761.341 251.819 761.221 252.119 761.221 cv
252.419 761.221 252.659 761.341 252.839 761.521 cv
253.139 762.24 li
252.839 762.961 li
252.119 763.261 li
251.819 763.261 251.579 763.141 251.398 762.961 cv
251.219 762.78 251.099 762.541 251.099 762.24 cv
251.099 761.94 251.219 761.7 251.398 761.521 cv
cp
235.979 757.381 mo
236.159 757.2 236.398 757.08 236.699 757.08 cv
237.419 757.381 li
237.719 758.101 li
237.419 758.82 li
236.699 759.12 li
236.398 759.12 236.159 759.001 235.979 758.82 cv
235.799 758.641 235.679 758.4 235.679 758.101 cv
235.679 757.801 235.799 757.561 235.979 757.381 cv
cp
237.419 761.521 mo
237.719 762.24 li
237.419 762.961 li
236.699 763.261 li
236.398 763.261 236.159 763.141 235.979 762.961 cv
235.799 762.78 235.679 762.541 235.679 762.24 cv
235.679 761.94 235.799 761.7 235.979 761.521 cv
236.159 761.341 236.398 761.221 236.699 761.221 cv
237.419 761.521 li
cp
241.079 761.521 mo
241.319 761.341 241.559 761.221 241.799 761.221 cv
242.099 761.221 242.339 761.341 242.519 761.521 cv
242.879 762.24 li
242.519 762.961 li
241.799 763.261 li
241.559 763.261 241.319 763.141 241.079 762.961 cv
240.898 762.78 240.779 762.541 240.779 762.24 cv
240.779 761.94 240.898 761.7 241.079 761.521 cv
cp
309.419 761.521 mo
309.719 762.24 li
309.419 762.961 li
308.699 763.261 li
308.398 763.261 308.159 763.141 307.979 762.961 cv
307.739 762.78 307.619 762.541 307.619 762.24 cv
307.619 761.94 307.739 761.7 307.979 761.521 cv
308.159 761.341 308.398 761.221 308.699 761.221 cv
308.938 761.221 309.179 761.341 309.419 761.521 cv
cp
314.819 762.24 mo
314.519 762.961 li
313.799 763.261 li
313.499 763.261 313.259 763.141 313.079 762.961 cv
312.898 762.78 312.779 762.541 312.779 762.24 cv
312.779 761.94 312.898 761.7 313.079 761.521 cv
313.259 761.341 313.499 761.221 313.799 761.221 cv
314.519 761.521 li
314.819 762.24 li
cp
297.659 761.521 mo
297.839 761.341 298.079 761.221 298.379 761.221 cv
298.679 761.221 298.919 761.341 299.099 761.521 cv
299.398 762.24 li
299.099 762.961 li
298.379 763.261 li
298.079 763.261 297.839 763.141 297.659 762.961 cv
297.479 762.78 297.359 762.541 297.359 762.24 cv
297.359 761.94 297.479 761.7 297.659 761.521 cv
cp
302.819 761.521 mo
302.999 761.341 303.239 761.221 303.539 761.221 cv
303.839 761.221 304.079 761.341 304.259 761.521 cv
304.559 762.24 li
304.259 762.961 li
303.539 763.261 li
303.239 763.261 302.999 763.141 302.819 762.961 cv
302.639 762.78 302.519 762.541 302.519 762.24 cv
302.519 761.94 302.639 761.7 302.819 761.521 cv
cp
288.839 761.521 mo
289.139 762.24 li
288.839 762.961 li
288.119 763.261 li
287.398 762.961 li
287.219 762.78 287.099 762.541 287.099 762.24 cv
287.099 761.94 287.219 761.7 287.398 761.521 cv
287.579 761.341 287.819 761.221 288.119 761.221 cv
288.419 761.221 288.659 761.341 288.839 761.521 cv
cp
292.559 761.521 mo
292.739 761.341 292.979 761.221 293.279 761.221 cv
293.519 761.221 293.759 761.341 293.999 761.521 cv
294.299 762.24 li
293.999 762.961 li
293.759 763.141 293.519 763.261 293.279 763.261 cv
292.559 762.961 li
292.319 762.78 292.199 762.541 292.199 762.24 cv
292.199 761.94 292.319 761.7 292.559 761.521 cv
cp
278.519 761.521 mo
278.879 762.24 li
278.519 762.961 li
277.799 763.261 li
277.559 763.261 277.319 763.141 277.079 762.961 cv
276.779 762.24 li
276.779 761.94 276.898 761.7 277.079 761.521 cv
277.319 761.341 277.559 761.221 277.799 761.221 cv
278.099 761.221 278.339 761.341 278.519 761.521 cv
cp
282.239 761.521 mo
282.419 761.341 282.659 761.221 282.959 761.221 cv
283.259 761.221 283.499 761.341 283.679 761.521 cv
283.979 762.24 li
283.679 762.961 li
282.959 763.261 li
282.239 762.961 li
282.059 762.78 281.938 762.541 281.938 762.24 cv
281.938 761.94 282.059 761.7 282.239 761.521 cv
cp
330.659 733.801 mo
330.839 733.62 331.079 733.501 331.379 733.501 cv
331.619 733.501 331.859 733.62 332.099 733.801 cv
332.398 734.521 li
332.099 735.24 li
331.379 735.541 li
331.079 735.541 330.839 735.421 330.659 735.24 cv
330.419 735.061 330.299 734.82 330.299 734.521 cv
330.299 734.221 330.419 733.98 330.659 733.801 cv
cp
335.459 736.561 mo
335.159 737.28 li
334.979 737.461 334.739 737.58 334.438 737.58 cv
333.719 737.28 li
333.419 736.561 li
333.419 736.261 333.539 736.021 333.719 735.841 cv
333.898 735.66 334.139 735.541 334.438 735.541 cv
334.739 735.541 334.979 735.66 335.159 735.841 cv
335.459 736.561 li
cp
335.159 741.001 mo
335.459 741.721 li
335.159 742.44 li
334.979 742.62 334.739 742.74 334.438 742.74 cv
333.719 742.44 li
333.419 741.721 li
333.419 741.421 333.539 741.181 333.719 741.001 cv
333.898 740.82 334.139 740.7 334.438 740.7 cv
334.739 740.7 334.979 740.82 335.159 741.001 cv
cp
326.938 733.801 mo
327.239 734.521 li
326.938 735.24 li
326.219 735.541 li
325.919 735.541 325.679 735.421 325.499 735.24 cv
325.319 735.061 325.199 734.82 325.199 734.521 cv
325.199 734.221 325.319 733.98 325.499 733.801 cv
325.679 733.62 325.919 733.501 326.219 733.501 cv
326.519 733.501 326.759 733.62 326.938 733.801 cv
cp
320.339 733.801 mo
320.519 733.62 320.759 733.501 321.059 733.501 cv
321.359 733.501 321.599 733.62 321.779 733.801 cv
322.079 734.521 li
321.779 735.24 li
321.059 735.541 li
320.759 735.541 320.519 735.421 320.339 735.24 cv
320.159 735.061 320.039 734.82 320.039 734.521 cv
320.039 734.221 320.159 733.98 320.339 733.801 cv
cp
335.459 746.881 mo
335.159 747.601 li
334.979 747.78 334.739 747.9 334.438 747.9 cv
333.719 747.601 li
333.419 746.881 li
333.419 746.58 333.539 746.341 333.719 746.16 cv
333.898 745.921 334.139 745.801 334.438 745.801 cv
334.739 745.801 334.979 745.921 335.159 746.16 cv
335.459 746.881 li
cp
335.159 751.261 mo
335.459 751.98 li
335.159 752.7 li
334.979 752.881 334.739 753.001 334.438 753.001 cv
333.719 752.7 li
333.419 751.98 li
333.419 751.681 333.539 751.44 333.719 751.261 cv
333.898 751.08 334.139 750.961 334.438 750.961 cv
334.739 750.961 334.979 751.08 335.159 751.261 cv
cp
335.459 757.141 mo
335.159 757.86 li
334.979 758.041 334.739 758.16 334.438 758.16 cv
333.719 757.86 li
333.419 757.141 li
333.419 756.841 333.539 756.601 333.719 756.421 cv
333.898 756.24 334.139 756.12 334.438 756.12 cv
334.739 756.12 334.979 756.24 335.159 756.421 cv
335.459 757.141 li
cp
333.659 761.521 mo
333.839 761.341 334.079 761.221 334.379 761.221 cv
334.679 761.221 334.919 761.341 335.099 761.521 cv
335.398 762.24 li
335.099 762.961 li
334.379 763.261 li
334.079 763.261 333.839 763.141 333.659 762.961 cv
333.479 762.78 333.359 762.541 333.359 762.24 cv
333.359 761.94 333.479 761.7 333.659 761.521 cv
cp
329.938 761.521 mo
330.299 762.24 li
329.938 762.961 li
329.219 763.261 li
328.979 763.261 328.739 763.141 328.499 762.961 cv
328.319 762.78 328.199 762.541 328.199 762.24 cv
328.199 761.94 328.319 761.7 328.499 761.521 cv
328.739 761.341 328.979 761.221 329.219 761.221 cv
329.519 761.221 329.759 761.341 329.938 761.521 cv
cp
319.679 761.521 mo
319.979 762.24 li
319.679 762.961 li
319.499 763.141 319.259 763.261 318.959 763.261 cv
318.239 762.961 li
318.059 762.78 317.938 762.541 317.938 762.24 cv
317.938 761.94 318.059 761.7 318.239 761.521 cv
318.419 761.341 318.659 761.221 318.959 761.221 cv
319.259 761.221 319.499 761.341 319.679 761.521 cv
cp
325.139 762.24 mo
324.839 762.961 li
324.659 763.141 324.419 763.261 324.119 763.261 cv
323.398 762.961 li
323.219 762.78 323.099 762.541 323.099 762.24 cv
323.099 761.94 323.219 761.7 323.398 761.521 cv
323.579 761.341 323.819 761.221 324.119 761.221 cv
324.419 761.221 324.659 761.341 324.839 761.521 cv
325.139 762.24 li
ef
315.78 2.04004 mo
623.639 2.04004 li
659.399 2.04004 689.939 16.3799 715.319 45 cv
740.579 73.6807 753.239 108.301 753.239 148.801 cv
753.239 496.681 li
753.239 537.181 740.579 571.801 715.319 600.541 cv
689.939 629.16 659.339 643.44 623.639 643.44 cv
315.779 643.44 li
280.019 643.44 249.479 629.16 224.159 600.541 cv
198.659 571.801 185.938 537.181 185.939 496.681 cv
185.939 148.801 li
185.939 108.301 198.66 73.7402 224.16 45 cv
249.479 16.3799 280.019 2.04004 315.78 2.04004 cv
cp
623.639 0 mo
315.78 0 li
279.36 0 248.339 14.5801 222.599 43.6807 cv
196.799 72.7803 183.899 107.82 183.899 148.801 cv
183.899 496.681 li
183.898 537.66 196.799 572.761 222.599 601.86 cv
248.339 630.961 279.419 645.48 315.779 645.48 cv
623.639 645.48 li
659.939 645.48 691.02 630.961 716.879 601.86 cv
742.499 572.761 755.279 537.66 755.279 496.681 cv
755.279 148.801 li
755.279 107.761 742.499 72.7207 716.879 43.6807 cv
691.079 14.5801 659.999 0 623.639 0 cv
cp
315.78 0 mo
315.78 0 li
cp
224.16 45 mo
224.16 45 li
cp
222.599 43.6807 mo
222.599 43.6807 li
cp
185.939 148.801 mo
185.939 148.801 li
cp
183.899 148.801 mo
183.899 148.801 li
cp
185.939 496.681 mo
185.939 496.681 li
cp
183.899 496.681 mo
183.899 496.681 li
cp
224.159 600.541 mo
224.159 600.541 li
cp
222.599 601.86 mo
222.599 601.86 li
cp
315.779 643.44 mo
315.779 643.44 li
cp
315.779 645.48 mo
315.779 645.48 li
cp
623.639 643.44 mo
623.639 643.44 li
cp
623.639 645.48 mo
623.639 645.48 li
cp
715.319 600.541 mo
715.319 600.541 li
cp
716.879 601.86 mo
716.879 601.86 li
cp
753.239 496.681 mo
753.239 496.681 li
cp
755.279 496.681 mo
755.279 496.681 li
cp
753.239 148.801 mo
753.239 148.801 li
cp
755.279 148.801 mo
755.279 148.801 li
cp
715.319 45 mo
715.319 45 li
cp
716.879 43.6807 mo
716.879 43.6807 li
cp
623.639 2.04004 mo
623.639 2.04004 li
f
346.86 233.82 mo
346.86 252.9 li
414.12 252.9 li
414.12 233.82 li
346.86 233.82 li
cp
0 0 0 0 cmyk
f
409.62 233.82 mo
409.259 234.601 li
409.08 234.841 408.78 234.96 408.479 234.96 cv
407.7 234.601 li
407.519 234.36 407.399 234.12 407.399 233.82 cv
407.399 233.521 407.519 233.28 407.7 233.04 cv
408.479 232.681 li
408.78 232.681 409.08 232.801 409.259 233.04 cv
409.62 233.82 li
cp
412.979 233.82 mo
412.979 233.521 413.099 233.28 413.339 233.04 cv
414.12 232.681 li
414.419 232.681 414.66 232.801 414.899 233.04 cv
415.2 233.82 li
414.899 234.601 li
414.66 234.841 414.419 234.96 414.12 234.96 cv
413.339 234.601 li
413.099 234.36 412.979 234.12 412.979 233.82 cv
cp
404.04 233.82 mo
403.679 234.601 li
402.899 234.96 li
402.599 234.96 402.299 234.841 402.12 234.601 cv
401.879 234.36 401.759 234.12 401.759 233.82 cv
401.759 233.521 401.879 233.28 402.12 233.04 cv
402.299 232.801 402.599 232.681 402.899 232.681 cv
403.679 233.04 li
404.04 233.82 li
cp
413.339 237.54 mo
413.519 237.301 413.82 237.181 414.12 237.181 cv
414.419 237.181 414.66 237.301 414.899 237.54 cv
415.2 238.32 li
414.899 239.101 li
414.66 239.28 414.419 239.4 414.12 239.4 cv
413.339 239.101 li
413.099 238.86 412.979 238.62 412.979 238.32 cv
412.979 238.021 413.099 237.721 413.339 237.54 cv
cp
413.339 243.12 mo
413.519 242.88 413.82 242.761 414.12 242.761 cv
414.419 242.761 414.66 242.88 414.899 243.12 cv
415.2 243.9 li
414.899 244.681 li
414.66 244.92 414.419 245.04 414.12 245.04 cv
413.339 244.681 li
413.099 244.5 412.979 244.2 412.979 243.9 cv
412.979 243.601 413.099 243.36 413.339 243.12 cv
cp
398.099 233.04 mo
398.399 233.82 li
398.099 234.601 li
397.259 234.96 li
396.959 234.96 396.719 234.841 396.479 234.601 cv
396.299 234.36 396.179 234.12 396.179 233.82 cv
396.179 233.521 396.299 233.28 396.479 233.04 cv
396.719 232.801 396.959 232.681 397.259 232.681 cv
398.099 233.04 li
cp
392.82 233.82 mo
392.459 234.601 li
391.679 234.96 li
391.379 234.96 391.139 234.841 390.899 234.601 cv
390.66 234.36 390.54 234.12 390.54 233.82 cv
390.54 233.521 390.66 233.28 390.899 233.04 cv
391.139 232.801 391.379 232.681 391.679 232.681 cv
392.459 233.04 li
392.82 233.82 li
cp
395.82 252.061 mo
396.179 252.9 li
395.82 253.681 li
395.04 253.98 li
394.74 253.98 394.5 253.86 394.259 253.681 cv
394.019 253.44 393.899 253.2 393.899 252.9 cv
393.899 252.601 394.019 252.301 394.259 252.061 cv
394.5 251.88 394.74 251.761 395.04 251.761 cv
395.339 251.761 395.639 251.88 395.82 252.061 cv
cp
399.839 252.061 mo
400.08 251.88 400.32 251.761 400.62 251.761 cv
400.919 251.761 401.219 251.88 401.459 252.061 cv
401.759 252.9 li
401.459 253.681 li
401.219 253.86 400.919 253.98 400.62 253.98 cv
399.839 253.681 li
399.54 252.9 li
399.54 252.601 399.66 252.301 399.839 252.061 cv
cp
413.339 248.7 mo
413.519 248.521 413.82 248.4 414.12 248.4 cv
414.419 248.4 414.66 248.521 414.899 248.7 cv
415.2 249.48 li
414.899 250.32 li
414.66 250.5 414.419 250.62 414.12 250.62 cv
413.339 250.32 li
413.099 250.08 412.979 249.78 412.979 249.48 cv
412.979 249.181 413.099 248.94 413.339 248.7 cv
cp
407.04 252.061 mo
407.399 252.9 li
407.04 253.681 li
406.259 253.98 li
405.959 253.98 405.66 253.86 405.479 253.681 cv
405.24 253.44 405.12 253.2 405.12 252.9 cv
405.12 252.601 405.24 252.301 405.479 252.061 cv
405.66 251.88 405.959 251.761 406.259 251.761 cv
406.559 251.761 406.799 251.88 407.04 252.061 cv
cp
411.059 252.061 mo
411.299 251.88 411.54 251.761 411.839 251.761 cv
412.139 251.761 412.439 251.88 412.62 252.061 cv
412.979 252.9 li
412.62 253.681 li
411.839 253.98 li
411.059 253.681 li
410.879 253.44 410.759 253.2 410.759 252.9 cv
410.759 252.601 410.879 252.301 411.059 252.061 cv
cp
364.799 233.82 mo
364.439 234.601 li
363.66 234.96 li
363.36 234.96 363.12 234.841 362.879 234.601 cv
362.519 233.82 li
362.879 233.04 li
363.12 232.801 363.36 232.681 363.66 232.681 cv
364.439 233.04 li
364.799 233.82 li
cp
359.16 233.82 mo
359.099 234.12 358.979 234.36 358.86 234.601 cv
358.08 234.96 li
357.78 234.96 357.479 234.841 357.299 234.601 cv
357.059 234.36 356.939 234.12 356.939 233.82 cv
356.939 233.521 357.059 233.28 357.299 233.04 cv
357.479 232.801 357.78 232.681 358.08 232.681 cv
358.86 233.04 li
359.16 233.82 li
cp
353.219 233.04 mo
353.58 233.82 li
353.219 234.601 li
352.439 234.96 li
352.139 234.96 351.899 234.841 351.66 234.601 cv
351.479 234.36 351.36 234.12 351.36 233.82 cv
351.36 233.521 351.479 233.28 351.66 233.04 cv
351.899 232.801 352.139 232.681 352.439 232.681 cv
353.219 233.04 li
cp
348 233.82 mo
347.639 234.601 li
345.167 236.231 345.167 231.409 347.639 233.04 cv
348 233.82 li
cp
348 239.4 mo
347.639 240.181 li
346.86 240.54 li
346.08 240.181 li
345.719 239.4 li
346.08 238.62 li
346.32 238.44 346.559 238.32 346.86 238.32 cv
347.16 238.32 347.399 238.44 347.639 238.62 cv
348 239.4 li
cp
348 250.62 mo
347.639 251.4 li
346.86 251.761 li
346.08 251.4 li
345.719 250.62 li
346.08 249.841 li
346.32 249.601 346.559 249.48 346.86 249.48 cv
347.16 249.48 347.399 249.601 347.639 249.841 cv
348 250.62 li
cp
346.86 246.12 mo
346.08 245.82 li
345.719 245.04 li
346.08 244.261 li
346.32 244.021 346.559 243.9 346.86 243.9 cv
347.16 243.9 347.399 244.021 347.639 244.261 cv
348 245.04 li
347.639 245.82 li
347.399 245.94 347.16 246.061 346.86 246.12 cv
cp
349.439 252.061 mo
349.679 251.88 349.919 251.761 350.219 251.761 cv
350.519 251.761 350.82 251.88 351 252.061 cv
351.36 252.9 li
351 253.681 li
350.219 253.98 li
349.919 253.98 349.679 253.86 349.439 253.681 cv
349.2 253.44 349.08 253.2 349.08 252.9 cv
349.08 252.601 349.2 252.301 349.439 252.061 cv
cp
355.019 252.061 mo
355.259 251.88 355.5 251.761 355.799 251.761 cv
356.099 251.88 356.339 252 356.58 252.061 cv
356.939 252.9 li
356.58 253.681 li
355.799 253.98 li
355.5 253.98 355.259 253.86 355.019 253.681 cv
354.839 253.44 354.719 253.2 354.719 252.9 cv
354.719 252.601 354.839 252.301 355.019 252.061 cv
cp
362.219 252.061 mo
362.519 252.9 li
362.219 253.681 li
361.979 253.86 361.74 253.98 361.439 253.98 cv
360.66 253.681 li
360.419 253.44 360.299 253.2 360.299 252.9 cv
360.299 252.601 360.419 252.301 360.66 252.061 cv
360.839 251.88 361.139 251.761 361.439 251.761 cv
361.74 251.761 361.979 251.88 362.219 252.061 cv
cp
366.24 252.061 mo
366.479 251.88 366.719 251.761 367.019 251.761 cv
367.32 251.761 367.62 251.88 367.799 252.061 cv
368.16 252.9 li
367.799 253.681 li
367.62 253.86 367.32 253.98 367.019 253.98 cv
366.24 253.681 li
366.059 253.44 365.939 253.2 365.939 252.9 cv
365.939 252.601 366.059 252.301 366.24 252.061 cv
cp
386.879 233.04 mo
387.179 233.82 li
387.12 234.12 387 234.36 386.879 234.601 cv
386.099 234.96 li
385.799 234.96 385.5 234.841 385.32 234.601 cv
385.08 234.36 384.959 234.12 384.959 233.82 cv
384.959 233.521 385.08 233.28 385.32 233.04 cv
385.5 232.801 385.799 232.681 386.099 232.681 cv
386.879 233.04 li
cp
381.599 233.82 mo
381.24 234.601 li
381.059 234.841 380.759 234.96 380.459 234.96 cv
379.679 234.601 li
379.5 234.36 379.379 234.12 379.379 233.82 cv
379.379 233.521 379.5 233.28 379.679 233.04 cv
380.459 232.681 li
380.759 232.681 381.059 232.801 381.24 233.04 cv
381.599 233.82 li
cp
375.66 233.04 mo
376.019 233.82 li
375.66 234.601 li
374.879 234.96 li
374.099 234.601 li
373.86 234.36 373.74 234.12 373.74 233.82 cv
373.74 233.521 373.86 233.28 374.099 233.04 cv
374.879 232.681 li
375.66 233.04 li
cp
370.379 233.82 mo
370.08 234.601 li
369.299 234.96 li
368.459 234.601 li
368.28 234.36 368.16 234.12 368.16 233.82 cv
368.16 233.521 368.28 233.28 368.459 233.04 cv
369.299 232.681 li
370.08 233.04 li
370.379 233.82 li
cp
373.439 252.061 mo
373.74 252.9 li
373.439 253.681 li
372.66 253.98 li
372.36 253.98 372.059 253.86 371.82 253.681 cv
371.639 253.44 371.519 253.2 371.519 252.9 cv
371.519 252.601 371.639 252.301 371.82 252.061 cv
372.059 251.88 372.36 251.761 372.66 251.761 cv
372.959 251.761 373.2 251.88 373.439 252.061 cv
cp
377.459 252.061 mo
377.639 251.88 377.939 251.761 378.24 251.761 cv
378.54 251.761 378.78 251.88 379.019 252.061 cv
379.379 252.9 li
379.019 253.681 li
378.24 253.98 li
377.939 253.98 377.639 253.86 377.459 253.681 cv
377.219 253.44 377.099 253.2 377.099 252.9 cv
377.099 252.601 377.219 252.301 377.459 252.061 cv
cp
384.599 252.061 mo
384.959 252.9 li
384.599 253.681 li
383.82 253.98 li
383.04 253.681 li
382.86 253.44 382.74 253.2 382.74 252.9 cv
382.74 252.601 382.86 252.301 383.04 252.061 cv
383.28 251.88 383.519 251.761 383.82 251.761 cv
384.12 251.761 384.419 251.88 384.599 252.061 cv
cp
388.679 252.061 mo
388.86 251.88 389.16 251.761 389.459 251.761 cv
390.24 252.061 li
390.54 252.9 li
390.24 253.681 li
389.459 253.98 li
389.16 253.98 388.86 253.86 388.679 253.681 cv
388.439 253.44 388.32 253.2 388.32 252.9 cv
388.32 252.601 388.439 252.301 388.679 252.061 cv
0 0 0 1 cmyk
ef
346.86 264.601 mo
346.86 283.681 li
414.12 283.681 li
414.12 264.601 li
346.86 264.601 li
cp
0 0 0 0 cmyk
f
409.62 264.601 mo
409.259 265.381 li
409.08 265.62 408.78 265.74 408.479 265.74 cv
407.7 265.381 li
407.519 265.141 407.399 264.9 407.399 264.601 cv
407.399 264.301 407.519 264.061 407.7 263.82 cv
408.479 263.46 li
408.78 263.46 409.08 263.58 409.259 263.82 cv
409.62 264.601 li
cp
412.979 264.601 mo
412.979 264.301 413.099 264.061 413.339 263.82 cv
414.12 263.46 li
414.419 263.46 414.66 263.58 414.899 263.82 cv
415.2 264.601 li
414.899 265.381 li
414.66 265.62 414.419 265.74 414.12 265.74 cv
413.339 265.381 li
413.099 265.141 412.979 264.9 412.979 264.601 cv
cp
404.04 264.601 mo
403.679 265.381 li
402.899 265.74 li
402.599 265.74 402.299 265.62 402.12 265.381 cv
401.879 265.141 401.759 264.9 401.759 264.601 cv
401.759 264.301 401.879 264.061 402.12 263.82 cv
402.299 263.58 402.599 263.46 402.899 263.46 cv
403.679 263.82 li
404.04 264.601 li
cp
413.339 268.32 mo
413.519 268.08 413.82 267.96 414.12 267.96 cv
414.419 267.96 414.66 268.08 414.899 268.32 cv
415.2 269.101 li
414.899 269.881 li
414.66 270.061 414.419 270.181 414.12 270.181 cv
413.339 269.881 li
413.099 269.641 412.979 269.4 412.979 269.101 cv
412.979 268.801 413.099 268.5 413.339 268.32 cv
cp
413.339 273.9 mo
413.519 273.66 413.82 273.54 414.12 273.54 cv
414.419 273.54 414.66 273.66 414.899 273.9 cv
415.2 274.681 li
414.899 275.46 li
414.66 275.7 414.419 275.82 414.12 275.82 cv
413.339 275.46 li
413.099 275.28 412.979 274.98 412.979 274.681 cv
412.979 274.381 413.099 274.141 413.339 273.9 cv
cp
398.099 263.82 mo
398.399 264.601 li
398.099 265.381 li
397.259 265.74 li
396.959 265.74 396.719 265.62 396.479 265.381 cv
396.299 265.141 396.179 264.9 396.179 264.601 cv
396.179 264.301 396.299 264.061 396.479 263.82 cv
396.719 263.58 396.959 263.46 397.259 263.46 cv
398.099 263.82 li
cp
392.82 264.601 mo
392.459 265.381 li
391.679 265.74 li
391.379 265.74 391.139 265.62 390.899 265.381 cv
390.66 265.141 390.54 264.9 390.54 264.601 cv
390.54 264.301 390.66 264.061 390.899 263.82 cv
391.139 263.58 391.379 263.46 391.679 263.46 cv
392.459 263.82 li
392.82 264.601 li
cp
395.82 282.841 mo
396.179 283.681 li
395.82 284.46 li
395.04 284.761 li
394.74 284.761 394.5 284.641 394.259 284.46 cv
394.019 284.221 393.899 283.98 393.899 283.681 cv
393.899 283.381 394.019 283.08 394.259 282.841 cv
394.5 282.66 394.74 282.54 395.04 282.54 cv
395.339 282.54 395.639 282.66 395.82 282.841 cv
cp
399.839 282.841 mo
400.08 282.66 400.32 282.54 400.62 282.54 cv
400.919 282.54 401.219 282.66 401.459 282.841 cv
401.759 283.681 li
401.459 284.46 li
401.219 284.641 400.919 284.761 400.62 284.761 cv
399.839 284.46 li
399.54 283.681 li
399.54 283.381 399.66 283.08 399.839 282.841 cv
cp
413.339 279.48 mo
413.519 279.301 413.82 279.181 414.12 279.181 cv
414.419 279.181 414.66 279.301 414.899 279.48 cv
415.2 280.261 li
414.899 281.101 li
414.66 281.28 414.419 281.4 414.12 281.4 cv
413.339 281.101 li
413.099 280.86 412.979 280.561 412.979 280.261 cv
412.979 279.96 413.099 279.721 413.339 279.48 cv
cp
407.04 282.841 mo
407.399 283.681 li
407.04 284.46 li
406.259 284.761 li
405.959 284.761 405.66 284.641 405.479 284.46 cv
405.24 284.221 405.12 283.98 405.12 283.681 cv
405.12 283.381 405.24 283.08 405.479 282.841 cv
405.66 282.66 405.959 282.54 406.259 282.54 cv
406.559 282.54 406.799 282.66 407.04 282.841 cv
cp
411.059 282.841 mo
411.299 282.66 411.54 282.54 411.839 282.54 cv
412.139 282.54 412.439 282.66 412.62 282.841 cv
412.979 283.681 li
412.62 284.46 li
411.839 284.761 li
411.059 284.46 li
410.879 284.221 410.759 283.98 410.759 283.681 cv
410.759 283.381 410.879 283.08 411.059 282.841 cv
cp
364.799 264.601 mo
364.439 265.381 li
363.66 265.74 li
363.36 265.74 363.12 265.62 362.879 265.381 cv
362.519 264.601 li
362.879 263.82 li
363.12 263.58 363.36 263.46 363.66 263.46 cv
364.439 263.82 li
364.799 264.601 li
cp
359.16 264.601 mo
359.099 264.9 358.979 265.141 358.86 265.381 cv
358.08 265.74 li
357.78 265.74 357.479 265.62 357.299 265.381 cv
357.059 265.141 356.939 264.9 356.939 264.601 cv
356.939 264.301 357.059 264.061 357.299 263.82 cv
357.479 263.58 357.78 263.46 358.08 263.46 cv
358.86 263.82 li
359.16 264.601 li
cp
353.219 263.82 mo
353.58 264.601 li
353.219 265.381 li
352.439 265.74 li
352.139 265.74 351.899 265.62 351.66 265.381 cv
351.479 265.141 351.36 264.9 351.36 264.601 cv
351.36 264.301 351.479 264.061 351.66 263.82 cv
351.899 263.58 352.139 263.46 352.439 263.46 cv
353.219 263.82 li
cp
348 264.601 mo
347.639 265.381 li
345.167 267.012 345.167 262.189 347.639 263.82 cv
348 264.601 li
cp
348 270.181 mo
347.639 270.96 li
346.86 271.32 li
346.08 270.96 li
345.719 270.181 li
346.08 269.4 li
346.32 269.221 346.559 269.101 346.86 269.101 cv
347.16 269.101 347.399 269.221 347.639 269.4 cv
348 270.181 li
cp
348 281.4 mo
347.639 282.181 li
346.86 282.54 li
346.08 282.181 li
345.719 281.4 li
346.08 280.62 li
346.32 280.381 346.559 280.261 346.86 280.261 cv
347.16 280.261 347.399 280.381 347.639 280.62 cv
348 281.4 li
cp
346.86 276.9 mo
346.08 276.601 li
345.719 275.82 li
346.08 275.04 li
346.32 274.801 346.559 274.681 346.86 274.681 cv
347.16 274.681 347.399 274.801 347.639 275.04 cv
348 275.82 li
347.639 276.601 li
347.399 276.721 347.16 276.841 346.86 276.9 cv
cp
349.439 282.841 mo
349.679 282.66 349.919 282.54 350.219 282.54 cv
350.519 282.54 350.82 282.66 351 282.841 cv
351.36 283.681 li
351 284.46 li
350.219 284.761 li
349.919 284.761 349.679 284.641 349.439 284.46 cv
349.2 284.221 349.08 283.98 349.08 283.681 cv
349.08 283.381 349.2 283.08 349.439 282.841 cv
cp
355.019 282.841 mo
355.259 282.66 355.5 282.54 355.799 282.54 cv
356.099 282.66 356.339 282.78 356.58 282.841 cv
356.939 283.681 li
356.58 284.46 li
355.799 284.761 li
355.5 284.761 355.259 284.641 355.019 284.46 cv
354.839 284.221 354.719 283.98 354.719 283.681 cv
354.719 283.381 354.839 283.08 355.019 282.841 cv
cp
362.219 282.841 mo
362.519 283.681 li
362.219 284.46 li
361.979 284.641 361.74 284.761 361.439 284.761 cv
360.66 284.46 li
360.419 284.221 360.299 283.98 360.299 283.681 cv
360.299 283.381 360.419 283.08 360.66 282.841 cv
360.839 282.66 361.139 282.54 361.439 282.54 cv
361.74 282.54 361.979 282.66 362.219 282.841 cv
cp
366.24 282.841 mo
366.479 282.66 366.719 282.54 367.019 282.54 cv
367.32 282.54 367.62 282.66 367.799 282.841 cv
368.16 283.681 li
367.799 284.46 li
367.62 284.641 367.32 284.761 367.019 284.761 cv
366.24 284.46 li
366.059 284.221 365.939 283.98 365.939 283.681 cv
365.939 283.381 366.059 283.08 366.24 282.841 cv
cp
386.879 263.82 mo
387.179 264.601 li
387.12 264.9 387 265.141 386.879 265.381 cv
386.099 265.74 li
385.799 265.74 385.5 265.62 385.32 265.381 cv
385.08 265.141 384.959 264.9 384.959 264.601 cv
384.959 264.301 385.08 264.061 385.32 263.82 cv
385.5 263.58 385.799 263.46 386.099 263.46 cv
386.879 263.82 li
cp
381.599 264.601 mo
381.24 265.381 li
381.059 265.62 380.759 265.74 380.459 265.74 cv
379.679 265.381 li
379.5 265.141 379.379 264.9 379.379 264.601 cv
379.379 264.301 379.5 264.061 379.679 263.82 cv
380.459 263.46 li
380.759 263.46 381.059 263.58 381.24 263.82 cv
381.599 264.601 li
cp
375.66 263.82 mo
376.019 264.601 li
375.66 265.381 li
374.879 265.74 li
374.099 265.381 li
373.86 265.141 373.74 264.9 373.74 264.601 cv
373.74 264.301 373.86 264.061 374.099 263.82 cv
374.879 263.46 li
375.66 263.82 li
cp
370.379 264.601 mo
370.08 265.381 li
369.299 265.74 li
368.459 265.381 li
368.28 265.141 368.16 264.9 368.16 264.601 cv
368.16 264.301 368.28 264.061 368.459 263.82 cv
369.299 263.46 li
370.08 263.82 li
370.379 264.601 li
cp
373.439 282.841 mo
373.74 283.681 li
373.439 284.46 li
372.66 284.761 li
372.36 284.761 372.059 284.641 371.82 284.46 cv
371.639 284.221 371.519 283.98 371.519 283.681 cv
371.519 283.381 371.639 283.08 371.82 282.841 cv
372.059 282.66 372.36 282.54 372.66 282.54 cv
372.959 282.54 373.2 282.66 373.439 282.841 cv
cp
377.459 282.841 mo
377.639 282.66 377.939 282.54 378.24 282.54 cv
378.54 282.54 378.78 282.66 379.019 282.841 cv
379.379 283.681 li
379.019 284.46 li
378.24 284.761 li
377.939 284.761 377.639 284.641 377.459 284.46 cv
377.219 284.221 377.099 283.98 377.099 283.681 cv
377.099 283.381 377.219 283.08 377.459 282.841 cv
cp
384.599 282.841 mo
384.959 283.681 li
384.599 284.46 li
383.82 284.761 li
383.04 284.46 li
382.86 284.221 382.74 283.98 382.74 283.681 cv
382.74 283.381 382.86 283.08 383.04 282.841 cv
383.28 282.66 383.519 282.54 383.82 282.54 cv
384.12 282.54 384.419 282.66 384.599 282.841 cv
cp
388.679 282.841 mo
388.86 282.66 389.16 282.54 389.459 282.54 cv
390.24 282.841 li
390.54 283.681 li
390.24 284.46 li
389.459 284.761 li
389.16 284.761 388.86 284.641 388.679 284.46 cv
388.439 284.221 388.32 283.98 388.32 283.681 cv
388.32 283.381 388.439 283.08 388.679 282.841 cv
0 0 0 1 cmyk
ef
346.859 348.78 mo
346.859 367.86 li
414.119 367.86 li
414.119 348.78 li
346.859 348.78 li
cp
0 0 0 0 cmyk
f
409.619 348.78 mo
409.259 349.561 li
409.079 349.801 408.779 349.92 408.479 349.92 cv
407.699 349.561 li
407.519 349.32 407.398 349.08 407.398 348.78 cv
407.398 348.48 407.519 348.24 407.699 348 cv
408.479 347.641 li
408.779 347.641 409.079 347.761 409.259 348 cv
409.619 348.78 li
cp
412.979 348.78 mo
412.979 348.48 413.099 348.24 413.339 348 cv
414.119 347.641 li
414.419 347.641 414.659 347.761 414.898 348 cv
415.199 348.78 li
414.898 349.561 li
414.659 349.801 414.419 349.92 414.119 349.92 cv
413.339 349.561 li
413.099 349.32 412.979 349.08 412.979 348.78 cv
cp
404.039 348.78 mo
403.679 349.561 li
402.898 349.92 li
402.599 349.92 402.299 349.801 402.119 349.561 cv
401.879 349.32 401.759 349.08 401.759 348.78 cv
401.759 348.48 401.879 348.24 402.119 348 cv
402.299 347.761 402.599 347.641 402.898 347.641 cv
403.679 348 li
404.039 348.78 li
cp
413.339 352.5 mo
413.519 352.261 413.819 352.141 414.119 352.141 cv
414.419 352.141 414.659 352.261 414.898 352.5 cv
415.199 353.28 li
414.898 354.061 li
414.659 354.24 414.419 354.36 414.119 354.36 cv
413.339 354.061 li
413.099 353.82 412.979 353.58 412.979 353.28 cv
412.979 352.98 413.099 352.681 413.339 352.5 cv
cp
413.339 358.08 mo
413.519 357.841 413.819 357.721 414.119 357.721 cv
414.419 357.721 414.659 357.841 414.898 358.08 cv
415.199 358.86 li
414.898 359.641 li
414.659 359.88 414.419 360 414.119 360 cv
413.339 359.641 li
413.099 359.46 412.979 359.16 412.979 358.86 cv
412.979 358.561 413.099 358.32 413.339 358.08 cv
cp
398.099 348 mo
398.398 348.78 li
398.099 349.561 li
397.259 349.92 li
396.959 349.92 396.719 349.801 396.479 349.561 cv
396.299 349.32 396.179 349.08 396.179 348.78 cv
396.179 348.48 396.299 348.24 396.479 348 cv
396.719 347.761 396.959 347.641 397.259 347.641 cv
398.099 348 li
cp
392.819 348.78 mo
392.459 349.561 li
391.679 349.92 li
391.379 349.92 391.139 349.801 390.898 349.561 cv
390.659 349.32 390.539 349.08 390.539 348.78 cv
390.539 348.48 390.659 348.24 390.898 348 cv
391.139 347.761 391.379 347.641 391.679 347.641 cv
392.459 348 li
392.819 348.78 li
cp
395.819 367.021 mo
396.179 367.86 li
395.819 368.641 li
395.039 368.94 li
394.739 368.94 394.499 368.82 394.259 368.641 cv
394.019 368.4 393.898 368.16 393.898 367.86 cv
393.898 367.561 394.019 367.261 394.259 367.021 cv
394.499 366.841 394.739 366.721 395.039 366.721 cv
395.339 366.721 395.639 366.841 395.819 367.021 cv
cp
399.839 367.021 mo
400.079 366.841 400.319 366.721 400.619 366.721 cv
400.919 366.721 401.219 366.841 401.459 367.021 cv
401.759 367.86 li
401.459 368.641 li
401.219 368.82 400.919 368.94 400.619 368.94 cv
399.839 368.641 li
399.539 367.86 li
399.539 367.561 399.659 367.261 399.839 367.021 cv
cp
413.339 363.66 mo
413.519 363.48 413.819 363.36 414.119 363.36 cv
414.419 363.36 414.659 363.48 414.898 363.66 cv
415.199 364.44 li
414.898 365.28 li
414.659 365.46 414.419 365.58 414.119 365.58 cv
413.339 365.28 li
413.099 365.04 412.979 364.74 412.979 364.44 cv
412.979 364.141 413.099 363.9 413.339 363.66 cv
cp
407.039 367.021 mo
407.398 367.86 li
407.039 368.641 li
406.259 368.94 li
405.959 368.94 405.659 368.82 405.479 368.641 cv
405.239 368.4 405.119 368.16 405.119 367.86 cv
405.119 367.561 405.239 367.261 405.479 367.021 cv
405.659 366.841 405.959 366.721 406.259 366.721 cv
406.559 366.721 406.799 366.841 407.039 367.021 cv
cp
411.059 367.021 mo
411.299 366.841 411.539 366.721 411.839 366.721 cv
412.139 366.721 412.438 366.841 412.619 367.021 cv
412.979 367.86 li
412.619 368.641 li
411.839 368.94 li
411.059 368.641 li
410.879 368.4 410.759 368.16 410.759 367.86 cv
410.759 367.561 410.879 367.261 411.059 367.021 cv
cp
364.799 348.78 mo
364.438 349.561 li
363.659 349.92 li
363.359 349.92 363.119 349.801 362.879 349.561 cv
362.519 348.78 li
362.879 348 li
363.119 347.761 363.359 347.641 363.659 347.641 cv
364.438 348 li
364.799 348.78 li
cp
359.159 348.78 mo
359.099 349.08 358.979 349.32 358.859 349.561 cv
358.079 349.92 li
357.779 349.92 357.479 349.801 357.299 349.561 cv
357.059 349.32 356.938 349.08 356.938 348.78 cv
356.938 348.48 357.059 348.24 357.299 348 cv
357.479 347.761 357.779 347.641 358.079 347.641 cv
358.859 348 li
359.159 348.78 li
cp
353.219 348 mo
353.579 348.78 li
353.219 349.561 li
352.438 349.92 li
352.139 349.92 351.898 349.801 351.659 349.561 cv
351.479 349.32 351.359 349.08 351.359 348.78 cv
351.359 348.48 351.479 348.24 351.659 348 cv
351.898 347.761 352.139 347.641 352.438 347.641 cv
353.219 348 li
cp
347.999 348.78 mo
347.639 349.561 li
345.167 351.191 345.167 346.369 347.639 348 cv
347.999 348.78 li
cp
347.999 354.36 mo
347.639 355.141 li
346.859 355.5 li
346.079 355.141 li
345.719 354.36 li
346.079 353.58 li
346.319 353.4 346.559 353.28 346.859 353.28 cv
347.159 353.28 347.398 353.4 347.639 353.58 cv
347.999 354.36 li
cp
347.999 365.58 mo
347.639 366.36 li
346.859 366.721 li
346.079 366.36 li
345.719 365.58 li
346.079 364.801 li
346.319 364.561 346.559 364.44 346.859 364.44 cv
347.159 364.44 347.398 364.561 347.639 364.801 cv
347.999 365.58 li
cp
346.859 361.08 mo
346.079 360.78 li
345.719 360 li
346.079 359.221 li
346.319 358.98 346.559 358.86 346.859 358.86 cv
347.159 358.86 347.398 358.98 347.639 359.221 cv
347.999 360 li
347.639 360.78 li
347.398 360.9 347.159 361.021 346.859 361.08 cv
cp
349.438 367.021 mo
349.679 366.841 349.919 366.721 350.219 366.721 cv
350.519 366.721 350.819 366.841 350.999 367.021 cv
351.359 367.86 li
350.999 368.641 li
350.219 368.94 li
349.919 368.94 349.679 368.82 349.438 368.641 cv
349.199 368.4 349.079 368.16 349.079 367.86 cv
349.079 367.561 349.199 367.261 349.438 367.021 cv
cp
355.019 367.021 mo
355.259 366.841 355.499 366.721 355.799 366.721 cv
356.099 366.841 356.339 366.96 356.579 367.021 cv
356.938 367.86 li
356.579 368.641 li
355.799 368.94 li
355.499 368.94 355.259 368.82 355.019 368.641 cv
354.839 368.4 354.719 368.16 354.719 367.86 cv
354.719 367.561 354.839 367.261 355.019 367.021 cv
cp
362.219 367.021 mo
362.519 367.86 li
362.219 368.641 li
361.979 368.82 361.739 368.94 361.438 368.94 cv
360.659 368.641 li
360.419 368.4 360.299 368.16 360.299 367.86 cv
360.299 367.561 360.419 367.261 360.659 367.021 cv
360.839 366.841 361.139 366.721 361.438 366.721 cv
361.739 366.721 361.979 366.841 362.219 367.021 cv
cp
366.239 367.021 mo
366.479 366.841 366.719 366.721 367.019 366.721 cv
367.319 366.721 367.619 366.841 367.799 367.021 cv
368.159 367.86 li
367.799 368.641 li
367.619 368.82 367.319 368.94 367.019 368.94 cv
366.239 368.641 li
366.059 368.4 365.938 368.16 365.938 367.86 cv
365.938 367.561 366.059 367.261 366.239 367.021 cv
cp
386.879 348 mo
387.179 348.78 li
387.119 349.08 386.999 349.32 386.879 349.561 cv
386.099 349.92 li
385.799 349.92 385.499 349.801 385.319 349.561 cv
385.079 349.32 384.959 349.08 384.959 348.78 cv
384.959 348.48 385.079 348.24 385.319 348 cv
385.499 347.761 385.799 347.641 386.099 347.641 cv
386.879 348 li
cp
381.599 348.78 mo
381.239 349.561 li
381.059 349.801 380.759 349.92 380.459 349.92 cv
379.679 349.561 li
379.499 349.32 379.379 349.08 379.379 348.78 cv
379.379 348.48 379.499 348.24 379.679 348 cv
380.459 347.641 li
380.759 347.641 381.059 347.761 381.239 348 cv
381.599 348.78 li
cp
375.659 348 mo
376.019 348.78 li
375.659 349.561 li
374.879 349.92 li
374.099 349.561 li
373.859 349.32 373.739 349.08 373.739 348.78 cv
373.739 348.48 373.859 348.24 374.099 348 cv
374.879 347.641 li
375.659 348 li
cp
370.379 348.78 mo
370.079 349.561 li
369.299 349.92 li
368.459 349.561 li
368.279 349.32 368.159 349.08 368.159 348.78 cv
368.159 348.48 368.279 348.24 368.459 348 cv
369.299 347.641 li
370.079 348 li
370.379 348.78 li
cp
373.438 367.021 mo
373.739 367.86 li
373.438 368.641 li
372.659 368.94 li
372.359 368.94 372.059 368.82 371.819 368.641 cv
371.639 368.4 371.519 368.16 371.519 367.86 cv
371.519 367.561 371.639 367.261 371.819 367.021 cv
372.059 366.841 372.359 366.721 372.659 366.721 cv
372.959 366.721 373.199 366.841 373.438 367.021 cv
cp
377.459 367.021 mo
377.639 366.841 377.938 366.721 378.239 366.721 cv
378.539 366.721 378.779 366.841 379.019 367.021 cv
379.379 367.86 li
379.019 368.641 li
378.239 368.94 li
377.938 368.94 377.639 368.82 377.459 368.641 cv
377.219 368.4 377.099 368.16 377.099 367.86 cv
377.099 367.561 377.219 367.261 377.459 367.021 cv
cp
384.599 367.021 mo
384.959 367.86 li
384.599 368.641 li
383.819 368.94 li
383.039 368.641 li
382.859 368.4 382.739 368.16 382.739 367.86 cv
382.739 367.561 382.859 367.261 383.039 367.021 cv
383.279 366.841 383.519 366.721 383.819 366.721 cv
384.119 366.721 384.419 366.841 384.599 367.021 cv
cp
388.679 367.021 mo
388.859 366.841 389.159 366.721 389.459 366.721 cv
390.239 367.021 li
390.539 367.86 li
390.239 368.641 li
389.459 368.94 li
389.159 368.94 388.859 368.82 388.679 368.641 cv
388.438 368.4 388.319 368.16 388.319 367.86 cv
388.319 367.561 388.438 367.261 388.679 367.021 cv
0 0 0 1 cmyk
ef
346.859 379.5 mo
346.859 398.581 li
414.119 398.581 li
414.119 379.5 li
346.859 379.5 li
cp
0 0 0 0 cmyk
f
409.619 379.5 mo
409.259 380.28 li
409.079 380.521 408.779 380.641 408.479 380.641 cv
407.699 380.28 li
407.519 380.04 407.398 379.801 407.398 379.5 cv
407.398 379.2 407.519 378.96 407.699 378.721 cv
408.479 378.36 li
408.779 378.36 409.079 378.48 409.259 378.721 cv
409.619 379.5 li
cp
412.979 379.5 mo
412.979 379.2 413.099 378.96 413.339 378.721 cv
414.119 378.36 li
414.419 378.36 414.659 378.48 414.898 378.721 cv
415.199 379.5 li
414.898 380.28 li
414.659 380.521 414.419 380.641 414.119 380.641 cv
413.339 380.28 li
413.099 380.04 412.979 379.801 412.979 379.5 cv
cp
404.039 379.5 mo
403.679 380.28 li
402.898 380.641 li
402.599 380.641 402.299 380.521 402.119 380.28 cv
401.879 380.04 401.759 379.801 401.759 379.5 cv
401.759 379.2 401.879 378.96 402.119 378.721 cv
402.299 378.48 402.599 378.36 402.898 378.36 cv
403.679 378.721 li
404.039 379.5 li
cp
413.339 383.221 mo
413.519 382.98 413.819 382.86 414.119 382.86 cv
414.419 382.86 414.659 382.98 414.898 383.221 cv
415.199 384 li
414.898 384.78 li
414.659 384.96 414.419 385.08 414.119 385.08 cv
413.339 384.78 li
413.099 384.54 412.979 384.301 412.979 384 cv
412.979 383.7 413.099 383.4 413.339 383.221 cv
cp
413.339 388.801 mo
413.519 388.561 413.819 388.44 414.119 388.44 cv
414.419 388.44 414.659 388.561 414.898 388.801 cv
415.199 389.581 li
414.898 390.36 li
414.659 390.601 414.419 390.721 414.119 390.721 cv
413.339 390.36 li
413.099 390.181 412.979 389.881 412.979 389.581 cv
412.979 389.28 413.099 389.041 413.339 388.801 cv
cp
398.099 378.721 mo
398.398 379.5 li
398.099 380.28 li
397.259 380.641 li
396.959 380.641 396.719 380.521 396.479 380.28 cv
396.299 380.04 396.179 379.801 396.179 379.5 cv
396.179 379.2 396.299 378.96 396.479 378.721 cv
396.719 378.48 396.959 378.36 397.259 378.36 cv
398.099 378.721 li
cp
392.819 379.5 mo
392.459 380.28 li
391.679 380.641 li
391.379 380.641 391.139 380.521 390.898 380.28 cv
390.659 380.04 390.539 379.801 390.539 379.5 cv
390.539 379.2 390.659 378.96 390.898 378.721 cv
391.139 378.48 391.379 378.36 391.679 378.36 cv
392.459 378.721 li
392.819 379.5 li
cp
395.819 397.74 mo
396.179 398.581 li
395.819 399.36 li
395.039 399.66 li
394.739 399.66 394.499 399.541 394.259 399.36 cv
394.019 399.121 393.898 398.881 393.898 398.581 cv
393.898 398.28 394.019 397.98 394.259 397.74 cv
394.499 397.561 394.739 397.44 395.039 397.44 cv
395.339 397.44 395.639 397.561 395.819 397.74 cv
cp
399.839 397.74 mo
400.079 397.561 400.319 397.44 400.619 397.44 cv
400.919 397.44 401.219 397.561 401.459 397.74 cv
401.759 398.581 li
401.459 399.36 li
401.219 399.541 400.919 399.66 400.619 399.66 cv
399.839 399.36 li
399.539 398.581 li
399.539 398.28 399.659 397.98 399.839 397.74 cv
cp
413.339 394.381 mo
413.519 394.2 413.819 394.081 414.119 394.081 cv
414.419 394.081 414.659 394.2 414.898 394.381 cv
415.199 395.16 li
414.898 396.001 li
414.659 396.181 414.419 396.301 414.119 396.301 cv
413.339 396.001 li
413.099 395.761 412.979 395.461 412.979 395.16 cv
412.979 394.86 413.099 394.621 413.339 394.381 cv
cp
407.039 397.74 mo
407.398 398.581 li
407.039 399.36 li
406.259 399.66 li
405.959 399.66 405.659 399.541 405.479 399.36 cv
405.239 399.121 405.119 398.881 405.119 398.581 cv
405.119 398.28 405.239 397.98 405.479 397.74 cv
405.659 397.561 405.959 397.44 406.259 397.44 cv
406.559 397.44 406.799 397.561 407.039 397.74 cv
cp
411.059 397.74 mo
411.299 397.561 411.539 397.44 411.839 397.44 cv
412.139 397.44 412.438 397.561 412.619 397.74 cv
412.979 398.581 li
412.619 399.36 li
411.839 399.66 li
411.059 399.36 li
410.879 399.121 410.759 398.881 410.759 398.581 cv
410.759 398.28 410.879 397.98 411.059 397.74 cv
cp
364.799 379.5 mo
364.438 380.28 li
363.659 380.641 li
363.359 380.641 363.119 380.521 362.879 380.28 cv
362.519 379.5 li
362.879 378.721 li
363.119 378.48 363.359 378.36 363.659 378.36 cv
364.438 378.721 li
364.799 379.5 li
cp
359.159 379.5 mo
359.099 379.801 358.979 380.04 358.859 380.28 cv
358.079 380.641 li
357.779 380.641 357.479 380.521 357.299 380.28 cv
357.059 380.04 356.938 379.801 356.938 379.5 cv
356.938 379.2 357.059 378.96 357.299 378.721 cv
357.479 378.48 357.779 378.36 358.079 378.36 cv
358.859 378.721 li
359.159 379.5 li
cp
353.219 378.721 mo
353.579 379.5 li
353.219 380.28 li
352.438 380.641 li
352.139 380.641 351.898 380.521 351.659 380.28 cv
351.479 380.04 351.359 379.801 351.359 379.5 cv
351.359 379.2 351.479 378.96 351.659 378.721 cv
351.898 378.48 352.139 378.36 352.438 378.36 cv
353.219 378.721 li
cp
347.999 379.5 mo
347.639 380.28 li
345.167 381.911 345.167 377.09 347.639 378.721 cv
347.999 379.5 li
cp
347.999 385.08 mo
347.639 385.86 li
346.859 386.221 li
346.079 385.86 li
345.719 385.08 li
346.079 384.301 li
346.319 384.12 346.559 384 346.859 384 cv
347.159 384 347.398 384.12 347.639 384.301 cv
347.999 385.08 li
cp
347.999 396.301 mo
347.639 397.081 li
346.859 397.44 li
346.079 397.081 li
345.719 396.301 li
346.079 395.521 li
346.319 395.28 346.559 395.16 346.859 395.16 cv
347.159 395.16 347.398 395.28 347.639 395.521 cv
347.999 396.301 li
cp
346.859 391.801 mo
346.079 391.501 li
345.719 390.721 li
346.079 389.94 li
346.319 389.7 346.559 389.581 346.859 389.581 cv
347.159 389.581 347.398 389.7 347.639 389.94 cv
347.999 390.721 li
347.639 391.501 li
347.398 391.621 347.159 391.74 346.859 391.801 cv
cp
349.438 397.74 mo
349.679 397.561 349.919 397.44 350.219 397.44 cv
350.519 397.44 350.819 397.561 350.999 397.74 cv
351.359 398.581 li
350.999 399.36 li
350.219 399.66 li
349.919 399.66 349.679 399.541 349.438 399.36 cv
349.199 399.121 349.079 398.881 349.079 398.581 cv
349.079 398.28 349.199 397.98 349.438 397.74 cv
cp
355.019 397.74 mo
355.259 397.561 355.499 397.44 355.799 397.44 cv
356.099 397.561 356.339 397.681 356.579 397.74 cv
356.938 398.581 li
356.579 399.36 li
355.799 399.66 li
355.499 399.66 355.259 399.541 355.019 399.36 cv
354.839 399.121 354.719 398.881 354.719 398.581 cv
354.719 398.28 354.839 397.98 355.019 397.74 cv
cp
362.219 397.74 mo
362.519 398.581 li
362.219 399.36 li
361.979 399.541 361.739 399.66 361.438 399.66 cv
360.659 399.36 li
360.419 399.121 360.299 398.881 360.299 398.581 cv
360.299 398.28 360.419 397.98 360.659 397.74 cv
360.839 397.561 361.139 397.44 361.438 397.44 cv
361.739 397.44 361.979 397.561 362.219 397.74 cv
cp
366.239 397.74 mo
366.479 397.561 366.719 397.44 367.019 397.44 cv
367.319 397.44 367.619 397.561 367.799 397.74 cv
368.159 398.581 li
367.799 399.36 li
367.619 399.541 367.319 399.66 367.019 399.66 cv
366.239 399.36 li
366.059 399.121 365.938 398.881 365.938 398.581 cv
365.938 398.28 366.059 397.98 366.239 397.74 cv
cp
386.879 378.721 mo
387.179 379.5 li
387.119 379.801 386.999 380.04 386.879 380.28 cv
386.099 380.641 li
385.799 380.641 385.499 380.521 385.319 380.28 cv
385.079 380.04 384.959 379.801 384.959 379.5 cv
384.959 379.2 385.079 378.96 385.319 378.721 cv
385.499 378.48 385.799 378.36 386.099 378.36 cv
386.879 378.721 li
cp
381.599 379.5 mo
381.239 380.28 li
381.059 380.521 380.759 380.641 380.459 380.641 cv
379.679 380.28 li
379.499 380.04 379.379 379.801 379.379 379.5 cv
379.379 379.2 379.499 378.96 379.679 378.721 cv
380.459 378.36 li
380.759 378.36 381.059 378.48 381.239 378.721 cv
381.599 379.5 li
cp
375.659 378.721 mo
376.019 379.5 li
375.659 380.28 li
374.879 380.641 li
374.099 380.28 li
373.859 380.04 373.739 379.801 373.739 379.5 cv
373.739 379.2 373.859 378.96 374.099 378.721 cv
374.879 378.36 li
375.659 378.721 li
cp
370.379 379.5 mo
370.079 380.28 li
369.299 380.641 li
368.459 380.28 li
368.279 380.04 368.159 379.801 368.159 379.5 cv
368.159 379.2 368.279 378.96 368.459 378.721 cv
369.299 378.36 li
370.079 378.721 li
370.379 379.5 li
cp
373.438 397.74 mo
373.739 398.581 li
373.438 399.36 li
372.659 399.66 li
372.359 399.66 372.059 399.541 371.819 399.36 cv
371.639 399.121 371.519 398.881 371.519 398.581 cv
371.519 398.28 371.639 397.98 371.819 397.74 cv
372.059 397.561 372.359 397.44 372.659 397.44 cv
372.959 397.44 373.199 397.561 373.438 397.74 cv
cp
377.459 397.74 mo
377.639 397.561 377.938 397.44 378.239 397.44 cv
378.539 397.44 378.779 397.561 379.019 397.74 cv
379.379 398.581 li
379.019 399.36 li
378.239 399.66 li
377.938 399.66 377.639 399.541 377.459 399.36 cv
377.219 399.121 377.099 398.881 377.099 398.581 cv
377.099 398.28 377.219 397.98 377.459 397.74 cv
cp
384.599 397.74 mo
384.959 398.581 li
384.599 399.36 li
383.819 399.66 li
383.039 399.36 li
382.859 399.121 382.739 398.881 382.739 398.581 cv
382.739 398.28 382.859 397.98 383.039 397.74 cv
383.279 397.561 383.519 397.44 383.819 397.44 cv
384.119 397.44 384.419 397.561 384.599 397.74 cv
cp
388.679 397.74 mo
388.859 397.561 389.159 397.44 389.459 397.44 cv
390.239 397.74 li
390.539 398.581 li
390.239 399.36 li
389.459 399.66 li
389.159 399.66 388.859 399.541 388.679 399.36 cv
388.438 399.121 388.319 398.881 388.319 398.581 cv
388.319 398.28 388.438 397.98 388.679 397.74 cv
0 0 0 1 cmyk
ef
%ADOBeginSubsetFont: CourierNewPS-BoldMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /CourierNewPS-BoldMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 45 /hyphen putdup 97 /a putdup 100 /d putdup 101 /e putdup 104 /h putdup 105 /i putdup 110 /n putdup 115 /s putdup 120 /x putdef/FontBBox {-192 -710 702 1221} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings10 dict dup begin/.notdef <1C60D8A8C9B7C3C9ED93FE91750F72DD53ADC388FD692A67FF166C34B936569DEC8D0785> |-/hyphen <1C60D8A8C9B7C3C9EDBBDE66E686D6EC55DE642F1405D2> |-/a <1C60D8A8C9B7C3C9EDA62C2C5C09C04438F068AE6A994F9A6DB568ECF219359E824B74A5361EC8EDBC3CFD04B42643F3C39B1E6D1760005B222B5485211FF25233C47A21274256CFD79964C447E1AF87C5BF4A98FB7B581FA6A9A492C0DA5AE908734EB0D7BD6A7434ACAF0024C8170F5F4BADC7FDDA393B72FAD4573E25767E72B7F0148E237A8FDF9C9F9501B529F8FF3BDB2CFE6DAAD8435342D2BB5A1D8FFBF137A9B8AB45F52F7BCD1DECFBB7D9273190F8D4E8242689914E76CAF5B01E768B3B9560A72E860C2DE9382D200E598286021C4D02C2CB5065C72881021ED213B2D622A41568CC450325586AAA8A34C1F18A> |-/d <1C60D8A8C9B7C3C9ED19712DC1736C8714DF0CD0E989F38152E60DE72DA355A96F4973A5EF65F68511C384ED1BFBF142FB7B190051D67033476CAD50FC71DCF9DEAA78A2F250A6BAEFD4A0C75A0666B6851BEEF5CDAF6E23870452CADA7714382E4003D08E1DF6D62C750C111D950B8CCAD1E79817ACBA5EC4C92941E0AB25E3DE73BC8A51C8FD0EB4582091389F80481093643706B4B29C2BFDEA057E4C73E40CA5EC916AB3CF34B6A82F831F38656B752976ECDA1F63EA403E17A8A826F6D4D72A132AE889F071F876A21F> |-/e <1C60D8A8C9B7C3C9ED9572D3A5DDFCAAE1193F8374A8F5161C1587B0E5B80F15A03533D3D5AD526ECB0BE4794DB0CE0B6DD2F12300154BB574748457242407FA9213DCA4558556B3C041667363D1FA1775151F1FD538639231319618C160A4246468ED74FF468B1DAC183CA2DFE0ED766C629C26A959C8F515D040C451E4E9F4FC8D3BBBBABD0801DF4673704DD3133C6591A3C0800DF10CF36C37311DAA85DFC4E4EDE8F9D3D05095CA> |-/h <1C60D8A8C9B7C3C9CED3DC2B0BF640E8FB2D83E148BBE4A83E69B1FA9BCEB8A2B09DDF83FB256ED16590D1CBCC2866CCCAACF7B3599F9E36CEB70DF6C3A8B0ADB05842757A865D030650F9A63D2C57A0FA46B0406820B721A1EE569A11764D810E321335591C0A39D3E53EADD1606DF8A6BAC13C37F18225A56CF9FF0AF2A528CFF790AF3EF7124C48326A1FDC5314A4DC9A3F1993D4A180E356BE02BEA2CFC42D912DB5AE6C2542B242AF77B9F7A7DBB9DD7756461C2CA870981039529EC93254F9AF5A1E5581199C8965FE4C7F31D05703B3AE0B7FAB20AB5E5E20BB3BB7A16F345FDA1FC995DDC8B783DAB22A> |-/i <1C60D8A8C9B7C3C9E227C9E6E4277389ACA636BA71B2222A0E55B695FF46E8B628876DF912831AEDB2A238AADCEBB7161CADEC77AA0D28AAB6118C61F147D10E3BF8983A3E8DBB02081823539185406B9472DFC3FA38B5D05759DB0162AD6EC35085212261C1032D0B8A61313EF37721D7E1DAB8269DA106EB9C5E55A36D67647E> |-/n <1C60D8A8C9B7C3C9FB8BA94958813D8AA97A08385DFFB3FE5FBB928C47BA129ABD329A274A925F0DD1A152506E13516D3169CA5F00AF88C237EC8692984906373C9AF539429208807A5332C78722CFD249B26455BF4C945BF33FA252D9FC3253A7128AE82C23D9F537373FBE8BEA63234E2EB087EEFD8054A0AD49E32841339BBE5B6C59131FD9287291DCFB26A54B421E628FB7449FB7D1A4E556C6436C9993F412375A32633154552D49B5E28E048F0A9A4FBAF562A0F5F6423F2DEE364401CF6225CDA3D29F61D8D51E1BFA254FBF04EFA4A6239CB2E65539EB53C3953D0F80265EB4> |-/s <1C60D8A8C9B7C3C9ED14774ECA8F4A6506F6D11E97208AECCFE5608EFEBC91A3743AAA6E037A28C6CDD58CE8CA6DC9A7B928D221DAD01C2717FAED6FE7FAE42C5A71F0A44A3FE76DE1201122BD0E2152E2DC71E7B6A6BB51752B77C5FDC885F386D18AF1161BD6D58CE7FFF575B385C914F13B5EF0D30BBD9D654DB012744A8DB866953032DD7E0BA1D875D680494C87584B78BB2B89102584959F72301C168BC69E41A7DD0B580F284A530D94A62B9B969F54F2C52AE51CE4E4937293D24E33CA86D9AEC51F09933EF2F153E6EA372C7A7F82C214AF1ADB55C90F5F79DAE7C0646DDB92CA520421B0D54B9413A08361D579BDF2C1A433E7CCC872456277B46DC9946C51861B7E75766376453F6BA9C2754582ADA7DD6FE54FB0EC22C4BDEF303079C4DA0F9175B2DF4D5FA0926F7D7D2454> |-/x <1C60D8A8C9B7C3C9EDA7FE93DE494A4CA42C319D033C63E90F97F3F9DF624379F97FFE680F598D75BA675A722B735B89D482517CC3AAA36AFD9F7D5AB3490921247BD1DDB19ECCEC4AF01F3BFA7D593C3E135F7CCF7310C45F17C00DA1E8A7BF272CB84BB264794F4B8506011D7B75185BA42F8E08F63DAF74F0404C8A0404C88C3CE6473E2DB3758A997E0D1822CB2E80C66B53E638054E08D09D26A234C8B0ABCF36645C652AC7C901AC3686694BE39EB0386748CAFBC383387D1B7545580B3C64B11148CBEC91B355210AACDEB5C881F51203A043C8D563CC39272EAC60E8CE7069C80C1C26DB8CF2977A3F1CD9ACA81EAB3C542A1107A905243960CC463DAE97351D1F63> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PDCVEH+CourierNewPS-BoldMT /CourierNewPS-BoldMT findfont ct_VMDictPut/PDCVEH+CourierNewPS-BoldMT*1 [45{/.notdef}rp /hyphen 51{/.notdef}rp /a 2{/.notdef}rp /d /e 2{/.notdef}rp /h /i 4{/.notdef}rp /n 4{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]PDCVEH+CourierNewPS-BoldMT nfPDCVEH+CourierNewPS-BoldMT*1 [26.82 0 0 -26.82 0 0 ]msf403.38 61.9805 mo(has)sh451.664 61.9805 mo(h-in)sh516.042 61.9805 mo(dex)sh%ADOBeginSubsetFont: MyriadPro-SemiboldIt Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-SemiboldIt def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Semibold) def/ItalicAngle -11 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 49 /one putdup 99 /c putdup 101 /e putdup 105 /i putdup 114 /r putdup 115 /s putdup 118 /v putdef/FontBBox {-193 -250 1164 972} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 487 498 650 661 710 721 246 253] def/OtherBlues [399 406 258 266 -209 -198 -152 -144 -121 -115] def/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [90] def/StdVW [123] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/space <1C60D8A8C9B8B51828> |-/one <1C60D8A8C9B7B4A1684D51765D0CE3BABF98CD51C7B6845845F6F5CE711CF36D1D48595255B545B3A4D7462D579903D4> |-/c <1C60D8A8C9B76D61D8F34C1169601C9D3045E679BAE236BD29C4B9AE4246D0A2632C18A6DDAAB491D64889EFD53BA27601BB7E9EB1607F56FADA5C4D4DC0254DA98BE3BC59F6130685AB0D5CE90F990E2C60C97D63E0CBEC13A80EE90A834B74D13B20FDB345E00E61405D3E36> |-/e <1C60D8A8C9B75CBB2B3B7C0B240C2B0DC9E072CDD4F8B9C5E208218B906437A4693A2E3B1FC5600E123E942D86321D8CF611E80016720758152E0589BBB1EA345E444E4F8FA492520777F056EBB3D16F3C552DC621A7B0C90A2C1D416E57FB683085562C76BC7FC682BC37FEC76B4D3DB04999E834BDBE> |-/i <1C60D8A8C9B873D016FD6E842F17DAB5E60DAF3C2DDB2E9AFDC41C81F9B9E09C651D0ABB65EDBEBF9E174932BC5A15F0B9DB30262E9FBC58342E1190C329A03F9891451126> |-/r <1C60D8A8C9B811DA0ADEEC225E9A966B122DBF7C04A9921B69AE7AA98C8D36A93607955591321F5D7DA6B33DA9018976C72F628C23E54A704D9B54F221D5ED5F19599036478F1F9E6327E3DB7B46CAB50427685346E0A1B21A1D8FAE16705B391E2404B167B9D3D40EE756C949> |-/s <1C60D8A8C9B70EDCBB83823C0712218E3A2B38226B6B2A28188A89164FD282AE4271B5C4E0E0B950FCAC489BAD688E743E7A6B03DFC4896036552B910F5A729AA23FDFD3F10D26BEAE893CC92D977A68E4487C7870D2A76B74FED46CBD96CEC31722C4ADFA8CDAD168CAED94F11A957B89> |-/v <1C60D8A8C9B7551C9C1C788EDC839B29D5A0BD65B63AFA7F44B51F7E8462623BE5DDB661748958B049FBCDB457B2FD95E002C6924EDBCFE920E194B5327FBCC9E71A7FBA11AC93622C53397449C7C1> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/PDCVEI+MyriadPro-SemiboldIt /MyriadPro-SemiboldIt findfont ct_VMDictPut/PDCVEI+MyriadPro-SemiboldIt*1 [32{/.notdef}rp /space 16{/.notdef}rp /one 49{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 8{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]PDCVEI+MyriadPro-SemiboldIt nfPDCVEI+MyriadPro-SemiboldIt*1 [26.82 0 0 -26.82 0 0 ]msf403.021 95.6396 mo(service 1)[10.6475 12.8462 9.30615 13.0342 6.67822 11.5322 12.8467 4.90771 0 ]xsh334.439 36.1807 mo
334.439 37.0801 334.2 37.9199 333.66 38.7607 cv
333.179 39.6006 332.459 40.2607 331.5 40.7402 cv
330.54 41.2207 329.519 41.46 328.439 41.46 cv
327.419 41.46 326.399 41.2207 325.439 40.7402 cv
324.479 40.2607 323.759 39.6006 323.28 38.7607 cv
322.74 37.9805 322.5 37.0801 322.5 36.1807 cv
322.5 35.2803 322.74 34.3799 323.28 33.4805 cv
323.82 32.5801 324.54 31.9199 325.439 31.3799 cv
326.399 30.8408 327.419 30.6006 328.439 30.6006 cv
329.459 30.6006 330.479 30.8408 331.5 31.3799 cv
332.459 31.9199 333.179 32.5801 333.66 33.4805 cv
334.2 34.3799 334.439 35.2803 334.439 36.1807 cv
cp
332.099 36.1807 mo
332.099 35.46 331.86 34.8008 331.32 34.1406 cv
330.599 33.3008 329.639 32.8799 328.439 32.8799 cv
327.419 32.8799 326.519 33.2402 325.86 33.9004 cv
325.139 34.5605 324.78 35.3408 324.78 36.2402 cv
324.78 36.96 325.139 37.6201 325.86 38.2207 cv
326.58 38.8799 327.419 39.1807 328.439 39.1807 cv
329.459 39.1807 330.36 38.8799 331.08 38.2207 cv
331.74 37.6201 332.099 36.96 332.099 36.1807 cv
cp
339.36 39.8408 mo
339.36 43.6201 li
340.74 43.6201 li
341.28 43.6201 341.7 43.7402 341.939 43.9199 cv
342.179 44.1006 342.299 44.4004 342.299 44.7607 cv
342.299 45.0605 342.179 45.3604 341.939 45.6006 cv
341.7 45.7803 341.28 45.9004 340.74 45.9004 cv
336.66 45.9004 li
336.12 45.9004 335.759 45.7803 335.519 45.6006 cv
335.28 45.3604 335.16 45.0605 335.16 44.7607 cv
335.16 44.4004 335.28 44.1006 335.519 43.9199 cv
335.759 43.7402 336.12 43.6201 336.66 43.6201 cv
337.08 43.6201 li
337.08 33.1807 li
336.66 33.1807 li
336.12 33.1807 335.759 33.0605 335.519 32.8799 cv
335.28 32.7002 335.16 32.4004 335.16 32.04 cv
335.16 31.7402 335.28 31.4404 335.519 31.2607 cv
335.759 31.0205 336.12 30.9004 336.66 30.9004 cv
339.36 30.9004 li
339.36 31.6807 li
339.899 31.3203 340.5 31.0801 341.04 30.9004 cv
341.639 30.7207 342.24 30.6006 342.839 30.6006 cv
344.399 30.6006 345.719 31.1406 346.86 32.2207 cv
347.939 33.2402 348.479 34.5 348.479 35.8799 cv
348.479 37.3799 347.82 38.6406 346.559 39.6006 cv
345.419 40.4404 344.219 40.8604 342.839 40.8604 cv
342.24 40.8604 341.639 40.8008 341.099 40.6201 cv
340.559 40.4404 339.959 40.1406 339.36 39.8408 cv
cp
346.2 35.8799 mo
346.2 35.5801 346.08 35.1602 345.839 34.6807 cv
345.54 34.1406 345.179 33.7207 344.639 33.4199 cv
344.099 33.0605 343.5 32.8799 342.78 32.8799 cv
341.639 32.8799 340.74 33.3008 340.08 34.2002 cv
339.599 34.8008 339.36 35.3408 339.36 35.8799 cv
339.36 36.54 339.719 37.1406 340.379 37.6807 cv
341.04 38.2803 341.82 38.5801 342.78 38.5801 cv
343.799 38.5801 344.58 38.2803 345.24 37.6807 cv
345.899 37.1406 346.2 36.54 346.2 35.8799 cv
cp
371.04 26.2207 mo
371.04 38.8203 li
373.32 38.8203 li
373.86 38.8203 374.28 38.9404 374.519 39.1201 cv
374.759 39.3008 374.879 39.6006 374.879 39.96 cv
374.879 40.2607 374.759 40.5605 374.519 40.8008 cv
374.28 40.9805 373.86 41.1006 373.32 41.1006 cv
366.36 41.1006 li
365.82 41.1006 365.459 40.9805 365.219 40.8008 cv
364.979 40.5605 364.86 40.2607 364.86 39.96 cv
364.86 39.6006 364.979 39.3008 365.219 39.1201 cv
365.459 38.9404 365.82 38.8203 366.36 38.8203 cv
368.7 38.8203 li
368.7 29.2207 li
366.66 29.7607 li
366.36 29.8203 366.12 29.8799 365.939 29.8799 cv
365.639 29.8799 365.339 29.7607 365.16 29.5205 cv
364.979 29.2803 364.86 28.9805 364.86 28.6807 cv
364.86 28.3799 364.919 28.1406 365.099 27.96 cv
365.219 27.7803 365.519 27.6006 366.059 27.4805 cv
371.04 26.2207 li
f
334.439 140.521 mo
334.439 141.42 334.2 142.261 333.66 143.101 cv
333.179 143.94 332.459 144.601 331.5 145.08 cv
330.54 145.561 329.519 145.801 328.439 145.801 cv
327.419 145.801 326.399 145.561 325.439 145.08 cv
324.479 144.601 323.759 143.94 323.28 143.101 cv
322.74 142.32 322.5 141.42 322.5 140.521 cv
322.5 139.62 322.74 138.721 323.28 137.82 cv
323.82 136.92 324.54 136.261 325.439 135.721 cv
326.399 135.181 327.419 134.94 328.439 134.94 cv
329.459 134.94 330.479 135.181 331.5 135.721 cv
332.459 136.261 333.179 136.92 333.66 137.82 cv
334.2 138.721 334.439 139.62 334.439 140.521 cv
cp
332.099 140.521 mo
332.099 139.801 331.86 139.141 331.32 138.48 cv
330.599 137.641 329.639 137.221 328.439 137.221 cv
327.419 137.221 326.519 137.58 325.86 138.24 cv
325.139 138.9 324.78 139.681 324.78 140.58 cv
324.78 141.301 325.139 141.96 325.86 142.561 cv
326.58 143.221 327.419 143.521 328.439 143.521 cv
329.459 143.521 330.36 143.221 331.08 142.561 cv
331.74 141.96 332.099 141.301 332.099 140.521 cv
cp
339.36 144.181 mo
339.36 147.96 li
340.74 147.96 li
341.28 147.96 341.7 148.08 341.939 148.261 cv
342.179 148.44 342.299 148.74 342.299 149.101 cv
342.299 149.4 342.179 149.7 341.939 149.94 cv
341.7 150.12 341.28 150.24 340.74 150.24 cv
336.66 150.24 li
336.12 150.24 335.759 150.12 335.519 149.94 cv
335.28 149.7 335.16 149.4 335.16 149.101 cv
335.16 148.74 335.28 148.44 335.519 148.261 cv
335.759 148.08 336.12 147.96 336.66 147.96 cv
337.08 147.96 li
337.08 137.521 li
336.66 137.521 li
336.12 137.521 335.759 137.4 335.519 137.221 cv
335.28 137.04 335.16 136.74 335.16 136.38 cv
335.16 136.08 335.28 135.78 335.519 135.601 cv
335.759 135.36 336.12 135.24 336.66 135.24 cv
339.36 135.24 li
339.36 136.021 li
339.899 135.66 340.5 135.42 341.04 135.24 cv
341.639 135.061 342.24 134.94 342.839 134.94 cv
344.399 134.94 345.719 135.48 346.86 136.561 cv
347.939 137.58 348.479 138.841 348.479 140.221 cv
348.479 141.721 347.82 142.98 346.559 143.94 cv
345.419 144.78 344.219 145.2 342.839 145.2 cv
342.24 145.2 341.639 145.141 341.099 144.96 cv
340.559 144.78 339.959 144.48 339.36 144.181 cv
cp
346.2 140.221 mo
346.2 139.92 346.08 139.5 345.839 139.021 cv
345.54 138.48 345.179 138.061 344.639 137.761 cv
344.099 137.4 343.5 137.221 342.78 137.221 cv
341.639 137.221 340.74 137.641 340.08 138.54 cv
339.599 139.141 339.36 139.681 339.36 140.221 cv
339.36 140.88 339.719 141.48 340.379 142.021 cv
341.04 142.62 341.82 142.92 342.78 142.92 cv
343.799 142.92 344.58 142.62 345.24 142.021 cv
345.899 141.48 346.2 140.88 346.2 140.221 cv
cp
367.5 135.24 mo
367.5 136.021 li
367.919 135.66 368.399 135.42 368.879 135.24 cv
369.419 135.061 369.959 134.94 370.559 134.94 cv
371.939 134.94 373.019 135.36 373.799 136.2 cv
374.399 136.86 374.7 137.761 374.7 138.841 cv
374.7 143.16 li
375.179 143.16 375.54 143.28 375.78 143.46 cv
376.019 143.641 376.139 143.94 376.139 144.301 cv
376.139 144.601 376.019 144.9 375.78 145.141 cv
375.54 145.32 375.12 145.44 374.58 145.44 cv
372.54 145.44 li
372 145.44 371.58 145.32 371.339 145.141 cv
371.099 144.9 370.979 144.601 370.979 144.301 cv
370.979 143.94 371.099 143.641 371.339 143.46 cv
371.58 143.28 371.939 143.16 372.419 143.16 cv
372.419 138.78 li
372.419 138.301 372.299 137.94 372 137.7 cv
371.639 137.4 371.099 137.221 370.439 137.221 cv
369.899 137.221 369.479 137.341 369.059 137.58 cv
368.639 137.761 368.099 138.181 367.5 138.841 cv
367.5 143.16 li
368.099 143.16 368.459 143.221 368.639 143.28 cv
369 143.521 369.179 143.88 369.179 144.301 cv
369.179 144.601 369.059 144.9 368.879 145.141 cv
368.639 145.32 368.219 145.44 367.679 145.44 cv
365.04 145.44 li
364.5 145.44 364.08 145.32 363.899 145.141 cv
363.66 144.9 363.54 144.601 363.54 144.301 cv
363.54 143.88 363.719 143.521 364.08 143.28 cv
364.259 143.221 364.62 143.16 365.219 143.16 cv
365.219 137.521 li
364.74 137.521 364.379 137.4 364.139 137.221 cv
363.899 137.04 363.78 136.74 363.78 136.38 cv
363.78 136.08 363.899 135.78 364.139 135.601 cv
364.379 135.36 364.799 135.24 365.339 135.24 cv
367.5 135.24 li
f
%ADOBeginSubsetFont: MyriadPro-SemiboldIt AddGlyphs
%ADOt1write: (1.0.24)systemdict beginPDCVEI+MyriadPro-SemiboldIt dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B87C132BEA6C015C8E4D6FEAE21197A29D7CE1337DBE7D66D68E506330B5804415DA358E9E7AC4D4C55F690261FBD9CEEB6A1464B9B3> |-systemdict /gcheck known {setglobal} if end {end} ifendPDCVEI+MyriadPro-SemiboldIt /Encoding getdup 46 /period putpop%ADOEndSubsetFont
/PDCVEI+MyriadPro-SemiboldIt*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one 49{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 8{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]PDCVEI+MyriadPro-SemiboldIt nfPDCVEI+MyriadPro-SemiboldIt*1 [20.46 0 0 -20.46 0 0 ]msf549.6 130.62 mo(. .)sh563.083 130.62 mo( .)[3.74414 0 ]xsh63.9595 254.04 mo
63.9595 256.5 li
61.1997 256.5 li
61.1997 254.04 li
63.9595 254.04 li
cp
64.2593 258.42 mo
64.2593 266.341 li
67.019 266.341 li
67.5591 266.341 67.979 266.46 68.2192 266.641 cv
68.4595 266.82 68.5796 267.12 68.5796 267.48 cv
68.5796 267.78 68.4595 268.08 68.2192 268.32 cv
67.979 268.5 67.5591 268.62 67.019 268.62 cv
59.2192 268.62 li
58.6792 268.62 58.2593 268.5 58.019 268.32 cv
57.7798 268.08 57.6597 267.78 57.6597 267.48 cv
57.6597 267.12 57.7798 266.82 58.019 266.641 cv
58.2593 266.46 58.6792 266.341 59.2192 266.341 cv
61.979 266.341 li
61.979 260.7 li
60.1196 260.7 li
59.5796 260.7 59.1597 260.58 58.9194 260.4 cv
58.6792 260.221 58.5591 259.92 58.5591 259.561 cv
58.5591 259.261 58.6792 258.96 58.9194 258.78 cv
59.1597 258.54 59.5796 258.42 60.1196 258.42 cv
64.2593 258.42 li
cp
74.5796 258.42 mo
74.5796 259.2 li
74.9995 258.841 75.479 258.601 75.9595 258.42 cv
76.4995 258.24 77.0396 258.12 77.6392 258.12 cv
79.019 258.12 80.0991 258.54 80.8794 259.381 cv
81.479 260.04 81.7798 260.94 81.7798 262.021 cv
81.7798 266.341 li
82.2593 266.341 82.6196 266.46 82.8599 266.641 cv
83.0991 266.82 83.2192 267.12 83.2192 267.48 cv
83.2192 267.78 83.0991 268.08 82.8599 268.32 cv
82.6196 268.5 82.1997 268.62 81.6597 268.62 cv
79.6196 268.62 li
79.0796 268.62 78.6597 268.5 78.4194 268.32 cv
78.1792 268.08 78.0591 267.78 78.0591 267.48 cv
78.0591 267.12 78.1792 266.82 78.4194 266.641 cv
78.6597 266.46 79.019 266.341 79.4995 266.341 cv
79.4995 261.96 li
79.4995 261.48 79.3794 261.12 79.0796 260.881 cv
78.7192 260.58 78.1792 260.4 77.519 260.4 cv
76.979 260.4 76.5591 260.521 76.1392 260.761 cv
75.7192 260.94 75.1792 261.36 74.5796 262.021 cv
74.5796 266.341 li
75.1792 266.341 75.5396 266.4 75.7192 266.46 cv
76.0796 266.7 76.2593 267.061 76.2593 267.48 cv
76.2593 267.78 76.1392 268.08 75.9595 268.32 cv
75.7192 268.5 75.2993 268.62 74.7593 268.62 cv
72.1196 268.62 li
71.5796 268.62 71.1597 268.5 70.979 268.32 cv
70.7397 268.08 70.6196 267.78 70.6196 267.48 cv
70.6196 267.061 70.7993 266.7 71.1597 266.46 cv
71.3394 266.4 71.6997 266.341 72.2993 266.341 cv
72.2993 260.7 li
71.8198 260.7 71.4595 260.58 71.2192 260.4 cv
70.979 260.221 70.8599 259.92 70.8599 259.561 cv
70.8599 259.261 70.979 258.96 71.2192 258.78 cv
71.4595 258.54 71.8794 258.42 72.4194 258.42 cv
74.5796 258.42 li
cp
87.8394 267.36 mo
87.8394 271.141 li
89.2192 271.141 li
89.7593 271.141 90.1792 271.261 90.4194 271.44 cv
90.6597 271.62 90.7798 271.92 90.7798 272.28 cv
90.7798 272.58 90.6597 272.881 90.4194 273.12 cv
90.1792 273.301 89.7593 273.42 89.2192 273.42 cv
85.1392 273.42 li
84.5991 273.42 84.2397 273.301 83.9995 273.12 cv
83.7593 272.881 83.6392 272.58 83.6392 272.28 cv
83.6392 271.92 83.7593 271.62 83.9995 271.44 cv
84.2397 271.261 84.5991 271.141 85.1392 271.141 cv
85.5591 271.141 li
85.5591 260.7 li
85.1392 260.7 li
84.5991 260.7 84.2397 260.58 83.9995 260.4 cv
83.7593 260.221 83.6392 259.92 83.6392 259.561 cv
83.6392 259.261 83.7593 258.96 83.9995 258.78 cv
84.2397 258.54 84.5991 258.42 85.1392 258.42 cv
87.8394 258.42 li
87.8394 259.2 li
88.3794 258.841 88.979 258.601 89.519 258.42 cv
90.1196 258.24 90.7192 258.12 91.3198 258.12 cv
92.8794 258.12 94.1997 258.66 95.3394 259.74 cv
96.4194 260.761 96.9595 262.021 96.9595 263.4 cv
96.9595 264.9 96.2993 266.16 95.0396 267.12 cv
93.8989 267.96 92.6997 268.381 91.3198 268.381 cv
90.7192 268.381 90.1196 268.32 89.5796 268.141 cv
89.0396 267.96 88.439 267.66 87.8394 267.36 cv
cp
94.6792 263.4 mo
94.6792 263.101 94.5591 262.681 94.3198 262.2 cv
94.019 261.66 93.6597 261.24 93.1196 260.94 cv
92.5796 260.58 91.979 260.4 91.2593 260.4 cv
90.1196 260.4 89.2192 260.82 88.5591 261.721 cv
88.0796 262.32 87.8394 262.86 87.8394 263.4 cv
87.8394 264.061 88.1997 264.66 88.8599 265.2 cv
89.519 265.801 90.2993 266.101 91.2593 266.101 cv
92.2798 266.101 93.0591 265.801 93.7192 265.2 cv
94.3794 264.66 94.6792 264.061 94.6792 263.4 cv
cp
109.379 258.42 mo
109.379 266.341 li
109.919 266.341 110.28 266.46 110.459 266.641 cv
110.7 266.82 110.82 267.12 110.82 267.48 cv
110.82 267.78 110.7 268.08 110.459 268.32 cv
110.219 268.5 109.86 268.62 109.32 268.62 cv
107.099 268.62 li
107.099 268.08 li
106.439 268.381 105.839 268.62 105.24 268.74 cv
104.639 268.92 104.04 268.98 103.5 268.98 cv
102.719 268.98 102.059 268.801 101.519 268.5 cv
100.979 268.2 100.559 267.721 100.259 267.181 cv
100.019 266.761 99.8989 266.28 99.8989 265.681 cv
99.8989 260.7 li
99.479 260.7 li
98.939 260.7 98.519 260.58 98.3394 260.4 cv
98.0991 260.221 97.979 259.92 97.979 259.561 cv
97.979 259.261 98.0991 258.96 98.3394 258.78 cv
98.519 258.54 98.939 258.42 99.479 258.42 cv
102.179 258.42 li
102.179 265.261 li
102.179 265.74 102.299 266.101 102.54 266.341 cv
102.78 266.58 103.139 266.7 103.62 266.7 cv
104.099 266.7 104.58 266.58 105.12 266.4 cv
105.66 266.221 106.32 265.92 107.099 265.44 cv
107.099 260.7 li
106.259 260.7 li
105.719 260.7 105.299 260.58 105.12 260.4 cv
104.879 260.221 104.759 259.92 104.759 259.561 cv
104.759 259.261 104.879 258.96 105.12 258.78 cv
105.299 258.54 105.719 258.42 106.259 258.42 cv
109.379 258.42 li
cp
117.78 260.7 mo
117.78 265.32 li
117.78 265.86 117.899 266.16 118.08 266.341 cv
118.379 266.58 118.919 266.7 119.759 266.7 cv
120.899 266.7 121.979 266.46 123 265.92 cv
123.36 265.74 123.66 265.62 123.899 265.62 cv
124.2 265.62 124.439 265.74 124.679 265.98 cv
124.86 266.221 124.979 266.521 124.979 266.82 cv
124.979 267.12 124.86 267.36 124.62 267.601 cv
124.259 267.9 123.54 268.261 122.459 268.561 cv
121.379 268.86 120.479 268.98 119.759 268.98 cv
118.32 268.98 117.24 268.681 116.519 268.08 cv
115.799 267.42 115.439 266.7 115.439 265.801 cv
115.439 260.7 li
114.599 260.7 li
114.059 260.7 113.639 260.58 113.459 260.4 cv
113.219 260.221 113.099 259.92 113.099 259.561 cv
113.099 259.261 113.219 258.96 113.459 258.78 cv
113.639 258.54 114.059 258.42 114.599 258.42 cv
115.439 258.42 li
115.439 256.381 li
115.439 255.841 115.559 255.42 115.799 255.181 cv
115.979 254.94 116.28 254.82 116.58 254.82 cv
116.939 254.82 117.24 254.94 117.419 255.181 cv
117.66 255.42 117.78 255.841 117.78 256.381 cv
117.78 258.42 li
121.979 258.42 li
122.519 258.42 122.939 258.54 123.179 258.78 cv
123.419 258.96 123.54 259.261 123.54 259.561 cv
123.54 259.92 123.419 260.221 123.179 260.4 cv
122.939 260.58 122.519 260.7 121.979 260.7 cv
117.78 260.7 li
cp
147.059 253.74 mo
147.059 266.341 li
149.339 266.341 li
149.879 266.341 150.299 266.46 150.54 266.641 cv
150.78 266.82 150.899 267.12 150.899 267.48 cv
150.899 267.78 150.78 268.08 150.54 268.32 cv
150.299 268.5 149.879 268.62 149.339 268.62 cv
142.379 268.62 li
141.839 268.62 141.479 268.5 141.24 268.32 cv
141 268.08 140.879 267.78 140.879 267.48 cv
140.879 267.12 141 266.82 141.24 266.641 cv
141.479 266.46 141.839 266.341 142.379 266.341 cv
144.719 266.341 li
144.719 256.74 li
142.679 257.28 li
142.379 257.341 142.139 257.4 141.959 257.4 cv
141.66 257.4 141.36 257.28 141.179 257.04 cv
141 256.801 140.879 256.5 140.879 256.2 cv
140.879 255.9 140.939 255.66 141.12 255.48 cv
141.24 255.301 141.54 255.12 142.08 255 cv
147.059 253.74 li
f
63.9595 322.92 mo
63.9595 325.38 li
61.1997 325.38 li
61.1997 322.92 li
63.9595 322.92 li
cp
64.2593 327.301 mo
64.2593 335.221 li
67.019 335.221 li
67.5591 335.221 67.979 335.341 68.2192 335.521 cv
68.4595 335.7 68.5796 336 68.5796 336.36 cv
68.5796 336.66 68.4595 336.96 68.2192 337.2 cv
67.979 337.38 67.5591 337.5 67.019 337.5 cv
59.2192 337.5 li
58.6792 337.5 58.2593 337.38 58.019 337.2 cv
57.7798 336.96 57.6597 336.66 57.6597 336.36 cv
57.6597 336 57.7798 335.7 58.019 335.521 cv
58.2593 335.341 58.6792 335.221 59.2192 335.221 cv
61.979 335.221 li
61.979 329.58 li
60.1196 329.58 li
59.5796 329.58 59.1597 329.46 58.9194 329.28 cv
58.6792 329.101 58.5591 328.801 58.5591 328.44 cv
58.5591 328.141 58.6792 327.841 58.9194 327.66 cv
59.1597 327.42 59.5796 327.301 60.1196 327.301 cv
64.2593 327.301 li
cp
74.5796 327.301 mo
74.5796 328.08 li
74.9995 327.721 75.479 327.48 75.9595 327.301 cv
76.4995 327.12 77.0396 327 77.6392 327 cv
79.019 327 80.0991 327.42 80.8794 328.261 cv
81.479 328.92 81.7798 329.82 81.7798 330.9 cv
81.7798 335.221 li
82.2593 335.221 82.6196 335.341 82.8599 335.521 cv
83.0991 335.7 83.2192 336 83.2192 336.36 cv
83.2192 336.66 83.0991 336.96 82.8599 337.2 cv
82.6196 337.38 82.1997 337.5 81.6597 337.5 cv
79.6196 337.5 li
79.0796 337.5 78.6597 337.38 78.4194 337.2 cv
78.1792 336.96 78.0591 336.66 78.0591 336.36 cv
78.0591 336 78.1792 335.7 78.4194 335.521 cv
78.6597 335.341 79.019 335.221 79.4995 335.221 cv
79.4995 330.841 li
79.4995 330.36 79.3794 330 79.0796 329.761 cv
78.7192 329.46 78.1792 329.28 77.519 329.28 cv
76.979 329.28 76.5591 329.4 76.1392 329.641 cv
75.7192 329.82 75.1792 330.24 74.5796 330.9 cv
74.5796 335.221 li
75.1792 335.221 75.5396 335.28 75.7192 335.341 cv
76.0796 335.58 76.2593 335.94 76.2593 336.36 cv
76.2593 336.66 76.1392 336.96 75.9595 337.2 cv
75.7192 337.38 75.2993 337.5 74.7593 337.5 cv
72.1196 337.5 li
71.5796 337.5 71.1597 337.38 70.979 337.2 cv
70.7397 336.96 70.6196 336.66 70.6196 336.36 cv
70.6196 335.94 70.7993 335.58 71.1597 335.341 cv
71.3394 335.28 71.6997 335.221 72.2993 335.221 cv
72.2993 329.58 li
71.8198 329.58 71.4595 329.46 71.2192 329.28 cv
70.979 329.101 70.8599 328.801 70.8599 328.44 cv
70.8599 328.141 70.979 327.841 71.2192 327.66 cv
71.4595 327.42 71.8794 327.301 72.4194 327.301 cv
74.5796 327.301 li
cp
87.8394 336.24 mo
87.8394 340.021 li
89.2192 340.021 li
89.7593 340.021 90.1792 340.141 90.4194 340.32 cv
90.6597 340.5 90.7798 340.801 90.7798 341.16 cv
90.7798 341.46 90.6597 341.761 90.4194 342 cv
90.1792 342.181 89.7593 342.301 89.2192 342.301 cv
85.1392 342.301 li
84.5991 342.301 84.2397 342.181 83.9995 342 cv
83.7593 341.761 83.6392 341.46 83.6392 341.16 cv
83.6392 340.801 83.7593 340.5 83.9995 340.32 cv
84.2397 340.141 84.5991 340.021 85.1392 340.021 cv
85.5591 340.021 li
85.5591 329.58 li
85.1392 329.58 li
84.5991 329.58 84.2397 329.46 83.9995 329.28 cv
83.7593 329.101 83.6392 328.801 83.6392 328.44 cv
83.6392 328.141 83.7593 327.841 83.9995 327.66 cv
84.2397 327.42 84.5991 327.301 85.1392 327.301 cv
87.8394 327.301 li
87.8394 328.08 li
88.3794 327.721 88.979 327.48 89.519 327.301 cv
90.1196 327.12 90.7192 327 91.3198 327 cv
92.8794 327 94.1997 327.54 95.3394 328.62 cv
96.4194 329.641 96.9595 330.9 96.9595 332.28 cv
96.9595 333.78 96.2993 335.04 95.0396 336 cv
93.8989 336.841 92.6997 337.261 91.3198 337.261 cv
90.7192 337.261 90.1196 337.2 89.5796 337.021 cv
89.0396 336.841 88.439 336.54 87.8394 336.24 cv
cp
94.6792 332.28 mo
94.6792 331.98 94.5591 331.561 94.3198 331.08 cv
94.019 330.54 93.6597 330.12 93.1196 329.82 cv
92.5796 329.46 91.979 329.28 91.2593 329.28 cv
90.1196 329.28 89.2192 329.7 88.5591 330.601 cv
88.0796 331.2 87.8394 331.74 87.8394 332.28 cv
87.8394 332.94 88.1997 333.54 88.8599 334.08 cv
89.519 334.681 90.2993 334.98 91.2593 334.98 cv
92.2798 334.98 93.0591 334.681 93.7192 334.08 cv
94.3794 333.54 94.6792 332.94 94.6792 332.28 cv
cp
109.379 327.301 mo
109.379 335.221 li
109.919 335.221 110.28 335.341 110.459 335.521 cv
110.7 335.7 110.82 336 110.82 336.36 cv
110.82 336.66 110.7 336.96 110.459 337.2 cv
110.219 337.38 109.86 337.5 109.32 337.5 cv
107.099 337.5 li
107.099 336.96 li
106.439 337.261 105.839 337.5 105.24 337.62 cv
104.639 337.801 104.04 337.86 103.5 337.86 cv
102.719 337.86 102.059 337.681 101.519 337.38 cv
100.979 337.08 100.559 336.601 100.259 336.061 cv
100.019 335.641 99.8989 335.16 99.8989 334.561 cv
99.8989 329.58 li
99.479 329.58 li
98.939 329.58 98.519 329.46 98.3394 329.28 cv
98.0991 329.101 97.979 328.801 97.979 328.44 cv
97.979 328.141 98.0991 327.841 98.3394 327.66 cv
98.519 327.42 98.939 327.301 99.479 327.301 cv
102.179 327.301 li
102.179 334.141 li
102.179 334.62 102.299 334.98 102.54 335.221 cv
102.78 335.46 103.139 335.58 103.62 335.58 cv
104.099 335.58 104.58 335.46 105.12 335.28 cv
105.66 335.101 106.32 334.801 107.099 334.32 cv
107.099 329.58 li
106.259 329.58 li
105.719 329.58 105.299 329.46 105.12 329.28 cv
104.879 329.101 104.759 328.801 104.759 328.44 cv
104.759 328.141 104.879 327.841 105.12 327.66 cv
105.299 327.42 105.719 327.301 106.259 327.301 cv
109.379 327.301 li
cp
117.78 329.58 mo
117.78 334.2 li
117.78 334.74 117.899 335.04 118.08 335.221 cv
118.379 335.46 118.919 335.58 119.759 335.58 cv
120.899 335.58 121.979 335.341 123 334.801 cv
123.36 334.62 123.66 334.5 123.899 334.5 cv
124.2 334.5 124.439 334.62 124.679 334.86 cv
124.86 335.101 124.979 335.4 124.979 335.7 cv
124.979 336 124.86 336.24 124.62 336.48 cv
124.259 336.78 123.54 337.141 122.459 337.44 cv
121.379 337.74 120.479 337.86 119.759 337.86 cv
118.32 337.86 117.24 337.561 116.519 336.96 cv
115.799 336.301 115.439 335.58 115.439 334.681 cv
115.439 329.58 li
114.599 329.58 li
114.059 329.58 113.639 329.46 113.459 329.28 cv
113.219 329.101 113.099 328.801 113.099 328.44 cv
113.099 328.141 113.219 327.841 113.459 327.66 cv
113.639 327.42 114.059 327.301 114.599 327.301 cv
115.439 327.301 li
115.439 325.261 li
115.439 324.721 115.559 324.301 115.799 324.061 cv
115.979 323.82 116.28 323.7 116.58 323.7 cv
116.939 323.7 117.24 323.82 117.419 324.061 cv
117.66 324.301 117.78 324.721 117.78 325.261 cv
117.78 327.301 li
121.979 327.301 li
122.519 327.301 122.939 327.42 123.179 327.66 cv
123.419 327.841 123.54 328.141 123.54 328.44 cv
123.54 328.801 123.419 329.101 123.179 329.28 cv
122.939 329.46 122.519 329.58 121.979 329.58 cv
117.78 329.58 li
cp
143.7 335.221 mo
148.74 335.221 li
149.04 334.98 149.28 334.86 149.519 334.86 cv
149.879 334.86 150.179 334.98 150.36 335.221 cv
150.54 335.46 150.66 335.88 150.66 336.42 cv
150.66 337.5 li
140.219 337.5 li
140.219 335.04 li
144.36 331.62 146.82 329.46 147.719 328.44 cv
148.139 327.96 148.379 327.48 148.379 327.061 cv
148.379 326.521 148.139 325.98 147.599 325.561 cv
147.12 325.141 146.459 324.9 145.679 324.9 cv
144.839 324.9 144.12 325.141 143.58 325.62 cv
143.28 325.86 143.099 326.221 142.919 326.761 cv
142.799 327.061 142.679 327.301 142.5 327.42 cv
142.32 327.601 142.08 327.66 141.839 327.66 cv
141.54 327.66 141.24 327.54 141 327.301 cv
140.759 327.061 140.639 326.82 140.639 326.521 cv
140.639 326.101 140.879 325.5 141.299 324.841 cv
141.719 324.181 142.32 323.641 143.099 323.221 cv
143.879 322.801 144.78 322.62 145.679 322.62 cv
147.179 322.62 148.379 323.04 149.28 323.94 cv
150.179 324.841 150.66 325.86 150.66 327.12 cv
150.66 327.78 150.54 328.38 150.24 328.92 cv
150 329.46 149.339 330.181 148.32 331.141 cv
147.54 331.92 146.04 333.24 143.7 335.221 cv
f
561.898 289.261 mo
558.898 288.48 li
558.479 285.54 557.938 282.78 557.159 280.261 cv
555.359 280.141 553.739 280.141 552.359 280.2 cv
551.339 282.78 550.559 285.54 550.079 288.48 cv
547.019 289.261 li
544.079 290.46 li
542.099 288.36 540.059 286.44 537.839 284.761 cv
536.579 285.721 535.259 286.681 533.938 287.58 cv
534.719 290.521 535.739 293.221 536.999 295.561 cv
536.219 296.4 535.499 297.24 534.959 298.08 cv
534.059 299.341 li
533.219 300.66 li
530.459 300.36 527.699 300.061 524.879 299.761 cv
524.099 301.86 523.619 303.42 523.379 304.32 cv
525.539 306.12 527.938 307.681 530.579 309.061 cv
530.339 312.181 li
530.398 313.801 li
530.579 315.36 li
527.879 316.62 525.419 318 523.259 319.561 cv
523.619 321.12 524.099 322.62 524.699 324.12 cv
533.219 323.7 li
534.059 325.021 li
534.359 325.5 534.659 325.98 534.959 326.4 cv
536.999 328.801 li
535.679 331.021 534.539 333.601 533.519 336.48 cv
534.959 337.74 536.279 338.7 537.419 339.36 cv
539.819 337.74 542.039 335.94 544.079 333.96 cv
545.519 334.62 li
547.019 335.16 li
550.079 335.881 li
550.379 338.7 550.979 341.46 551.819 344.16 cv
556.559 344.16 li
557.579 341.641 558.359 338.881 558.898 335.881 cv
561.898 335.16 li
563.398 334.62 li
564.839 333.96 li
566.699 336 568.799 337.86 571.079 339.601 cv
571.979 339.061 573.299 338.16 574.979 336.841 cv
574.199 333.841 573.179 331.141 571.979 328.801 cv
574.019 326.4 li
575.699 323.7 li
584.039 324.66 li
585.599 320.04 li
583.438 318.301 581.039 316.74 578.398 315.36 cv
578.519 313.801 li
578.639 312.181 li
578.398 309.061 li
581.159 307.801 583.559 306.36 585.659 304.86 cv
585.359 303.42 584.879 301.92 584.219 300.301 cv
575.699 300.66 li
574.859 299.341 li
574.019 298.08 li
571.979 295.561 li
573.299 293.221 574.438 290.7 575.459 287.94 cv
574.139 286.801 572.879 285.841 571.619 285.12 cv
569.099 286.681 566.819 288.48 564.839 290.46 cv
564.419 290.221 563.398 289.801 561.898 289.261 cv
cp
563.219 300.181 mo
564.539 301.141 565.619 302.221 566.519 303.42 cv
568.379 305.94 569.339 308.881 569.398 312.181 cv
569.339 315.54 568.379 318.48 566.519 320.94 cv
565.619 322.2 564.539 323.341 563.219 324.24 cv
559.079 326.4 li
554.459 327.12 li
549.898 326.4 li
548.398 325.86 546.959 325.141 545.699 324.24 cv
544.438 323.341 543.359 322.2 542.459 320.94 cv
540.599 318.42 539.639 315.48 539.579 312.181 cv
539.639 308.881 540.599 305.94 542.459 303.42 cv
543.359 302.221 544.438 301.141 545.699 300.181 cv
546.959 299.28 548.398 298.561 549.898 298.08 cv
551.398 297.601 552.898 297.36 554.459 297.36 cv
556.079 297.36 557.579 297.601 559.079 298.08 cv
560.579 298.561 561.959 299.28 563.219 300.181 cv
ef
525.179 340.561 mo
523.679 343.141 522.659 345.9 522.119 348.78 cv
520.739 349.08 519.599 349.44 518.759 349.86 cv
517.559 350.4 516.539 351 515.699 351.66 cv
513.419 349.98 510.839 348.721 508.019 347.82 cv
506.759 349.08 505.559 350.7 504.419 352.561 cv
505.919 355.261 507.779 357.54 509.999 359.4 cv
509.639 360.42 509.398 361.561 509.219 362.82 cv
509.099 364.08 509.099 365.28 509.219 366.36 cv
506.639 367.561 504.299 369.12 502.139 371.101 cv
502.679 373.2 503.459 375.061 504.419 376.62 cv
507.539 376.62 510.419 376.141 513.119 375.181 cv
514.019 375.96 514.859 376.74 515.699 377.521 cv
518.759 379.32 li
518.519 382.2 518.699 385.08 519.299 387.9 cv
525.179 388.621 li
526.739 385.98 527.818 383.221 528.359 380.4 cv
531.659 379.32 li
532.859 378.78 533.879 378.181 534.719 377.521 cv
537.059 379.2 539.639 380.46 542.459 381.36 cv
543.719 380.04 544.919 378.48 546.059 376.62 cv
544.499 373.92 542.639 371.641 540.419 369.78 cv
541.199 366.36 li
541.199 362.82 li
543.839 361.561 546.239 360 548.339 358.08 cv
547.739 355.98 546.959 354.12 545.999 352.561 cv
542.938 352.5 540.059 352.98 537.359 354 cv
534.719 351.66 li
533.938 351 532.919 350.4 531.659 349.86 cv
531.898 346.98 531.719 344.101 531.119 341.28 cv
525.179 340.561 li
cp
531.479 361.86 mo
531.959 362.94 532.139 364.08 532.019 365.28 cv
531.839 366.54 531.419 367.62 530.699 368.58 cv
529.979 369.601 529.079 370.38 527.999 370.86 cv
526.859 371.341 525.719 371.521 524.459 371.4 cv
523.199 371.221 522.119 370.801 521.219 370.08 cv
520.199 369.42 519.479 368.46 518.999 367.32 cv
518.459 366.181 518.279 365.04 518.398 363.841 cv
518.579 362.641 518.999 361.561 519.719 360.601 cv
520.499 359.58 521.398 358.801 522.479 358.32 cv
523.559 357.841 524.699 357.66 525.959 357.78 cv
527.219 357.96 528.299 358.38 529.259 359.101 cv
530.219 359.761 530.938 360.721 531.479 361.86 cv
ef
511.499 276.841 mo
503.879 280.86 li
501.239 278.94 li
498.419 277.2 li
499.739 268.92 li
495.719 267.12 li
493.739 269.04 491.879 271.2 490.019 273.54 cv
486.839 272.641 li
483.599 272.101 li
483.179 269.28 482.579 266.521 481.859 263.88 cv
477.359 263.641 li
476.219 266.28 475.259 268.98 474.479 271.681 cv
473.339 271.74 472.259 271.86 471.239 272.04 cv
467.999 272.641 li
463.379 265.681 li
459.119 267.061 li
458.999 269.88 459.059 272.761 459.299 275.58 cv
456.359 277.141 li
453.599 278.82 li
451.259 277.021 448.979 275.4 446.759 273.96 cv
443.279 276.841 li
444.239 279.601 445.319 282.24 446.579 284.761 cv
444.359 287.221 li
442.438 289.801 li
439.919 289.021 437.159 288.36 434.219 287.761 cv
432.119 291.601 li
433.979 293.94 435.959 295.98 437.999 297.841 cv
436.799 300.96 li
435.959 304.141 li
427.619 305.101 li
427.019 309.54 li
429.479 310.92 432.059 312.12 434.759 313.141 cv
434.759 316.44 li
434.879 317.58 434.999 318.66 435.059 319.74 cv
427.679 323.7 li
428.699 328.021 li
437.219 328.62 li
438.479 331.681 li
439.919 334.681 li
437.819 336.841 436.019 338.94 434.459 341.04 cv
436.979 344.7 li
445.139 342.181 li
447.419 344.58 li
449.819 346.801 li
448.799 349.261 447.839 351.9 446.999 354.721 cv
450.719 357.181 li
457.438 351.96 li
460.379 353.4 li
463.438 354.54 li
463.379 357.24 463.438 360.061 463.679 362.94 cv
467.999 363.9 li
469.499 361.801 470.938 359.341 472.379 356.641 cv
473.519 356.7 474.599 356.761 475.679 356.88 cv
478.919 356.88 li
479.938 359.641 481.079 362.221 482.219 364.561 cv
486.599 363.96 li
487.259 361.021 487.739 358.2 488.039 355.561 cv
491.159 354.54 li
494.219 353.4 li
496.079 355.561 497.999 357.601 500.039 359.46 cv
503.938 357.301 li
503.519 354.48 502.979 351.66 502.199 348.9 cv
504.779 346.92 li
507.239 344.641 li
509.579 345.9 512.159 347.101 514.859 348.181 cv
517.679 344.761 li
516.179 342.12 514.619 339.721 512.999 337.62 cv
514.739 334.74 li
516.239 331.801 li
524.579 332.341 li
525.959 328.141 li
519.119 323.101 li
519.599 319.86 li
519.959 316.62 li
527.938 314.101 li
527.699 309.601 li
524.879 308.7 522.119 307.98 519.479 307.44 cv
518.759 304.2 li
517.919 301.08 li
524.459 295.86 li
522.659 291.721 li
514.139 292.681 li
512.398 289.92 li
510.419 287.28 li
514.619 280.021 li
511.499 276.841 li
cp
504.779 295.2 mo
507.119 298.561 508.799 302.28 509.818 306.36 cv
510.779 310.5 511.019 314.58 510.479 318.66 cv
509.938 322.74 508.619 326.641 506.639 330.301 cv
504.659 333.96 502.019 337.141 498.839 339.78 cv
495.659 342.48 492.119 344.46 488.159 345.841 cv
484.259 347.221 480.239 347.82 475.979 347.641 cv
471.839 347.46 467.879 346.5 464.099 344.88 cv
460.259 343.2 456.839 340.92 453.898 337.98 cv
450.959 335.101 448.619 331.74 446.879 327.9 cv
445.139 324.12 444.179 320.16 443.999 316.021 cv
443.819 311.82 444.359 307.74 445.619 303.78 cv
446.938 299.761 448.919 296.221 451.499 293.04 cv
454.199 289.801 457.319 287.16 460.919 285.12 cv
464.639 283.08 468.539 281.761 472.559 281.16 cv
484.799 281.7 li
488.879 282.601 492.659 284.221 496.079 286.561 cv
499.499 288.9 502.438 291.78 504.779 295.2 cv
ef
402.12 113.521 mo
402.12 130.98 li
463.799 130.98 li
463.799 113.521 li
402.12 113.521 li
cp
0 0 0 0 cmyk
f
459.719 113.521 mo
459.419 114.24 li
459.239 114.42 458.999 114.54 458.699 114.54 cv
457.979 114.24 li
457.799 114.061 457.679 113.82 457.679 113.521 cv
457.679 113.221 457.799 112.98 457.979 112.801 cv
458.699 112.5 li
458.999 112.5 459.239 112.62 459.419 112.801 cv
459.719 113.521 li
cp
462.779 113.521 mo
462.779 113.221 462.898 112.98 463.079 112.801 cv
463.799 112.5 li
464.099 112.5 464.339 112.62 464.519 112.801 cv
464.879 113.521 li
464.519 114.24 li
464.339 114.42 464.099 114.54 463.799 114.54 cv
463.079 114.24 li
462.898 114.061 462.779 113.82 462.779 113.521 cv
cp
454.559 113.521 mo
454.259 114.24 li
453.539 114.54 li
453.239 114.54 452.999 114.42 452.819 114.24 cv
452.639 114.061 452.519 113.82 452.519 113.521 cv
452.519 113.221 452.639 112.98 452.819 112.801 cv
452.999 112.62 453.239 112.5 453.539 112.5 cv
454.259 112.801 li
454.559 113.521 li
cp
463.079 116.94 mo
463.319 116.7 463.559 116.58 463.799 116.58 cv
464.099 116.58 464.339 116.7 464.519 116.94 cv
464.879 117.66 li
464.519 118.38 li
464.339 118.561 464.099 118.681 463.799 118.681 cv
463.079 118.38 li
462.898 118.141 462.779 117.9 462.779 117.66 cv
462.779 117.36 462.898 117.12 463.079 116.94 cv
cp
463.079 122.04 mo
463.319 121.86 463.559 121.74 463.799 121.74 cv
464.099 121.74 464.339 121.86 464.519 122.04 cv
464.879 122.761 li
464.519 123.48 li
464.339 123.66 464.099 123.78 463.799 123.78 cv
463.079 123.48 li
462.898 123.301 462.779 123.061 462.779 122.761 cv
462.779 122.46 462.898 122.221 463.079 122.04 cv
cp
449.099 112.801 mo
449.398 113.521 li
449.099 114.24 li
448.379 114.54 li
448.079 114.54 447.839 114.42 447.659 114.24 cv
447.479 114.061 447.359 113.82 447.359 113.521 cv
447.359 113.221 447.479 112.98 447.659 112.801 cv
447.839 112.62 448.079 112.5 448.379 112.5 cv
449.099 112.801 li
cp
444.299 113.521 mo
443.999 114.24 li
443.279 114.54 li
442.979 114.54 442.739 114.42 442.559 114.24 cv
442.319 114.061 442.199 113.82 442.199 113.521 cv
442.199 113.221 442.319 112.98 442.559 112.801 cv
442.739 112.62 442.979 112.5 443.279 112.5 cv
443.999 112.801 li
444.299 113.521 li
cp
447.059 130.261 mo
447.359 130.98 li
447.059 131.7 li
446.339 132.061 li
446.039 132.061 445.799 131.94 445.619 131.7 cv
445.438 131.521 445.319 131.28 445.319 130.98 cv
445.319 130.74 445.438 130.5 445.619 130.261 cv
445.799 130.08 446.039 129.96 446.339 129.96 cv
446.639 129.96 446.879 130.08 447.059 130.261 cv
cp
450.779 130.261 mo
450.959 130.08 451.199 129.96 451.499 129.96 cv
451.799 129.96 452.039 130.08 452.219 130.261 cv
452.519 130.98 li
452.219 131.7 li
452.039 131.94 451.799 132.061 451.499 132.061 cv
450.779 131.7 li
450.479 130.98 li
450.479 130.74 450.599 130.5 450.779 130.261 cv
cp
463.079 127.2 mo
463.319 127.021 463.559 126.9 463.799 126.9 cv
464.099 126.9 464.339 127.021 464.519 127.2 cv
464.879 127.92 li
464.519 128.641 li
464.339 128.82 464.099 128.94 463.799 128.94 cv
463.079 128.641 li
462.898 128.46 462.779 128.221 462.779 127.92 cv
462.779 127.62 462.898 127.38 463.079 127.2 cv
cp
457.319 130.261 mo
457.679 130.98 li
457.319 131.7 li
456.599 132.061 li
456.359 132.061 456.119 131.94 455.879 131.7 cv
455.699 131.521 455.579 131.28 455.579 130.98 cv
455.579 130.74 455.699 130.5 455.879 130.261 cv
456.119 130.08 456.359 129.96 456.599 129.96 cv
456.898 129.96 457.139 130.08 457.319 130.261 cv
cp
461.039 130.261 mo
461.219 130.08 461.459 129.96 461.759 129.96 cv
462.059 129.96 462.299 130.08 462.479 130.261 cv
462.779 130.98 li
462.479 131.7 li
461.759 132.061 li
461.039 131.7 li
460.859 131.521 460.739 131.28 460.739 130.98 cv
460.739 130.74 460.859 130.5 461.039 130.261 cv
cp
418.559 113.521 mo
418.259 114.24 li
417.54 114.54 li
417.24 114.54 417 114.42 416.82 114.24 cv
416.519 113.521 li
416.82 112.801 li
417 112.62 417.24 112.5 417.54 112.5 cv
418.259 112.801 li
418.559 113.521 li
cp
413.459 113.521 mo
413.099 114.24 li
412.379 114.54 li
412.139 114.54 411.899 114.42 411.66 114.24 cv
411.479 114.061 411.36 113.82 411.36 113.521 cv
411.36 113.221 411.479 112.98 411.66 112.801 cv
411.899 112.62 412.139 112.5 412.379 112.5 cv
413.099 112.801 li
413.459 113.521 li
cp
408 112.801 mo
408.299 113.521 li
408 114.24 li
407.28 114.54 li
406.979 114.54 406.74 114.42 406.559 114.24 cv
406.379 114.061 406.259 113.82 406.259 113.521 cv
406.259 113.221 406.379 112.98 406.559 112.801 cv
406.74 112.62 406.979 112.5 407.28 112.5 cv
408 112.801 li
cp
403.139 113.521 mo
402.839 114.24 li
400.565 115.655 400.565 111.386 402.839 112.801 cv
403.139 113.521 li
cp
403.139 118.681 mo
402.839 119.4 li
402.12 119.7 li
401.399 119.4 li
401.099 118.681 li
401.399 117.96 li
401.58 117.78 401.82 117.66 402.12 117.66 cv
402.419 117.66 402.66 117.78 402.839 117.96 cv
403.139 118.681 li
cp
403.139 128.94 mo
402.839 129.66 li
402.12 129.96 li
401.399 129.66 li
401.099 128.94 li
401.399 128.221 li
401.58 128.04 401.82 127.92 402.12 127.92 cv
402.419 127.92 402.66 128.04 402.839 128.221 cv
403.139 128.94 li
cp
402.12 124.86 mo
401.399 124.5 li
401.099 123.78 li
401.399 123.061 li
401.58 122.88 401.82 122.761 402.12 122.761 cv
402.419 122.761 402.66 122.88 402.839 123.061 cv
403.139 123.78 li
402.839 124.5 li
402.12 124.86 li
cp
404.459 130.261 mo
404.7 130.08 404.939 129.96 405.179 129.96 cv
405.479 129.96 405.719 130.08 405.899 130.261 cv
406.259 130.98 li
405.899 131.7 li
405.179 132.061 li
404.939 132.061 404.7 131.94 404.459 131.7 cv
404.28 131.521 404.16 131.28 404.16 130.98 cv
404.16 130.74 404.28 130.5 404.459 130.261 cv
cp
409.62 130.261 mo
409.799 130.08 410.04 129.96 410.339 129.96 cv
411.059 130.261 li
411.36 130.98 li
411.059 131.7 li
410.339 132.061 li
410.04 132.061 409.799 131.94 409.62 131.7 cv
409.439 131.521 409.32 131.28 409.32 130.98 cv
409.32 130.74 409.439 130.5 409.62 130.261 cv
cp
416.219 130.261 mo
416.519 130.98 li
416.219 131.7 li
416.04 131.94 415.799 132.061 415.5 132.061 cv
414.78 131.7 li
414.599 131.521 414.479 131.28 414.479 130.98 cv
414.479 130.74 414.599 130.5 414.78 130.261 cv
414.959 130.08 415.2 129.96 415.5 129.96 cv
415.799 129.96 416.04 130.08 416.219 130.261 cv
cp
419.939 130.261 mo
420.12 130.08 420.36 129.96 420.66 129.96 cv
420.899 129.96 421.139 130.08 421.379 130.261 cv
421.679 130.98 li
421.379 131.7 li
421.139 131.94 420.899 132.061 420.66 132.061 cv
419.939 131.7 li
419.7 131.521 419.58 131.28 419.58 130.98 cv
419.58 130.74 419.7 130.5 419.939 130.261 cv
cp
438.839 112.801 mo
439.139 113.521 li
438.839 114.24 li
438.119 114.54 li
437.819 114.54 437.579 114.42 437.398 114.24 cv
437.219 114.061 437.099 113.82 437.099 113.521 cv
437.099 113.221 437.219 112.98 437.398 112.801 cv
437.579 112.62 437.819 112.5 438.119 112.5 cv
438.839 112.801 li
cp
433.979 113.521 mo
433.679 114.24 li
433.499 114.42 433.259 114.54 432.959 114.54 cv
432.239 114.24 li
432.059 114.061 431.938 113.82 431.938 113.521 cv
431.938 113.221 432.059 112.98 432.239 112.801 cv
432.959 112.5 li
433.259 112.5 433.499 112.62 433.679 112.801 cv
433.979 113.521 li
cp
428.579 112.801 mo
428.879 113.521 li
428.579 114.24 li
427.859 114.54 li
427.139 114.24 li
426.898 114.061 426.779 113.82 426.779 113.521 cv
426.779 113.221 426.898 112.98 427.139 112.801 cv
427.859 112.5 li
428.579 112.801 li
cp
423.719 113.521 mo
423.419 114.24 li
422.699 114.54 li
421.979 114.24 li
421.799 114.061 421.679 113.82 421.679 113.521 cv
421.679 113.221 421.799 112.98 421.979 112.801 cv
422.699 112.5 li
423.419 112.801 li
423.719 113.521 li
cp
426.479 130.261 mo
426.779 130.98 li
426.479 131.7 li
425.759 132.061 li
425.459 132.061 425.219 131.94 425.039 131.7 cv
424.859 131.521 424.739 131.28 424.739 130.98 cv
424.739 130.74 424.859 130.5 425.039 130.261 cv
425.219 130.08 425.459 129.96 425.759 129.96 cv
426.059 129.96 426.299 130.08 426.479 130.261 cv
cp
430.199 130.261 mo
430.379 130.08 430.619 129.96 430.919 129.96 cv
431.219 129.96 431.459 130.08 431.639 130.261 cv
431.938 130.98 li
431.639 131.7 li
430.919 132.061 li
430.619 132.061 430.379 131.94 430.199 131.7 cv
430.019 131.521 429.898 131.28 429.898 130.98 cv
429.898 130.74 430.019 130.5 430.199 130.261 cv
cp
436.799 130.261 mo
437.099 130.98 li
436.799 131.7 li
436.079 132.061 li
435.359 131.7 li
435.119 131.521 434.999 131.28 434.999 130.98 cv
434.999 130.74 435.119 130.5 435.359 130.261 cv
435.539 130.08 435.779 129.96 436.079 129.96 cv
436.319 129.96 436.559 130.08 436.799 130.261 cv
cp
440.459 130.261 mo
440.639 130.08 440.879 129.96 441.179 129.96 cv
441.898 130.261 li
442.199 130.98 li
441.898 131.7 li
441.179 132.061 li
440.879 132.061 440.639 131.94 440.459 131.7 cv
440.279 131.521 440.159 131.28 440.159 130.98 cv
440.159 130.74 440.279 130.5 440.459 130.261 cv
0 0 0 1 cmyk
ef
476.159 113.521 mo
476.159 130.98 li
537.839 130.98 li
537.839 113.521 li
476.159 113.521 li
cp
0 0 0 0 cmyk
f
533.759 113.521 mo
533.459 114.24 li
533.279 114.42 533.039 114.54 532.739 114.54 cv
532.019 114.24 li
531.839 114.061 531.719 113.82 531.719 113.521 cv
531.719 113.221 531.839 112.98 532.019 112.801 cv
532.739 112.5 li
533.039 112.5 533.279 112.62 533.459 112.801 cv
533.759 113.521 li
cp
536.819 113.521 mo
536.819 113.221 536.938 112.98 537.119 112.801 cv
537.839 112.5 li
538.139 112.5 538.379 112.62 538.559 112.801 cv
538.919 113.521 li
538.559 114.24 li
538.379 114.42 538.139 114.54 537.839 114.54 cv
537.119 114.24 li
536.938 114.061 536.819 113.82 536.819 113.521 cv
cp
528.599 113.521 mo
528.299 114.24 li
527.579 114.54 li
527.279 114.54 527.039 114.42 526.859 114.24 cv
526.679 114.061 526.559 113.82 526.559 113.521 cv
526.559 113.221 526.679 112.98 526.859 112.801 cv
527.039 112.62 527.279 112.5 527.579 112.5 cv
528.299 112.801 li
528.599 113.521 li
cp
537.119 116.94 mo
537.359 116.7 537.599 116.58 537.839 116.58 cv
538.139 116.58 538.379 116.7 538.559 116.94 cv
538.919 117.66 li
538.559 118.38 li
538.379 118.561 538.139 118.681 537.839 118.681 cv
537.119 118.38 li
536.938 118.141 536.819 117.9 536.819 117.66 cv
536.819 117.36 536.938 117.12 537.119 116.94 cv
cp
537.119 122.04 mo
537.359 121.86 537.599 121.74 537.839 121.74 cv
538.139 121.74 538.379 121.86 538.559 122.04 cv
538.919 122.761 li
538.559 123.48 li
538.379 123.66 538.139 123.78 537.839 123.78 cv
537.119 123.48 li
536.938 123.301 536.819 123.061 536.819 122.761 cv
536.819 122.46 536.938 122.221 537.119 122.04 cv
cp
523.139 112.801 mo
523.438 113.521 li
523.139 114.24 li
522.419 114.54 li
522.119 114.54 521.879 114.42 521.699 114.24 cv
521.519 114.061 521.398 113.82 521.398 113.521 cv
521.398 113.221 521.519 112.98 521.699 112.801 cv
521.879 112.62 522.119 112.5 522.419 112.5 cv
523.139 112.801 li
cp
518.339 113.521 mo
518.039 114.24 li
517.319 114.54 li
517.019 114.54 516.779 114.42 516.599 114.24 cv
516.359 114.061 516.239 113.82 516.239 113.521 cv
516.239 113.221 516.359 112.98 516.599 112.801 cv
516.779 112.62 517.019 112.5 517.319 112.5 cv
518.039 112.801 li
518.339 113.521 li
cp
521.099 130.261 mo
521.398 130.98 li
521.099 131.7 li
520.379 132.061 li
520.079 132.061 519.839 131.94 519.659 131.7 cv
519.479 131.521 519.359 131.28 519.359 130.98 cv
519.359 130.74 519.479 130.5 519.659 130.261 cv
519.839 130.08 520.079 129.96 520.379 129.96 cv
520.679 129.96 520.919 130.08 521.099 130.261 cv
cp
524.819 130.261 mo
524.999 130.08 525.239 129.96 525.539 129.96 cv
525.839 129.96 526.079 130.08 526.259 130.261 cv
526.559 130.98 li
526.259 131.7 li
526.079 131.94 525.839 132.061 525.539 132.061 cv
524.819 131.7 li
524.519 130.98 li
524.519 130.74 524.639 130.5 524.819 130.261 cv
cp
537.119 127.2 mo
537.359 127.021 537.599 126.9 537.839 126.9 cv
538.139 126.9 538.379 127.021 538.559 127.2 cv
538.919 127.92 li
538.559 128.641 li
538.379 128.82 538.139 128.94 537.839 128.94 cv
537.119 128.641 li
536.938 128.46 536.819 128.221 536.819 127.92 cv
536.819 127.62 536.938 127.38 537.119 127.2 cv
cp
531.359 130.261 mo
531.719 130.98 li
531.359 131.7 li
530.639 132.061 li
530.398 132.061 530.159 131.94 529.919 131.7 cv
529.739 131.521 529.619 131.28 529.619 130.98 cv
529.619 130.74 529.739 130.5 529.919 130.261 cv
530.159 130.08 530.398 129.96 530.639 129.96 cv
530.938 129.96 531.179 130.08 531.359 130.261 cv
cp
535.079 130.261 mo
535.259 130.08 535.499 129.96 535.799 129.96 cv
536.099 129.96 536.339 130.08 536.519 130.261 cv
536.819 130.98 li
536.519 131.7 li
535.799 132.061 li
535.079 131.7 li
534.898 131.521 534.779 131.28 534.779 130.98 cv
534.779 130.74 534.898 130.5 535.079 130.261 cv
cp
492.599 113.521 mo
492.299 114.24 li
491.579 114.54 li
491.279 114.54 491.039 114.42 490.859 114.24 cv
490.559 113.521 li
490.859 112.801 li
491.039 112.62 491.279 112.5 491.579 112.5 cv
492.299 112.801 li
492.599 113.521 li
cp
487.499 113.521 mo
487.139 114.24 li
486.419 114.54 li
486.179 114.54 485.938 114.42 485.699 114.24 cv
485.519 114.061 485.398 113.82 485.398 113.521 cv
485.398 113.221 485.519 112.98 485.699 112.801 cv
485.938 112.62 486.179 112.5 486.419 112.5 cv
487.139 112.801 li
487.499 113.521 li
cp
482.039 112.801 mo
482.339 113.521 li
482.039 114.24 li
481.319 114.54 li
481.019 114.54 480.779 114.42 480.599 114.24 cv
480.419 114.061 480.299 113.82 480.299 113.521 cv
480.299 113.221 480.419 112.98 480.599 112.801 cv
480.779 112.62 481.019 112.5 481.319 112.5 cv
482.039 112.801 li
cp
477.179 113.521 mo
476.879 114.24 li
474.604 115.655 474.604 111.386 476.879 112.801 cv
477.179 113.521 li
cp
477.179 118.681 mo
476.879 119.4 li
476.159 119.7 li
475.438 119.4 li
475.139 118.681 li
475.438 117.96 li
475.619 117.78 475.859 117.66 476.159 117.66 cv
476.459 117.66 476.699 117.78 476.879 117.96 cv
477.179 118.681 li
cp
477.179 128.94 mo
476.879 129.66 li
476.159 129.96 li
475.438 129.66 li
475.139 128.94 li
475.438 128.221 li
475.619 128.04 475.859 127.92 476.159 127.92 cv
476.459 127.92 476.699 128.04 476.879 128.221 cv
477.179 128.94 li
cp
476.159 124.86 mo
475.438 124.5 li
475.139 123.78 li
475.438 123.061 li
475.619 122.88 475.859 122.761 476.159 122.761 cv
476.459 122.761 476.699 122.88 476.879 123.061 cv
477.179 123.78 li
476.879 124.5 li
476.159 124.86 li
cp
478.499 130.261 mo
478.739 130.08 478.979 129.96 479.219 129.96 cv
479.519 129.96 479.759 130.08 479.938 130.261 cv
480.299 130.98 li
479.938 131.7 li
479.219 132.061 li
478.979 132.061 478.739 131.94 478.499 131.7 cv
478.319 131.521 478.199 131.28 478.199 130.98 cv
478.199 130.74 478.319 130.5 478.499 130.261 cv
cp
483.659 130.261 mo
483.839 130.08 484.079 129.96 484.379 129.96 cv
485.099 130.261 li
485.398 130.98 li
485.099 131.7 li
484.379 132.061 li
484.079 132.061 483.839 131.94 483.659 131.7 cv
483.479 131.521 483.359 131.28 483.359 130.98 cv
483.359 130.74 483.479 130.5 483.659 130.261 cv
cp
490.259 130.261 mo
490.559 130.98 li
490.259 131.7 li
490.079 131.94 489.839 132.061 489.539 132.061 cv
488.819 131.7 li
488.639 131.521 488.519 131.28 488.519 130.98 cv
488.519 130.74 488.639 130.5 488.819 130.261 cv
488.999 130.08 489.239 129.96 489.539 129.96 cv
489.839 129.96 490.079 130.08 490.259 130.261 cv
cp
493.979 130.261 mo
494.159 130.08 494.398 129.96 494.699 129.96 cv
494.938 129.96 495.179 130.08 495.419 130.261 cv
495.719 130.98 li
495.419 131.7 li
495.179 131.94 494.938 132.061 494.699 132.061 cv
493.979 131.7 li
493.739 131.521 493.619 131.28 493.619 130.98 cv
493.619 130.74 493.739 130.5 493.979 130.261 cv
cp
512.879 112.801 mo
513.179 113.521 li
512.879 114.24 li
512.159 114.54 li
511.859 114.54 511.619 114.42 511.438 114.24 cv
511.259 114.061 511.139 113.82 511.139 113.521 cv
511.139 113.221 511.259 112.98 511.438 112.801 cv
511.619 112.62 511.859 112.5 512.159 112.5 cv
512.879 112.801 li
cp
508.019 113.521 mo
507.719 114.24 li
507.539 114.42 507.299 114.54 506.999 114.54 cv
506.279 114.24 li
506.099 114.061 505.979 113.82 505.979 113.521 cv
505.979 113.221 506.099 112.98 506.279 112.801 cv
506.999 112.5 li
507.299 112.5 507.539 112.62 507.719 112.801 cv
508.019 113.521 li
cp
502.619 112.801 mo
502.919 113.521 li
502.619 114.24 li
501.898 114.54 li
501.179 114.24 li
500.938 114.061 500.819 113.82 500.819 113.521 cv
500.819 113.221 500.938 112.98 501.179 112.801 cv
501.898 112.5 li
502.619 112.801 li
cp
497.759 113.521 mo
497.459 114.24 li
496.739 114.54 li
496.019 114.24 li
495.839 114.061 495.719 113.82 495.719 113.521 cv
495.719 113.221 495.839 112.98 496.019 112.801 cv
496.739 112.5 li
497.459 112.801 li
497.759 113.521 li
cp
500.519 130.261 mo
500.819 130.98 li
500.519 131.7 li
499.799 132.061 li
499.499 132.061 499.259 131.94 499.079 131.7 cv
498.898 131.521 498.779 131.28 498.779 130.98 cv
498.779 130.74 498.898 130.5 499.079 130.261 cv
499.259 130.08 499.499 129.96 499.799 129.96 cv
500.099 129.96 500.339 130.08 500.519 130.261 cv
cp
504.239 130.261 mo
504.419 130.08 504.659 129.96 504.959 129.96 cv
505.259 129.96 505.499 130.08 505.679 130.261 cv
505.979 130.98 li
505.679 131.7 li
504.959 132.061 li
504.659 132.061 504.419 131.94 504.239 131.7 cv
504.059 131.521 503.938 131.28 503.938 130.98 cv
503.938 130.74 504.059 130.5 504.239 130.261 cv
cp
510.839 130.261 mo
511.139 130.98 li
510.839 131.7 li
510.119 132.061 li
509.398 131.7 li
509.159 131.521 509.039 131.28 509.039 130.98 cv
509.039 130.74 509.159 130.5 509.398 130.261 cv
509.579 130.08 509.819 129.96 510.119 129.96 cv
510.359 129.96 510.599 130.08 510.839 130.261 cv
cp
514.499 130.261 mo
514.679 130.08 514.919 129.96 515.219 129.96 cv
515.938 130.261 li
516.239 130.98 li
515.938 131.7 li
515.219 132.061 li
514.919 132.061 514.679 131.94 514.499 131.7 cv
514.319 131.521 514.199 131.28 514.199 130.98 cv
514.199 130.74 514.319 130.5 514.499 130.261 cv
0 0 0 1 cmyk
ef
349.5 88.2002 mo
349.5 88.6201 349.379 88.9199 349.08 89.1602 cv
348.839 89.4004 348.479 89.5205 348 89.5205 cv
347.519 89.5205 347.16 89.4004 346.86 89.1602 cv
346.559 88.9199 346.439 88.6201 346.439 88.2002 cv
346.439 87.7803 346.559 87.4805 346.86 87.2402 cv
347.16 86.9404 347.519 86.8203 348 86.8203 cv
348.479 86.8203 348.839 86.9404 349.08 87.2402 cv
349.379 87.4805 349.5 87.7803 349.5 88.2002 cv
cp
361.74 88.2002 mo
361.74 88.6201 361.62 88.9199 361.32 89.1602 cv
361.08 89.4004 360.719 89.5205 360.24 89.5205 cv
359.759 89.5205 359.399 89.4004 359.099 89.1602 cv
358.799 88.9199 358.679 88.6201 358.679 88.2002 cv
358.679 87.7803 358.799 87.4805 359.099 87.2402 cv
359.399 86.9404 359.759 86.8203 360.24 86.8203 cv
360.719 86.8203 361.08 86.9404 361.32 87.2402 cv
361.62 87.4805 361.74 87.7803 361.74 88.2002 cv
cp
374.04 88.2002 mo
374.04 88.6201 373.919 88.9199 373.62 89.1602 cv
373.379 89.4004 373.019 89.5205 372.54 89.5205 cv
372.059 89.5205 371.7 89.4004 371.399 89.1602 cv
371.099 88.9199 370.979 88.6201 370.979 88.2002 cv
370.979 87.7803 371.099 87.4805 371.399 87.2402 cv
371.7 86.9404 372.059 86.8203 372.54 86.8203 cv
373.019 86.8203 373.379 86.9404 373.62 87.2402 cv
373.919 87.4805 374.04 87.7803 374.04 88.2002 cv
f
334.438 491.881 mo
334.438 492.78 334.199 493.621 333.659 494.461 cv
333.179 495.301 332.459 495.961 331.499 496.44 cv
330.539 496.921 329.519 497.16 328.438 497.16 cv
327.419 497.16 326.398 496.921 325.438 496.44 cv
324.479 495.961 323.759 495.301 323.279 494.461 cv
322.739 493.681 322.499 492.78 322.499 491.881 cv
322.499 490.98 322.739 490.081 323.279 489.181 cv
323.819 488.28 324.539 487.621 325.438 487.081 cv
326.398 486.541 327.419 486.301 328.438 486.301 cv
329.459 486.301 330.479 486.541 331.499 487.081 cv
332.459 487.621 333.179 488.28 333.659 489.181 cv
334.199 490.081 334.438 490.98 334.438 491.881 cv
cp
332.099 491.881 mo
332.099 491.16 331.859 490.501 331.319 489.841 cv
330.599 489.001 329.639 488.581 328.438 488.581 cv
327.419 488.581 326.519 488.94 325.859 489.601 cv
325.139 490.261 324.779 491.041 324.779 491.94 cv
324.779 492.66 325.139 493.32 325.859 493.921 cv
326.579 494.581 327.419 494.881 328.438 494.881 cv
329.459 494.881 330.359 494.581 331.079 493.921 cv
331.739 493.32 332.099 492.66 332.099 491.881 cv
cp
339.359 495.541 mo
339.359 499.32 li
340.739 499.32 li
341.279 499.32 341.699 499.44 341.938 499.621 cv
342.179 499.801 342.299 500.101 342.299 500.461 cv
342.299 500.761 342.179 501.061 341.938 501.301 cv
341.699 501.48 341.279 501.601 340.739 501.601 cv
336.659 501.601 li
336.119 501.601 335.759 501.48 335.519 501.301 cv
335.279 501.061 335.159 500.761 335.159 500.461 cv
335.159 500.101 335.279 499.801 335.519 499.621 cv
335.759 499.44 336.119 499.32 336.659 499.32 cv
337.079 499.32 li
337.079 488.881 li
336.659 488.881 li
336.119 488.881 335.759 488.761 335.519 488.581 cv
335.279 488.4 335.159 488.101 335.159 487.74 cv
335.159 487.44 335.279 487.141 335.519 486.961 cv
335.759 486.721 336.119 486.601 336.659 486.601 cv
339.359 486.601 li
339.359 487.381 li
339.898 487.021 340.499 486.78 341.039 486.601 cv
341.639 486.421 342.239 486.301 342.839 486.301 cv
344.398 486.301 345.719 486.841 346.859 487.921 cv
347.938 488.94 348.479 490.2 348.479 491.581 cv
348.479 493.081 347.819 494.341 346.559 495.301 cv
345.419 496.141 344.219 496.561 342.839 496.561 cv
342.239 496.561 341.639 496.501 341.099 496.32 cv
340.559 496.141 339.959 495.841 339.359 495.541 cv
cp
346.199 491.581 mo
346.199 491.28 346.079 490.86 345.839 490.381 cv
345.539 489.841 345.179 489.421 344.639 489.121 cv
344.099 488.761 343.499 488.581 342.779 488.581 cv
341.639 488.581 340.739 489.001 340.079 489.9 cv
339.599 490.501 339.359 491.041 339.359 491.581 cv
339.359 492.24 339.719 492.841 340.379 493.381 cv
341.039 493.98 341.819 494.28 342.779 494.28 cv
343.799 494.28 344.579 493.98 345.239 493.381 cv
345.898 492.841 346.199 492.24 346.199 491.581 cv
cp
371.039 481.921 mo
371.039 494.521 li
373.319 494.521 li
373.859 494.521 374.279 494.641 374.519 494.82 cv
374.759 495.001 374.879 495.301 374.879 495.66 cv
374.879 495.961 374.759 496.261 374.519 496.501 cv
374.279 496.681 373.859 496.801 373.319 496.801 cv
366.359 496.801 li
365.819 496.801 365.459 496.681 365.219 496.501 cv
364.979 496.261 364.859 495.961 364.859 495.66 cv
364.859 495.301 364.979 495.001 365.219 494.82 cv
365.459 494.641 365.819 494.521 366.359 494.521 cv
368.699 494.521 li
368.699 484.921 li
366.659 485.461 li
366.359 485.521 366.119 485.581 365.938 485.581 cv
365.639 485.581 365.339 485.461 365.159 485.221 cv
364.979 484.98 364.859 484.681 364.859 484.381 cv
364.859 484.081 364.919 483.841 365.099 483.66 cv
365.219 483.48 365.519 483.301 366.059 483.181 cv
371.039 481.921 li
f
334.438 598.261 mo
334.438 599.16 334.199 600.001 333.659 600.841 cv
333.179 601.681 332.459 602.341 331.499 602.82 cv
330.539 603.301 329.519 603.541 328.438 603.541 cv
327.419 603.541 326.398 603.301 325.438 602.82 cv
324.479 602.341 323.759 601.681 323.279 600.841 cv
322.739 600.061 322.499 599.16 322.499 598.261 cv
322.499 597.36 322.739 596.461 323.279 595.561 cv
323.819 594.66 324.539 594.001 325.438 593.461 cv
326.398 592.921 327.419 592.681 328.438 592.681 cv
329.459 592.681 330.479 592.921 331.499 593.461 cv
332.459 594.001 333.179 594.66 333.659 595.561 cv
334.199 596.461 334.438 597.36 334.438 598.261 cv
cp
332.099 598.261 mo
332.099 597.541 331.859 596.881 331.319 596.221 cv
330.599 595.381 329.639 594.961 328.438 594.961 cv
327.419 594.961 326.519 595.32 325.859 595.98 cv
325.139 596.641 324.779 597.421 324.779 598.32 cv
324.779 599.041 325.139 599.7 325.859 600.301 cv
326.579 600.961 327.419 601.261 328.438 601.261 cv
329.459 601.261 330.359 600.961 331.079 600.301 cv
331.739 599.7 332.099 599.041 332.099 598.261 cv
cp
339.359 601.921 mo
339.359 605.7 li
340.739 605.7 li
341.279 605.7 341.699 605.82 341.938 606.001 cv
342.179 606.181 342.299 606.48 342.299 606.841 cv
342.299 607.141 342.179 607.44 341.938 607.681 cv
341.699 607.86 341.279 607.98 340.739 607.98 cv
336.659 607.98 li
336.119 607.98 335.759 607.86 335.519 607.681 cv
335.279 607.44 335.159 607.141 335.159 606.841 cv
335.159 606.48 335.279 606.181 335.519 606.001 cv
335.759 605.82 336.119 605.7 336.659 605.7 cv
337.079 605.7 li
337.079 595.261 li
336.659 595.261 li
336.119 595.261 335.759 595.141 335.519 594.961 cv
335.279 594.78 335.159 594.48 335.159 594.121 cv
335.159 593.82 335.279 593.521 335.519 593.341 cv
335.759 593.101 336.119 592.98 336.659 592.98 cv
339.359 592.98 li
339.359 593.761 li
339.898 593.4 340.499 593.16 341.039 592.98 cv
341.639 592.801 342.239 592.681 342.839 592.681 cv
344.398 592.681 345.719 593.221 346.859 594.301 cv
347.938 595.32 348.479 596.58 348.479 597.961 cv
348.479 599.461 347.819 600.721 346.559 601.681 cv
345.419 602.521 344.219 602.94 342.839 602.94 cv
342.239 602.94 341.639 602.881 341.099 602.7 cv
340.559 602.521 339.959 602.221 339.359 601.921 cv
cp
346.199 597.961 mo
346.199 597.66 346.079 597.24 345.839 596.761 cv
345.539 596.221 345.179 595.801 344.639 595.501 cv
344.099 595.141 343.499 594.961 342.779 594.961 cv
341.639 594.961 340.739 595.381 340.079 596.28 cv
339.599 596.881 339.359 597.421 339.359 597.961 cv
339.359 598.621 339.719 599.221 340.379 599.761 cv
341.039 600.36 341.819 600.66 342.779 600.66 cv
343.799 600.66 344.579 600.36 345.239 599.761 cv
345.898 599.221 346.199 598.621 346.199 597.961 cv
cp
367.499 592.98 mo
367.499 593.761 li
367.919 593.4 368.398 593.16 368.879 592.98 cv
369.419 592.801 369.959 592.681 370.559 592.681 cv
371.938 592.681 373.019 593.101 373.799 593.94 cv
374.398 594.601 374.699 595.501 374.699 596.58 cv
374.699 600.9 li
375.179 600.9 375.539 601.021 375.779 601.2 cv
376.019 601.381 376.139 601.681 376.139 602.041 cv
376.139 602.341 376.019 602.641 375.779 602.881 cv
375.539 603.061 375.119 603.181 374.579 603.181 cv
372.539 603.181 li
371.999 603.181 371.579 603.061 371.339 602.881 cv
371.099 602.641 370.979 602.341 370.979 602.041 cv
370.979 601.681 371.099 601.381 371.339 601.2 cv
371.579 601.021 371.938 600.9 372.419 600.9 cv
372.419 596.521 li
372.419 596.041 372.299 595.681 371.999 595.44 cv
371.639 595.141 371.099 594.961 370.438 594.961 cv
369.898 594.961 369.479 595.08 369.059 595.32 cv
368.639 595.501 368.099 595.921 367.499 596.58 cv
367.499 600.9 li
368.099 600.9 368.459 600.961 368.639 601.021 cv
368.999 601.261 369.179 601.621 369.179 602.041 cv
369.179 602.341 369.059 602.641 368.879 602.881 cv
368.639 603.061 368.219 603.181 367.679 603.181 cv
365.039 603.181 li
364.499 603.181 364.079 603.061 363.898 602.881 cv
363.659 602.641 363.539 602.341 363.539 602.041 cv
363.539 601.621 363.719 601.261 364.079 601.021 cv
364.259 600.961 364.619 600.9 365.219 600.9 cv
365.219 595.261 li
364.739 595.261 364.379 595.141 364.139 594.961 cv
363.898 594.78 363.779 594.48 363.779 594.121 cv
363.779 593.82 363.898 593.521 364.139 593.341 cv
364.379 593.101 364.799 592.98 365.339 592.98 cv
367.499 592.98 li
f
349.799 545.94 mo
349.799 546.36 349.679 546.66 349.379 546.9 cv
349.139 547.141 348.779 547.261 348.299 547.261 cv
347.819 547.261 347.459 547.141 347.159 546.9 cv
346.859 546.66 346.739 546.36 346.739 545.94 cv
346.739 545.521 346.859 545.221 347.159 544.98 cv
347.459 544.681 347.819 544.561 348.299 544.561 cv
348.779 544.561 349.139 544.681 349.379 544.98 cv
349.679 545.221 349.799 545.521 349.799 545.94 cv
cp
362.039 545.94 mo
362.039 546.36 361.919 546.66 361.619 546.9 cv
361.379 547.141 361.019 547.261 360.539 547.261 cv
360.059 547.261 359.699 547.141 359.398 546.9 cv
359.099 546.66 358.979 546.36 358.979 545.94 cv
358.979 545.521 359.099 545.221 359.398 544.98 cv
359.699 544.681 360.059 544.561 360.539 544.561 cv
361.019 544.561 361.379 544.681 361.619 544.98 cv
361.919 545.221 362.039 545.521 362.039 545.94 cv
cp
374.339 545.94 mo
374.339 546.36 374.219 546.66 373.919 546.9 cv
373.679 547.141 373.319 547.261 372.839 547.261 cv
372.359 547.261 371.999 547.141 371.699 546.9 cv
371.398 546.66 371.279 546.36 371.279 545.94 cv
371.279 545.521 371.398 545.221 371.699 544.98 cv
371.999 544.681 372.359 544.561 372.839 544.561 cv
373.319 544.561 373.679 544.681 373.919 544.98 cv
374.219 545.221 374.339 545.521 374.339 545.94 cv
f
PDCVEH+CourierNewPS-BoldMT*1 [26.82 0 0 -26.82 0 0 ]msf401.88 515.64 mo(hash-)sh482.353 515.64 mo(index)sh%ADOBeginSubsetFont: MyriadPro-SemiboldIt AddGlyphs
%ADOt1write: (1.0.24)systemdict beginPDCVEI+MyriadPro-SemiboldIt dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7B4A1438BFCE9BE9FDBD006B9B227C79D24A78A15F080F0B213D1D87E7A55B1B1C8DB47AD2188D916D98700851F36E1222D01918CA6EDE58E3C85107DDE3FCBB27C8E895DEFED8130DCA40D29E1B3CFE167D05BFCA3> |-systemdict /gcheck known {setglobal} if end {end} ifendPDCVEI+MyriadPro-SemiboldIt /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/PDCVEI+MyriadPro-SemiboldIt*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two 48{/.notdef}rp /c /.notdef /e 3{/.notdef}rp /i 8{/.notdef}rp /r /s 2{/.notdef}rp /v 137{/.notdef}rp]PDCVEI+MyriadPro-SemiboldIt nfPDCVEI+MyriadPro-SemiboldIt*1 [26.82 0 0 -26.82 0 0 ]msf401.52 551.399 mo(service 2)[10.6475 12.8467 9.30566 13.0342 6.67773 11.5332 12.8457 4.9082 0 ]xshPDCVEI+MyriadPro-SemiboldIt*1 [20.46 0 0 -20.46 0 0 ]msf548.04 586.38 mo(. . .)sh400.559 569.221 mo
400.559 586.681 li
462.239 586.681 li
462.239 569.221 li
400.559 569.221 li
cp
0 0 0 0 cmyk
f
458.159 569.221 mo
457.859 569.94 li
457.679 570.12 457.438 570.24 457.139 570.24 cv
456.419 569.94 li
456.239 569.761 456.119 569.521 456.119 569.221 cv
456.119 568.921 456.239 568.681 456.419 568.501 cv
457.139 568.2 li
457.438 568.2 457.679 568.32 457.859 568.501 cv
458.159 569.221 li
cp
461.219 569.221 mo
461.219 568.921 461.339 568.681 461.519 568.501 cv
462.239 568.2 li
462.539 568.2 462.779 568.32 462.959 568.501 cv
463.319 569.221 li
462.959 569.94 li
462.779 570.12 462.539 570.24 462.239 570.24 cv
461.519 569.94 li
461.339 569.761 461.219 569.521 461.219 569.221 cv
cp
452.999 569.221 mo
452.699 569.94 li
451.979 570.24 li
451.679 570.24 451.438 570.12 451.259 569.94 cv
451.079 569.761 450.959 569.521 450.959 569.221 cv
450.959 568.921 451.079 568.681 451.259 568.501 cv
451.438 568.32 451.679 568.2 451.979 568.2 cv
452.699 568.501 li
452.999 569.221 li
cp
461.519 572.641 mo
461.759 572.4 461.999 572.28 462.239 572.28 cv
462.539 572.28 462.779 572.4 462.959 572.641 cv
463.319 573.36 li
462.959 574.08 li
462.779 574.261 462.539 574.381 462.239 574.381 cv
461.519 574.08 li
461.339 573.841 461.219 573.601 461.219 573.36 cv
461.219 573.061 461.339 572.82 461.519 572.641 cv
cp
461.519 577.74 mo
461.759 577.561 461.999 577.44 462.239 577.44 cv
462.539 577.44 462.779 577.561 462.959 577.74 cv
463.319 578.461 li
462.959 579.181 li
462.779 579.36 462.539 579.48 462.239 579.48 cv
461.519 579.181 li
461.339 579.001 461.219 578.761 461.219 578.461 cv
461.219 578.16 461.339 577.921 461.519 577.74 cv
cp
447.539 568.501 mo
447.839 569.221 li
447.539 569.94 li
446.819 570.24 li
446.519 570.24 446.279 570.12 446.099 569.94 cv
445.919 569.761 445.799 569.521 445.799 569.221 cv
445.799 568.921 445.919 568.681 446.099 568.501 cv
446.279 568.32 446.519 568.2 446.819 568.2 cv
447.539 568.501 li
cp
442.739 569.221 mo
442.438 569.94 li
441.719 570.24 li
441.419 570.24 441.179 570.12 440.999 569.94 cv
440.759 569.761 440.639 569.521 440.639 569.221 cv
440.639 568.921 440.759 568.681 440.999 568.501 cv
441.179 568.32 441.419 568.2 441.719 568.2 cv
442.438 568.501 li
442.739 569.221 li
cp
445.499 585.961 mo
445.799 586.681 li
445.499 587.4 li
444.779 587.761 li
444.479 587.761 444.239 587.641 444.059 587.4 cv
443.879 587.221 443.759 586.98 443.759 586.681 cv
443.759 586.44 443.879 586.2 444.059 585.961 cv
444.239 585.78 444.479 585.66 444.779 585.66 cv
445.079 585.66 445.319 585.78 445.499 585.961 cv
cp
449.219 585.961 mo
449.398 585.78 449.639 585.66 449.938 585.66 cv
450.239 585.66 450.479 585.78 450.659 585.961 cv
450.959 586.681 li
450.659 587.4 li
450.479 587.641 450.239 587.761 449.938 587.761 cv
449.219 587.4 li
448.919 586.681 li
448.919 586.44 449.039 586.2 449.219 585.961 cv
cp
461.519 582.9 mo
461.759 582.721 461.999 582.601 462.239 582.601 cv
462.539 582.601 462.779 582.721 462.959 582.9 cv
463.319 583.62 li
462.959 584.341 li
462.779 584.521 462.539 584.641 462.239 584.641 cv
461.519 584.341 li
461.339 584.16 461.219 583.921 461.219 583.62 cv
461.219 583.32 461.339 583.08 461.519 582.9 cv
cp
455.759 585.961 mo
456.119 586.681 li
455.759 587.4 li
455.039 587.761 li
454.799 587.761 454.559 587.641 454.319 587.4 cv
454.139 587.221 454.019 586.98 454.019 586.681 cv
454.019 586.44 454.139 586.2 454.319 585.961 cv
454.559 585.78 454.799 585.66 455.039 585.66 cv
455.339 585.66 455.579 585.78 455.759 585.961 cv
cp
459.479 585.961 mo
459.659 585.78 459.898 585.66 460.199 585.66 cv
460.499 585.66 460.739 585.78 460.919 585.961 cv
461.219 586.681 li
460.919 587.4 li
460.199 587.761 li
459.479 587.4 li
459.299 587.221 459.179 586.98 459.179 586.681 cv
459.179 586.44 459.299 586.2 459.479 585.961 cv
cp
416.999 569.221 mo
416.699 569.94 li
415.979 570.24 li
415.679 570.24 415.438 570.12 415.259 569.94 cv
414.959 569.221 li
415.259 568.501 li
415.438 568.32 415.679 568.2 415.979 568.2 cv
416.699 568.501 li
416.999 569.221 li
cp
411.898 569.221 mo
411.539 569.94 li
410.819 570.24 li
410.579 570.24 410.339 570.12 410.099 569.94 cv
409.919 569.761 409.799 569.521 409.799 569.221 cv
409.799 568.921 409.919 568.681 410.099 568.501 cv
410.339 568.32 410.579 568.2 410.819 568.2 cv
411.539 568.501 li
411.898 569.221 li
cp
406.438 568.501 mo
406.739 569.221 li
406.438 569.94 li
405.719 570.24 li
405.419 570.24 405.179 570.12 404.999 569.94 cv
404.819 569.761 404.699 569.521 404.699 569.221 cv
404.699 568.921 404.819 568.681 404.999 568.501 cv
405.179 568.32 405.419 568.2 405.719 568.2 cv
406.438 568.501 li
cp
401.579 569.221 mo
401.279 569.94 li
399.005 571.355 399.005 567.086 401.279 568.501 cv
401.579 569.221 li
cp
401.579 574.381 mo
401.279 575.101 li
400.559 575.4 li
399.839 575.101 li
399.539 574.381 li
399.839 573.66 li
400.019 573.48 400.259 573.36 400.559 573.36 cv
400.859 573.36 401.099 573.48 401.279 573.66 cv
401.579 574.381 li
cp
401.579 584.641 mo
401.279 585.36 li
400.559 585.66 li
399.839 585.36 li
399.539 584.641 li
399.839 583.921 li
400.019 583.74 400.259 583.62 400.559 583.62 cv
400.859 583.62 401.099 583.74 401.279 583.921 cv
401.579 584.641 li
cp
400.559 580.561 mo
399.839 580.2 li
399.539 579.48 li
399.839 578.761 li
400.019 578.58 400.259 578.461 400.559 578.461 cv
400.859 578.461 401.099 578.58 401.279 578.761 cv
401.579 579.48 li
401.279 580.2 li
400.559 580.561 li
cp
402.898 585.961 mo
403.139 585.78 403.379 585.66 403.619 585.66 cv
403.919 585.66 404.159 585.78 404.339 585.961 cv
404.699 586.681 li
404.339 587.4 li
403.619 587.761 li
403.379 587.761 403.139 587.641 402.898 587.4 cv
402.719 587.221 402.599 586.98 402.599 586.681 cv
402.599 586.44 402.719 586.2 402.898 585.961 cv
cp
408.059 585.961 mo
408.239 585.78 408.479 585.66 408.779 585.66 cv
409.499 585.961 li
409.799 586.681 li
409.499 587.4 li
408.779 587.761 li
408.479 587.761 408.239 587.641 408.059 587.4 cv
407.879 587.221 407.759 586.98 407.759 586.681 cv
407.759 586.44 407.879 586.2 408.059 585.961 cv
cp
414.659 585.961 mo
414.959 586.681 li
414.659 587.4 li
414.479 587.641 414.239 587.761 413.938 587.761 cv
413.219 587.4 li
413.039 587.221 412.919 586.98 412.919 586.681 cv
412.919 586.44 413.039 586.2 413.219 585.961 cv
413.398 585.78 413.639 585.66 413.938 585.66 cv
414.239 585.66 414.479 585.78 414.659 585.961 cv
cp
418.379 585.961 mo
418.559 585.78 418.799 585.66 419.099 585.66 cv
419.339 585.66 419.579 585.78 419.819 585.961 cv
420.119 586.681 li
419.819 587.4 li
419.579 587.641 419.339 587.761 419.099 587.761 cv
418.379 587.4 li
418.139 587.221 418.019 586.98 418.019 586.681 cv
418.019 586.44 418.139 586.2 418.379 585.961 cv
cp
437.279 568.501 mo
437.579 569.221 li
437.279 569.94 li
436.559 570.24 li
436.259 570.24 436.019 570.12 435.839 569.94 cv
435.659 569.761 435.539 569.521 435.539 569.221 cv
435.539 568.921 435.659 568.681 435.839 568.501 cv
436.019 568.32 436.259 568.2 436.559 568.2 cv
437.279 568.501 li
cp
432.419 569.221 mo
432.119 569.94 li
431.938 570.12 431.699 570.24 431.398 570.24 cv
430.679 569.94 li
430.499 569.761 430.379 569.521 430.379 569.221 cv
430.379 568.921 430.499 568.681 430.679 568.501 cv
431.398 568.2 li
431.699 568.2 431.938 568.32 432.119 568.501 cv
432.419 569.221 li
cp
427.019 568.501 mo
427.319 569.221 li
427.019 569.94 li
426.299 570.24 li
425.579 569.94 li
425.339 569.761 425.219 569.521 425.219 569.221 cv
425.219 568.921 425.339 568.681 425.579 568.501 cv
426.299 568.2 li
427.019 568.501 li
cp
422.159 569.221 mo
421.859 569.94 li
421.139 570.24 li
420.419 569.94 li
420.239 569.761 420.119 569.521 420.119 569.221 cv
420.119 568.921 420.239 568.681 420.419 568.501 cv
421.139 568.2 li
421.859 568.501 li
422.159 569.221 li
cp
424.919 585.961 mo
425.219 586.681 li
424.919 587.4 li
424.199 587.761 li
423.898 587.761 423.659 587.641 423.479 587.4 cv
423.299 587.221 423.179 586.98 423.179 586.681 cv
423.179 586.44 423.299 586.2 423.479 585.961 cv
423.659 585.78 423.898 585.66 424.199 585.66 cv
424.499 585.66 424.739 585.78 424.919 585.961 cv
cp
428.639 585.961 mo
428.819 585.78 429.059 585.66 429.359 585.66 cv
429.659 585.66 429.898 585.78 430.079 585.961 cv
430.379 586.681 li
430.079 587.4 li
429.359 587.761 li
429.059 587.761 428.819 587.641 428.639 587.4 cv
428.459 587.221 428.339 586.98 428.339 586.681 cv
428.339 586.44 428.459 586.2 428.639 585.961 cv
cp
435.239 585.961 mo
435.539 586.681 li
435.239 587.4 li
434.519 587.761 li
433.799 587.4 li
433.559 587.221 433.438 586.98 433.438 586.681 cv
433.438 586.44 433.559 586.2 433.799 585.961 cv
433.979 585.78 434.219 585.66 434.519 585.66 cv
434.759 585.66 434.999 585.78 435.239 585.961 cv
cp
438.898 585.961 mo
439.079 585.78 439.319 585.66 439.619 585.66 cv
440.339 585.961 li
440.639 586.681 li
440.339 587.4 li
439.619 587.761 li
439.319 587.761 439.079 587.641 438.898 587.4 cv
438.719 587.221 438.599 586.98 438.599 586.681 cv
438.599 586.44 438.719 586.2 438.898 585.961 cv
0 0 0 1 cmyk
ef
474.599 569.221 mo
474.599 586.681 li
536.279 586.681 li
536.279 569.221 li
474.599 569.221 li
cp
0 0 0 0 cmyk
f
532.199 569.221 mo
531.898 569.94 li
531.719 570.12 531.479 570.24 531.179 570.24 cv
530.459 569.94 li
530.279 569.761 530.159 569.521 530.159 569.221 cv
530.159 568.921 530.279 568.681 530.459 568.501 cv
531.179 568.2 li
531.479 568.2 531.719 568.32 531.898 568.501 cv
532.199 569.221 li
cp
535.259 569.221 mo
535.259 568.921 535.379 568.681 535.559 568.501 cv
536.279 568.2 li
536.579 568.2 536.819 568.32 536.999 568.501 cv
537.359 569.221 li
536.999 569.94 li
536.819 570.12 536.579 570.24 536.279 570.24 cv
535.559 569.94 li
535.379 569.761 535.259 569.521 535.259 569.221 cv
cp
527.039 569.221 mo
526.739 569.94 li
526.019 570.24 li
525.719 570.24 525.479 570.12 525.299 569.94 cv
525.119 569.761 524.999 569.521 524.999 569.221 cv
524.999 568.921 525.119 568.681 525.299 568.501 cv
525.479 568.32 525.719 568.2 526.019 568.2 cv
526.739 568.501 li
527.039 569.221 li
cp
535.559 572.641 mo
535.799 572.4 536.039 572.28 536.279 572.28 cv
536.579 572.28 536.819 572.4 536.999 572.641 cv
537.359 573.36 li
536.999 574.08 li
536.819 574.261 536.579 574.381 536.279 574.381 cv
535.559 574.08 li
535.379 573.841 535.259 573.601 535.259 573.36 cv
535.259 573.061 535.379 572.82 535.559 572.641 cv
cp
535.559 577.74 mo
535.799 577.561 536.039 577.44 536.279 577.44 cv
536.579 577.44 536.819 577.561 536.999 577.74 cv
537.359 578.461 li
536.999 579.181 li
536.819 579.36 536.579 579.48 536.279 579.48 cv
535.559 579.181 li
535.379 579.001 535.259 578.761 535.259 578.461 cv
535.259 578.16 535.379 577.921 535.559 577.74 cv
cp
521.579 568.501 mo
521.879 569.221 li
521.579 569.94 li
520.859 570.24 li
520.559 570.24 520.319 570.12 520.139 569.94 cv
519.959 569.761 519.839 569.521 519.839 569.221 cv
519.839 568.921 519.959 568.681 520.139 568.501 cv
520.319 568.32 520.559 568.2 520.859 568.2 cv
521.579 568.501 li
cp
516.779 569.221 mo
516.479 569.94 li
515.759 570.24 li
515.459 570.24 515.219 570.12 515.039 569.94 cv
514.799 569.761 514.679 569.521 514.679 569.221 cv
514.679 568.921 514.799 568.681 515.039 568.501 cv
515.219 568.32 515.459 568.2 515.759 568.2 cv
516.479 568.501 li
516.779 569.221 li
cp
519.539 585.961 mo
519.839 586.681 li
519.539 587.4 li
518.819 587.761 li
518.519 587.761 518.279 587.641 518.099 587.4 cv
517.919 587.221 517.799 586.98 517.799 586.681 cv
517.799 586.44 517.919 586.2 518.099 585.961 cv
518.279 585.78 518.519 585.66 518.819 585.66 cv
519.119 585.66 519.359 585.78 519.539 585.961 cv
cp
523.259 585.961 mo
523.438 585.78 523.679 585.66 523.979 585.66 cv
524.279 585.66 524.519 585.78 524.699 585.961 cv
524.999 586.681 li
524.699 587.4 li
524.519 587.641 524.279 587.761 523.979 587.761 cv
523.259 587.4 li
522.959 586.681 li
522.959 586.44 523.079 586.2 523.259 585.961 cv
cp
535.559 582.9 mo
535.799 582.721 536.039 582.601 536.279 582.601 cv
536.579 582.601 536.819 582.721 536.999 582.9 cv
537.359 583.62 li
536.999 584.341 li
536.819 584.521 536.579 584.641 536.279 584.641 cv
535.559 584.341 li
535.379 584.16 535.259 583.921 535.259 583.62 cv
535.259 583.32 535.379 583.08 535.559 582.9 cv
cp
529.799 585.961 mo
530.159 586.681 li
529.799 587.4 li
529.079 587.761 li
528.839 587.761 528.599 587.641 528.359 587.4 cv
528.179 587.221 528.059 586.98 528.059 586.681 cv
528.059 586.44 528.179 586.2 528.359 585.961 cv
528.599 585.78 528.839 585.66 529.079 585.66 cv
529.379 585.66 529.619 585.78 529.799 585.961 cv
cp
533.519 585.961 mo
533.699 585.78 533.938 585.66 534.239 585.66 cv
534.539 585.66 534.779 585.78 534.959 585.961 cv
535.259 586.681 li
534.959 587.4 li
534.239 587.761 li
533.519 587.4 li
533.339 587.221 533.219 586.98 533.219 586.681 cv
533.219 586.44 533.339 586.2 533.519 585.961 cv
cp
491.039 569.221 mo
490.739 569.94 li
490.019 570.24 li
489.719 570.24 489.479 570.12 489.299 569.94 cv
488.999 569.221 li
489.299 568.501 li
489.479 568.32 489.719 568.2 490.019 568.2 cv
490.739 568.501 li
491.039 569.221 li
cp
485.938 569.221 mo
485.579 569.94 li
484.859 570.24 li
484.619 570.24 484.379 570.12 484.139 569.94 cv
483.959 569.761 483.839 569.521 483.839 569.221 cv
483.839 568.921 483.959 568.681 484.139 568.501 cv
484.379 568.32 484.619 568.2 484.859 568.2 cv
485.579 568.501 li
485.938 569.221 li
cp
480.479 568.501 mo
480.779 569.221 li
480.479 569.94 li
479.759 570.24 li
479.459 570.24 479.219 570.12 479.039 569.94 cv
478.859 569.761 478.739 569.521 478.739 569.221 cv
478.739 568.921 478.859 568.681 479.039 568.501 cv
479.219 568.32 479.459 568.2 479.759 568.2 cv
480.479 568.501 li
cp
475.619 569.221 mo
475.319 569.94 li
473.045 571.355 473.045 567.086 475.319 568.501 cv
475.619 569.221 li
cp
475.619 574.381 mo
475.319 575.101 li
474.599 575.4 li
473.879 575.101 li
473.579 574.381 li
473.879 573.66 li
474.059 573.48 474.299 573.36 474.599 573.36 cv
474.898 573.36 475.139 573.48 475.319 573.66 cv
475.619 574.381 li
cp
475.619 584.641 mo
475.319 585.36 li
474.599 585.66 li
473.879 585.36 li
473.579 584.641 li
473.879 583.921 li
474.059 583.74 474.299 583.62 474.599 583.62 cv
474.898 583.62 475.139 583.74 475.319 583.921 cv
475.619 584.641 li
cp
474.599 580.561 mo
473.879 580.2 li
473.579 579.48 li
473.879 578.761 li
474.059 578.58 474.299 578.461 474.599 578.461 cv
474.898 578.461 475.139 578.58 475.319 578.761 cv
475.619 579.48 li
475.319 580.2 li
474.599 580.561 li
cp
476.938 585.961 mo
477.179 585.78 477.419 585.66 477.659 585.66 cv
477.959 585.66 478.199 585.78 478.379 585.961 cv
478.739 586.681 li
478.379 587.4 li
477.659 587.761 li
477.419 587.761 477.179 587.641 476.938 587.4 cv
476.759 587.221 476.639 586.98 476.639 586.681 cv
476.639 586.44 476.759 586.2 476.938 585.961 cv
cp
482.099 585.961 mo
482.279 585.78 482.519 585.66 482.819 585.66 cv
483.539 585.961 li
483.839 586.681 li
483.539 587.4 li
482.819 587.761 li
482.519 587.761 482.279 587.641 482.099 587.4 cv
481.919 587.221 481.799 586.98 481.799 586.681 cv
481.799 586.44 481.919 586.2 482.099 585.961 cv
cp
488.699 585.961 mo
488.999 586.681 li
488.699 587.4 li
488.519 587.641 488.279 587.761 487.979 587.761 cv
487.259 587.4 li
487.079 587.221 486.959 586.98 486.959 586.681 cv
486.959 586.44 487.079 586.2 487.259 585.961 cv
487.438 585.78 487.679 585.66 487.979 585.66 cv
488.279 585.66 488.519 585.78 488.699 585.961 cv
cp
492.419 585.961 mo
492.599 585.78 492.839 585.66 493.139 585.66 cv
493.379 585.66 493.619 585.78 493.859 585.961 cv
494.159 586.681 li
493.859 587.4 li
493.619 587.641 493.379 587.761 493.139 587.761 cv
492.419 587.4 li
492.179 587.221 492.059 586.98 492.059 586.681 cv
492.059 586.44 492.179 586.2 492.419 585.961 cv
cp
511.319 568.501 mo
511.619 569.221 li
511.319 569.94 li
510.599 570.24 li
510.299 570.24 510.059 570.12 509.879 569.94 cv
509.699 569.761 509.579 569.521 509.579 569.221 cv
509.579 568.921 509.699 568.681 509.879 568.501 cv
510.059 568.32 510.299 568.2 510.599 568.2 cv
511.319 568.501 li
cp
506.459 569.221 mo
506.159 569.94 li
505.979 570.12 505.739 570.24 505.438 570.24 cv
504.719 569.94 li
504.539 569.761 504.419 569.521 504.419 569.221 cv
504.419 568.921 504.539 568.681 504.719 568.501 cv
505.438 568.2 li
505.739 568.2 505.979 568.32 506.159 568.501 cv
506.459 569.221 li
cp
501.059 568.501 mo
501.359 569.221 li
501.059 569.94 li
500.339 570.24 li
499.619 569.94 li
499.379 569.761 499.259 569.521 499.259 569.221 cv
499.259 568.921 499.379 568.681 499.619 568.501 cv
500.339 568.2 li
501.059 568.501 li
cp
496.199 569.221 mo
495.898 569.94 li
495.179 570.24 li
494.459 569.94 li
494.279 569.761 494.159 569.521 494.159 569.221 cv
494.159 568.921 494.279 568.681 494.459 568.501 cv
495.179 568.2 li
495.898 568.501 li
496.199 569.221 li
cp
498.959 585.961 mo
499.259 586.681 li
498.959 587.4 li
498.239 587.761 li
497.938 587.761 497.699 587.641 497.519 587.4 cv
497.339 587.221 497.219 586.98 497.219 586.681 cv
497.219 586.44 497.339 586.2 497.519 585.961 cv
497.699 585.78 497.938 585.66 498.239 585.66 cv
498.539 585.66 498.779 585.78 498.959 585.961 cv
cp
502.679 585.961 mo
502.859 585.78 503.099 585.66 503.398 585.66 cv
503.699 585.66 503.938 585.78 504.119 585.961 cv
504.419 586.681 li
504.119 587.4 li
503.398 587.761 li
503.099 587.761 502.859 587.641 502.679 587.4 cv
502.499 587.221 502.379 586.98 502.379 586.681 cv
502.379 586.44 502.499 586.2 502.679 585.961 cv
cp
509.279 585.961 mo
509.579 586.681 li
509.279 587.4 li
508.559 587.761 li
507.839 587.4 li
507.599 587.221 507.479 586.98 507.479 586.681 cv
507.479 586.44 507.599 586.2 507.839 585.961 cv
508.019 585.78 508.259 585.66 508.559 585.66 cv
508.799 585.66 509.039 585.78 509.279 585.961 cv
cp
512.938 585.961 mo
513.119 585.78 513.359 585.66 513.659 585.66 cv
514.379 585.961 li
514.679 586.681 li
514.379 587.4 li
513.659 587.761 li
513.359 587.761 513.119 587.641 512.938 587.4 cv
512.759 587.221 512.639 586.98 512.639 586.681 cv
512.639 586.44 512.759 586.2 512.938 585.961 cv
0 0 0 1 cmyk
ef
486.719 214.08 mo
486.719 157.62 li
484.679 157.62 li
484.679 215.101 li
486.719 215.101 li
486.719 214.08 li
cp
503.699 149.521 mo
503.699 204.48 li
505.739 204.48 li
505.739 148.5 li
503.699 148.5 li
503.699 149.521 li
cp
487.019 482.041 mo
487.019 425.581 li
484.979 425.581 li
484.979 483.061 li
487.019 483.061 li
487.019 482.041 li
cp
503.938 417.421 mo
503.938 472.44 li
505.979 472.44 li
505.979 416.4 li
503.938 416.4 li
503.938 417.421 li
f
%ADOBeginSubsetFont: MyriadPro-SemiboldIt AddGlyphs
%ADOt1write: (1.0.24)systemdict beginPDCVEI+MyriadPro-SemiboldIt dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/L <1C60D8A8C9B7489B4667BCF82A2904CA71F238181555A86EB8BE1988B6E6FE5E90CDE83478424554> |-/a <1C60D8A8C9B79FB095E01E33B6C87612C5650CDB94EB7675A75B17DD8116D665B330A4E5B3DE0F6FF5B4A7E13758A42C80F2DA1F438CB636737DE3BD7EAE119678D921A725AE2CB0BB5493142B99714DE2E5D7771AEC6BEF9CD906CB396C8B1215FB0029E97DFAC709805F5A0466362071701C7AA8DC35659F816D3D239E0786013E90C46F724C66CF4B87515A5FA2D470A1F549D30A5409834E5396A8D001> |-/d <1C60D8A8C9B79B8EE1808016CBDBBAFE4B0611D4928478E35B48AC99EB720F2EB477C5FD5184BF441FC3DD6843549580BA50DDFA8ED873E38A7E8B122B599AC0F2DA5467032CE20D49178B7CD673558D921E7D57010027AD692D458574F1DED6E1BA5E66E998DC6DF929165BCB26FC008EA834CDC58F6C69974F66E85C3FAC7B6E79B4B0D3202D40A3899749B91ABA36D3AC75B4F68E755EFF127CFE747597> |-/l <1C60D8A8C9B873D016FD6E8579D1B47AB0F2AC1CF5AE593BC316CD7210BC5F45DD06E78B9C> |-/m <1C60D8A8C9B6A869863BE190D2C48598E8396B17CD0C58F8BFD61C1280FCE43831D364BB5F227E4790A3D8035B14F86A3C650E1A3835196AC3177D89AF419630B485EBBF1465021FD0B1DBEC722179ED5A27C75A9C6B8D697A40047E0355A8CA0D4F5BDE35A9346A8505601F14C9229167E1475C22249422F6F08F4024C8A3010BB65F5492644291CA4E76D60A25C0642284F3DB443F81A0AB71D9C297ED973C2C0CFECFBA0A9A50255AD3FBE71998F466D5> |-/o <1C60D8A8C9B79C5F9636F3491F3835E293A23CED4F3586DBBE245A483E25BB073BD3B8ABABF8EF256FC873D77F2CC53A01EB8D747EA58CBF8392A5C20E3C15F4203E33EBB9F7E3587C5EA18D25B8CD6BBF5EA746CD893EAA> |-/t <1C60D8A8C9B81F2C6DADD030E7EAA14C5C415B08FA6BCBA7D7223FCEF0C8A9D354B4350C78E420EBB416F16802EFFF63437000D6900E246ACCBBAA293A289F67DFC24CBD6E2F3555B7B929D27744BF0A96B59FF635ADA3720DE9ECA45B9D5D8ABB4AC5DA6F276D59C198D84AC08B82> |-systemdict /gcheck known {setglobal} if end {end} ifendPDCVEI+MyriadPro-SemiboldIt /Encoding getdup 76 /L putdup 97 /a putdup 100 /d putdup 108 /l putdup 109 /m putdup 111 /o putdup 116 /t putpop%ADOEndSubsetFont
/PDCVEI+MyriadPro-SemiboldIt*1 [32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one /two 25{/.notdef}rp /L 20{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /.notdef /o 2{/.notdef}rp /r /s /t /.notdef /v 137{/.notdef}rp]PDCVEI+MyriadPro-SemiboldIt nfPDCVEI+MyriadPro-SemiboldIt*1 [28.08 0 0 -28.08 0 0 ]msf0 758.1 mo(Local data items)[13.1133 15.2471 12.0742 15.1631 6.99219 5.13867 15.2744 15.1631 9.35059 15.1631 5.13867 6.99219 9.34961 13.4502 23.0537 0 ]xsh491.579 158.58 mo
479.879 158.761 li
485.699 148.561 li
491.579 158.58 li
cp
510.539 203.521 mo
498.898 203.4 li
504.719 213.54 li
510.539 203.521 li
cp
491.759 427.261 mo
480.119 427.44 li
485.938 417.24 li
491.759 427.261 li
cp
499.079 472.081 mo
504.898 482.221 li
510.779 472.2 li
499.079 472.081 li
ef
320.879 386.101 mo
275.639 386.101 li
@
321.299 244.141 mo
276.059 244.141 li
@
539.759 32.5801 mo
552.419 32.5801 563.159 35.1602 572.099 40.2607 cv
580.739 45.1807 585.059 51.1201 585.119 58.1406 cv
585.119 120.48 li
585.059 127.44 580.739 133.38 572.099 138.36 cv
563.159 143.46 552.419 145.98 539.759 145.98 cv
430.619 145.98 li
417.959 145.98 407.219 143.46 398.28 138.36 cv
389.639 133.38 385.259 127.44 385.2 120.48 cv
385.2 58.1406 li
385.259 51.1201 389.639 45.1807 398.28 40.2607 cv
407.219 35.1602 417.959 32.5801 430.619 32.5801 cv
539.759 32.5801 li
cp
573.059 38.46 mo
563.879 33.1807 552.779 30.54 539.759 30.54 cv
430.619 30.54 li
417.599 30.54 406.5 33.1807 397.32 38.46 cv
387.839 43.8604 383.099 50.4004 383.16 58.1406 cv
383.16 120.48 li
383.099 128.16 387.839 134.7 397.32 140.16 cv
406.5 145.38 417.599 148.021 430.619 148.021 cv
539.759 148.021 li
552.779 148.021 563.879 145.38 573.059 140.16 cv
582.479 134.7 587.219 128.16 587.159 120.48 cv
587.159 58.1406 li
587.219 50.4004 582.479 43.8604 573.059 38.46 cv
cp
539.759 30.54 mo
539.759 30.54 li
cp
430.619 32.5801 mo
430.619 32.5801 li
cp
430.619 30.54 mo
430.619 30.54 li
cp
398.28 40.2607 mo
398.28 40.2607 li
cp
397.32 38.46 mo
397.32 38.46 li
cp
385.2 58.1406 mo
385.2 58.1406 li
cp
383.16 58.1406 mo
383.16 58.1406 li
cp
385.2 120.48 mo
385.2 120.48 li
cp
383.16 120.48 mo
383.16 120.48 li
cp
398.28 138.36 mo
398.28 138.36 li
cp
397.32 140.16 mo
397.32 140.16 li
cp
430.619 145.98 mo
430.619 145.98 li
cp
430.619 148.021 mo
430.619 148.021 li
cp
539.759 145.98 mo
539.759 145.98 li
cp
539.759 148.021 mo
539.759 148.021 li
cp
572.099 138.36 mo
572.099 138.36 li
cp
573.059 140.16 mo
573.059 140.16 li
cp
585.119 120.48 mo
585.119 120.48 li
cp
587.159 120.48 mo
587.159 120.48 li
cp
585.119 58.1406 mo
585.119 58.1406 li
cp
587.159 58.1406 mo
587.159 58.1406 li
cp
572.099 40.2607 mo
572.099 40.2607 li
cp
585.119 510.601 mo
585.119 573.001 li
585.059 579.961 580.739 585.9 572.099 590.881 cv
563.159 595.921 552.419 598.44 539.759 598.44 cv
430.619 598.44 li
417.959 598.44 407.219 595.921 398.279 590.881 cv
389.639 585.9 385.259 579.961 385.199 573.001 cv
385.199 510.601 li
385.259 503.641 389.639 497.7 398.279 492.78 cv
407.219 487.681 417.959 485.101 430.619 485.101 cv
539.759 485.101 li
552.419 485.101 563.159 487.681 572.099 492.78 cv
580.739 497.7 585.059 503.641 585.119 510.601 cv
cp
587.159 573.001 mo
587.159 510.601 li
587.219 502.921 582.539 496.381 573.059 490.98 cv
563.879 485.7 552.779 483.061 539.759 483.061 cv
430.619 483.061 li
417.599 483.061 406.499 485.7 397.319 490.98 cv
387.839 496.381 383.099 502.921 383.159 510.601 cv
383.159 573.001 li
383.099 580.681 387.839 587.221 397.319 592.681 cv
406.499 597.9 417.599 600.48 430.619 600.48 cv
539.759 600.48 li
552.779 600.48 563.879 597.9 573.059 592.681 cv
582.479 587.221 587.219 580.681 587.159 573.001 cv
cp
587.159 510.601 mo
587.159 510.601 li
cp
572.099 492.78 mo
572.099 492.78 li
cp
573.059 490.98 mo
573.059 490.98 li
cp
539.759 485.101 mo
539.759 485.101 li
cp
539.759 483.061 mo
539.759 483.061 li
cp
430.619 485.101 mo
430.619 485.101 li
cp
430.619 483.061 mo
430.619 483.061 li
cp
398.279 492.78 mo
398.279 492.78 li
cp
397.319 490.98 mo
397.319 490.98 li
cp
385.199 510.601 mo
385.199 510.601 li
cp
383.159 510.601 mo
383.159 510.601 li
cp
385.199 573.001 mo
385.199 573.001 li
cp
383.159 573.001 mo
383.159 573.001 li
cp
398.279 590.881 mo
398.279 590.881 li
cp
397.319 592.681 mo
397.319 592.681 li
cp
430.619 598.44 mo
430.619 598.44 li
cp
430.619 600.48 mo
430.619 600.48 li
cp
539.759 598.44 mo
539.759 598.44 li
cp
539.759 600.48 mo
539.759 600.48 li
cp
572.099 590.881 mo
572.099 590.881 li
cp
573.059 592.681 mo
573.059 592.681 li
cp
585.119 573.001 mo
585.119 573.001 li
cp
388.679 755.881 mo
388.679 727.141 li
388.859 724.2 392.699 721.681 400.199 719.521 cv
408.299 717.181 417.959 715.98 429.299 715.98 cv
527.099 715.98 li
538.438 715.98 548.159 717.181 556.199 719.521 cv
563.699 721.681 567.479 724.2 567.659 727.141 cv
567.659 755.881 li
567.539 758.82 563.699 761.341 556.199 763.561 cv
548.159 765.9 538.438 767.041 527.099 767.041 cv
429.299 767.041 li
417.959 767.041 408.299 765.9 400.199 763.561 cv
392.699 761.341 388.859 758.82 388.679 755.881 cv
cp
386.639 727.141 mo
386.639 755.881 li
386.459 759.66 390.779 762.9 399.599 765.48 cv
407.819 767.881 417.719 769.08 429.299 769.08 cv
527.099 769.08 li
538.679 769.08 548.579 767.881 556.799 765.48 cv
565.499 762.9 569.819 759.66 569.699 755.881 cv
569.699 727.141 li
569.879 723.36 565.559 720.181 556.799 717.601 cv
548.579 715.141 538.679 713.94 527.099 713.94 cv
429.299 713.94 li
417.719 713.94 407.819 715.141 399.599 717.601 cv
390.779 720.181 386.459 723.36 386.639 727.141 cv
cp
386.639 755.881 mo
386.639 755.881 li
cp
400.199 763.561 mo
400.199 763.561 li
cp
399.599 765.48 mo
399.599 765.48 li
cp
429.299 767.041 mo
429.299 767.041 li
cp
429.299 769.08 mo
429.299 769.08 li
cp
527.099 767.041 mo
527.099 767.041 li
cp
527.099 769.08 mo
527.099 769.08 li
cp
556.199 763.561 mo
556.199 763.561 li
cp
556.799 765.48 mo
556.799 765.48 li
cp
567.659 755.881 mo
567.659 755.881 li
cp
569.699 755.881 mo
569.699 755.881 li
cp
567.659 727.141 mo
567.659 727.141 li
cp
569.699 727.141 mo
569.699 727.141 li
cp
556.199 719.521 mo
556.199 719.521 li
cp
556.799 717.601 mo
556.799 717.601 li
cp
527.099 715.98 mo
527.099 715.98 li
cp
527.099 713.94 mo
527.099 713.94 li
cp
429.299 715.98 mo
429.299 715.98 li
cp
429.299 713.94 mo
429.299 713.94 li
cp
400.199 719.521 mo
400.199 719.521 li
cp
399.599 717.601 mo
399.599 717.601 li
cp
388.679 727.141 mo
388.679 727.141 li
f
825.119 312.78 mo
825.119 306.841 li
842.639 312.66 li
825.119 318.48 li
825.119 312.78 li
ef
825.119 312.78 mo
635.639 312.78 li
@
336.179 529.98 mo
338.579 529.98 340.619 529.141 342.359 527.4 cv
344.099 525.66 344.938 523.62 344.938 521.221 cv
344.938 518.82 344.099 516.78 342.359 515.041 cv
340.619 513.301 338.579 512.461 336.179 512.461 cv
333.779 512.461 331.739 513.301 329.999 515.041 cv
328.259 516.78 327.419 518.82 327.419 521.221 cv
327.419 523.62 328.259 525.66 329.999 527.4 cv
331.739 529.141 333.779 529.98 336.179 529.98 cv
@
330.299 565.381 mo
328.619 567.121 327.779 569.16 327.779 571.561 cv
327.779 573.961 328.619 576.001 330.299 577.74 cv
332.039 579.48 334.079 580.32 336.479 580.32 cv
338.879 580.32 340.919 579.48 342.659 577.74 cv
344.398 576.001 345.239 573.961 345.239 571.561 cv
345.239 569.16 344.398 567.121 342.659 565.381 cv
340.919 563.641 338.879 562.801 336.479 562.801 cv
334.079 562.801 332.039 563.641 330.299 565.381 cv
@
382.199 520.2 mo
345.599 520.2 li
@
382.438 570.541 mo
345.779 570.541 li
@
774.539 339.96 mo
774.539 340.86 774.299 341.7 773.759 342.54 cv
773.279 343.38 772.559 344.04 771.599 344.521 cv
770.639 345 769.619 345.24 768.539 345.24 cv
767.52 345.24 766.499 345 765.539 344.521 cv
764.579 344.04 763.859 343.38 763.379 342.54 cv
762.839 341.761 762.599 340.86 762.599 339.96 cv
762.599 339.061 762.839 338.16 763.379 337.261 cv
763.919 336.36 764.639 335.7 765.539 335.16 cv
766.499 334.62 767.52 334.38 768.539 334.38 cv
769.559 334.38 770.579 334.62 771.599 335.16 cv
772.559 335.7 773.279 336.36 773.759 337.261 cv
774.299 338.16 774.539 339.061 774.539 339.96 cv
cp
772.199 339.96 mo
772.199 339.24 771.959 338.58 771.419 337.92 cv
770.699 337.08 769.739 336.66 768.539 336.66 cv
767.52 336.66 766.619 337.021 765.959 337.681 cv
765.239 338.341 764.879 339.12 764.879 340.021 cv
764.879 340.74 765.239 341.4 765.959 342 cv
766.679 342.66 767.52 342.96 768.539 342.96 cv
769.559 342.96 770.459 342.66 771.179 342 cv
771.839 341.4 772.199 340.74 772.199 339.96 cv
cp
787.199 334.681 mo
787.199 342.601 li
787.739 342.601 788.099 342.721 788.279 342.9 cv
788.52 343.08 788.639 343.38 788.639 343.74 cv
788.639 344.04 788.52 344.341 788.279 344.58 cv
788.039 344.761 787.679 344.88 787.139 344.88 cv
784.919 344.88 li
784.919 344.341 li
784.259 344.641 783.659 344.88 783.059 345 cv
782.459 345.181 781.859 345.24 781.319 345.24 cv
780.539 345.24 779.879 345.061 779.339 344.761 cv
778.799 344.46 778.379 343.98 778.079 343.44 cv
777.839 343.021 777.719 342.54 777.719 341.94 cv
777.719 336.96 li
777.299 336.96 li
776.759 336.96 776.339 336.841 776.159 336.66 cv
775.919 336.48 775.799 336.181 775.799 335.82 cv
775.799 335.521 775.919 335.221 776.159 335.04 cv
776.339 334.801 776.759 334.681 777.299 334.681 cv
779.999 334.681 li
779.999 341.521 li
779.999 342 780.119 342.36 780.359 342.601 cv
780.599 342.841 780.959 342.96 781.439 342.96 cv
781.919 342.96 782.399 342.841 782.939 342.66 cv
783.479 342.48 784.139 342.181 784.919 341.7 cv
784.919 336.96 li
784.079 336.96 li
783.539 336.96 783.119 336.841 782.939 336.66 cv
782.699 336.48 782.579 336.181 782.579 335.82 cv
782.579 335.521 782.699 335.221 782.939 335.04 cv
783.119 334.801 783.539 334.681 784.079 334.681 cv
787.199 334.681 li
cp
795.599 336.96 mo
795.599 341.58 li
795.599 342.12 795.719 342.42 795.899 342.601 cv
796.199 342.841 796.739 342.96 797.579 342.96 cv
798.719 342.96 799.799 342.721 800.819 342.181 cv
801.179 342 801.479 341.88 801.719 341.88 cv
802.02 341.88 802.259 342 802.499 342.24 cv
802.679 342.48 802.799 342.78 802.799 343.08 cv
802.799 343.38 802.679 343.62 802.439 343.86 cv
802.079 344.16 801.359 344.521 800.279 344.82 cv
799.199 345.12 798.299 345.24 797.579 345.24 cv
796.139 345.24 795.059 344.94 794.339 344.341 cv
793.619 343.681 793.259 342.96 793.259 342.061 cv
793.259 336.96 li
792.419 336.96 li
791.879 336.96 791.459 336.841 791.279 336.66 cv
791.039 336.48 790.919 336.181 790.919 335.82 cv
790.919 335.521 791.039 335.221 791.279 335.04 cv
791.459 334.801 791.879 334.681 792.419 334.681 cv
793.259 334.681 li
793.259 332.641 li
793.259 332.101 793.379 331.681 793.619 331.44 cv
793.799 331.2 794.099 331.08 794.399 331.08 cv
794.759 331.08 795.059 331.2 795.239 331.44 cv
795.479 331.681 795.599 332.101 795.599 332.641 cv
795.599 334.681 li
799.799 334.681 li
800.339 334.681 800.759 334.801 800.999 335.04 cv
801.239 335.221 801.359 335.521 801.359 335.82 cv
801.359 336.181 801.239 336.48 800.999 336.66 cv
800.759 336.841 800.339 336.96 799.799 336.96 cv
795.599 336.96 li
cp
807.059 343.62 mo
807.059 347.4 li
808.439 347.4 li
808.979 347.4 809.399 347.521 809.639 347.7 cv
809.879 347.88 809.999 348.181 809.999 348.54 cv
809.999 348.841 809.879 349.141 809.639 349.38 cv
809.399 349.561 808.979 349.681 808.439 349.681 cv
804.359 349.681 li
803.819 349.681 803.459 349.561 803.219 349.38 cv
802.979 349.141 802.859 348.841 802.859 348.54 cv
802.859 348.181 802.979 347.88 803.219 347.7 cv
803.459 347.521 803.819 347.4 804.359 347.4 cv
804.779 347.4 li
804.779 336.96 li
804.359 336.96 li
803.819 336.96 803.459 336.841 803.219 336.66 cv
802.979 336.48 802.859 336.181 802.859 335.82 cv
802.859 335.521 802.979 335.221 803.219 335.04 cv
803.459 334.801 803.819 334.681 804.359 334.681 cv
807.059 334.681 li
807.059 335.46 li
807.599 335.101 808.199 334.86 808.739 334.681 cv
809.339 334.5 809.939 334.38 810.539 334.38 cv
812.099 334.38 813.419 334.92 814.559 336 cv
815.639 337.021 816.179 338.28 816.179 339.66 cv
816.179 341.16 815.52 342.42 814.259 343.38 cv
813.119 344.221 811.919 344.641 810.539 344.641 cv
809.939 344.641 809.339 344.58 808.799 344.4 cv
808.259 344.221 807.659 343.92 807.059 343.62 cv
cp
813.899 339.66 mo
813.899 339.36 813.779 338.94 813.539 338.46 cv
813.239 337.92 812.879 337.5 812.339 337.2 cv
811.799 336.841 811.199 336.66 810.479 336.66 cv
809.339 336.66 808.439 337.08 807.779 337.98 cv
807.299 338.58 807.059 339.12 807.059 339.66 cv
807.059 340.32 807.419 340.92 808.079 341.46 cv
808.739 342.061 809.52 342.36 810.479 342.36 cv
811.499 342.36 812.279 342.061 812.939 341.46 cv
813.599 340.92 813.899 340.32 813.899 339.66 cv
cp
828.599 334.681 mo
828.599 342.601 li
829.139 342.601 829.499 342.721 829.679 342.9 cv
829.919 343.08 830.039 343.38 830.039 343.74 cv
830.039 344.04 829.919 344.341 829.679 344.58 cv
829.439 344.761 829.079 344.88 828.539 344.88 cv
826.319 344.88 li
826.319 344.341 li
825.659 344.641 825.059 344.88 824.459 345 cv
823.859 345.181 823.259 345.24 822.719 345.24 cv
821.939 345.24 821.279 345.061 820.739 344.761 cv
820.199 344.46 819.779 343.98 819.479 343.44 cv
819.239 343.021 819.119 342.54 819.119 341.94 cv
819.119 336.96 li
818.699 336.96 li
818.159 336.96 817.739 336.841 817.559 336.66 cv
817.319 336.48 817.199 336.181 817.199 335.82 cv
817.199 335.521 817.319 335.221 817.559 335.04 cv
817.739 334.801 818.159 334.681 818.699 334.681 cv
821.399 334.681 li
821.399 341.521 li
821.399 342 821.52 342.36 821.759 342.601 cv
821.999 342.841 822.359 342.96 822.839 342.96 cv
823.319 342.96 823.799 342.841 824.339 342.66 cv
824.879 342.48 825.539 342.181 826.319 341.7 cv
826.319 336.96 li
825.479 336.96 li
824.939 336.96 824.52 336.841 824.339 336.66 cv
824.099 336.48 823.979 336.181 823.979 335.82 cv
823.979 335.521 824.099 335.221 824.339 335.04 cv
824.52 334.801 824.939 334.681 825.479 334.681 cv
828.599 334.681 li
cp
836.939 336.96 mo
836.939 341.58 li
836.939 342.12 837.059 342.42 837.239 342.601 cv
837.539 342.841 838.079 342.96 838.919 342.96 cv
840.059 342.96 841.139 342.721 842.159 342.181 cv
842.52 342 842.819 341.88 843.059 341.88 cv
843.359 341.88 843.599 342 843.839 342.24 cv
844.02 342.48 844.139 342.78 844.139 343.08 cv
844.139 343.38 844.02 343.62 843.779 343.86 cv
843.419 344.16 842.699 344.521 841.619 344.82 cv
840.539 345.12 839.639 345.24 838.919 345.24 cv
837.479 345.24 836.399 344.94 835.679 344.341 cv
834.959 343.681 834.599 342.96 834.599 342.061 cv
834.599 336.96 li
833.759 336.96 li
833.219 336.96 832.799 336.841 832.619 336.66 cv
832.379 336.48 832.259 336.181 832.259 335.82 cv
832.259 335.521 832.379 335.221 832.619 335.04 cv
832.799 334.801 833.219 334.681 833.759 334.681 cv
834.599 334.681 li
834.599 332.641 li
834.599 332.101 834.719 331.681 834.959 331.44 cv
835.139 331.2 835.439 331.08 835.739 331.08 cv
836.099 331.08 836.399 331.2 836.579 331.44 cv
836.819 331.681 836.939 332.101 836.939 332.641 cv
836.939 334.681 li
841.139 334.681 li
841.679 334.681 842.099 334.801 842.339 335.04 cv
842.579 335.221 842.699 335.521 842.699 335.82 cv
842.699 336.181 842.579 336.48 842.339 336.66 cv
842.099 336.841 841.679 336.96 841.139 336.96 cv
836.939 336.96 li
f
476.938 740.16 mo
491.819 725.28 li
491.819 758.761 li
476.938 743.7 li
461.938 758.761 li
461.938 725.28 li
476.938 740.16 li
cp
464.459 731.341 mo
464.459 752.641 li
475.079 742.021 li
464.459 731.341 li
cp
489.359 731.341 mo
478.739 742.021 li
489.359 752.641 li
489.359 731.341 li
ef
474.599 665.581 mo
474.599 659.461 li
@
474.599 677.94 mo
474.599 671.761 li
@
474.599 690.301 mo
474.599 684.12 li
@
474.599 702.601 mo
474.599 696.48 li
@
474.599 653.28 mo
474.599 647.101 li
@
474.599 714.961 mo
474.599 708.78 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/PDCVEH+CourierNewPS-BoldMT*1 uf/PDCVEH+CourierNewPS-BoldMT uf/CourierNewPS-BoldMT uf/PDCVEI+MyriadPro-SemiboldIt*1 uf/PDCVEI+MyriadPro-SemiboldIt uf/MyriadPro-SemiboldIt ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Carlos-Manuel L\756PEZ-ENR\752QUEZ) ()%%Title: (Composite.eps)%%CreationDate: 23/03/14 12:10%%Canvassize: 16383%AI9_DataStream%Gb!Q;kBcF7ZKQ];h>qG5PfUr`JIl4n_$1.7"UL'D(,.Q1r4((%4")<[!T)`#F1o:V;QHh/]"1d`WEl[TEk</`(?<j6T<(0i:"nW\%4\]P(J&:>geL#Lq>14`/:*_S?BGXF@1+CR(*DWCc8UHoIKN!_$)Vde8#MV8JfX1J9J6T5#bLr%cBC2N54.%KM1X!`Ar*3QGq$G+!%E.>>YU!ds>]^CA@!W2O3I_lQqN)5;!:\s!9IA=<aZX'\F'5i%/'WRc"?m[[i=n6WW@jd*e!IlAi+/S@82S@_gq])69a-%nHF6j!O%iI9%33J[uh`]r&kK@tFh[6_jC@=8V<YMk2b#Q!672B0Fj5TC)$.:;ff8qqk'Kn%sG4)R/`Dg6F]=YAQY!_RpPR^;o+g`D>!_XU;H%@?5$;$%"_%$mu;^INZK6gpkPP=#5$;TeVF9P$nDM8<Qj#(SNGE2ekj[0H;j6ZDS<\rfSI8\=#I8gg:`_n#ZJV*D@6<jn]@+UHKK&%5#V<U1\i-.(c!-[#lKR`ghg[DJ%qAdnVP/U1AKGdjcGsCm8<+sB#[.q&a1;c^Z#H'Q61/e+Gn:p(31f2A50Q:#-,fEiHWRVLnM08%(>\'SU,W9;Nu43,@XrNMfniZBLb.Ip&n+?Ym85Vk+XY00$m!3:O@0dJ(gLo3YUt;ZSh.1@<$i2P8)l%FJrGF_ksQ3rI[-N6jfsRH%nI+V[33DtJ&cZ@p!?3p9DB\WU#\3[6L-lO2lOHD2r;uQ#?mgJ[A/)h=JiO30.fh)&d-QM3g,#.Agg9%?Z'YH+TM,Cn+C[)#RS:TM%9Er4sbMo_1(jqC`i71p<?B)qn<JH'Kj1CIGfIE;Bhi^R`.[bslP"CB?@:h:!9dTtsAAB;"4-P5t1)\^OIY+c-<OiNBQ-8[BEZ&14%QXLhfJQE^9R=oc?%(sk>p`<*`VAI^61#f8':@WW=#Vpd]X^IdZ.r5Cd,k_pZK0=giYRTq2I"hM73J$XQI=eZl)se/aKoe!\0P&f\%p^6m-hr1cC:Cno9-H6R#_1'4%fS3hmDrUOWat\r3(GV97/%u\k*)ho4a0]:AOE,?"`"r+Y[Y"I1Y7M<f6/67'%?D?RLTOta`"C!o%_=thG_,pC@p(!-JI)V>f?f3GN"oAO3nL.iq_0j5s+\#<5+Q]?qLgu2(_d%u!0],:4i1=HD+m#(DN#+hs`s]?fs'Qeu4&IbAn)3$3%fD$i^++/dEY^F@f@@lD(i@A^HHY7DVOtFs"bW1U_9=H=eU9'1!"t@TUJn76<(ZLfk^16F^f.gUU2b:J=,%BF`mBDk3*CImAj6QIN%;iYK;Q=`8AQo>i`KDr+Qb-N,G@rmL5<M!>;T4HWqdOiVT/:[/,=bak_/s!<ZAU,7<73X,<h(goW>"*a+]GN98P9^J,#N)de,_a!H%'OR![nK5,Mn5"MRIl:@PJU`g>nR!c"^WZ*@0:g,?dqKD<>54j@HprM)J#*eW0#-F2Ru=060Ch4(X&SS4q&TJIdN@''E9uL5*`r8F%r.a)ps.]%(4MfBA^cO#?V,Obos#/IPXnD*Wa&@)[!l$I34:3M;hpJo8$@L%TmjT0&YFqp2nM@D3Bq])Ehj9?Z1eGR1TJrN^_L3;L%Q(a$imNM@\,SIP9D2G(8o*W3Hp7@;^4)?N)c7k?'9IIi5iIglL!i!_;)+L8%[=EHGb2GRI)YkD_&6k>Q$j6/W0(o@*CB`UHZ/ErK%Db-kBir.g'R!^i\(0Y1I)>G:>bMZ_2)*i&sVaOKE@W5!@?3FKjD\U#!3%shY<C*F3r]g`<3gr[g:tBUC7#6[:p^c<!Ii+C!*ruK/%3rqQ3B`Ys],.A\S,/6tC.hH_FK5i(q6*MK>6iu5)E'T@:'u'`]'/:)W,XI<m&S/!FY0dl)E',n[IC+UpL\,'?+;0jUTs4T&6bbnm%">/S,LnCDQ#q@6^VFUg-N?oZo'<WNS8b.gK@>kb`$ssi+BiK)U+h-ET^e`>lk'SuhTrR<D^6&g;r)/\h)Rb406l_6GnV!!W)*h]e%+rnh?-mc\^8M[<_-hMsfgl:A9c>8'4l;:)\atRA22'+Kjs+E36BqT@mdQ<al>(hI#7FNG54MQUG$=6`-![%d;C#M4SUdq4#l;L)L%6>2'5XHG*1S>G8OXAOpACC8Bd.O2f"]hPQ':k41t"*[D,7u]sj8qfDQ?\?cNE$_XKMQBTar<D@QQt%!bWBtMZU=LNBED]XC275Eq%"UuGA,?@*O\?b"8LcRqi,`#YjBgU6:AN`4b8X4QHbS$@T[.H]<a0_RZOPa^mbIF:f2hJA7\2U)d6e"SE,bm).7OWA:1ik66&L\69%Y&.Yh#4AtU7]A\PF>P:QdYB#N@+6D1?a)_IH51Fce3X1W/10+de:pfj7@<D(bWu[.#g.H&ZkdKW/e3:'Y1tP8U>gVg/b?:G+O)M&%&lDi:FuR;lGm$]ap0m:%1CG?G$,=7^8Wo5890kVC239p1aX`Hi!S3H\1EGN,VjS7k+gqUM5P>U5%"bkQoID07U"(P`*g'%QmYoLS%,VA"<`RY1;1NA."n_t.ehFk,7fFNO0!U_eq)j8L2HVQ$X.-^D$*&6E=MQ"@c.JSrq6Q7Mj']13.-;.I=@U);mkYjq)#AfaFrdsl$%[`ku5d!LBEYU:[\>nqPuIDM)H)/i*h%!\V1;MhF_nlo!INTiFr'X2/&(idm\+8cl%.!TaI2G-#1QKjW$"1Fn^4@dA6Yht&!MsMbN%0D$OkT!ZT-h0s-P4L.?Xf(@l1e6_ij&fIbo0tgK")$+&4@nT3!KZ5+],C"CaH\rG,:C:?_V?BIbadtA]&aFT,><pM+I20pDoW48s%';uK*Nkck`,E@?%9/K"icQYl<7U,X@qYV86R"8)51o%FREIEj4=VXD"i!G]Uaj-[ca\D#6*2L\+:sO&sKuZZbhc-$a@7>65O95b1%7M_BgO;Ej`\O?Hk0cL9\)+P!B494f08cF\$:PJ1e'MEJ=P!2P!%:oTMh2t?"oN7>4'Ymn7=ph]+Ra2<%qej0R4NfMlp)ACG@NmP(%;s=MN.cQF!Obs#PpftY?M_m49s&%:LP+KpS,DdXYUi/kG$U!9*\e)7dSp,4^$La(`""F+U0VZGsVo&1_f<@psZmYROPu^oY%:k?]%Q64/?Qo</GbXk[XWjTUYrg#6NO9ML4=<`UjipYN_7YN5mitf[4N0G$_6F8gDQ:PS(V<gK;3Hh,L8joq5:rHinlRV;2S_i<!N)ERs%CVY`e):('[YGMR$hN)J?e[/!0b[=VZkFmDu#Wu16Kn<C'Npq-9!5ef*8XeIeQ.b1J$N:m=[O"n!\%O?e@W\d:*Up?kEkZlbarb;n%:)k.))s9LBnjlm]YOI\Kr"o!rMFKW*L9W,m*S/qRDg(+_,dCH-$Luc"OcUOfM:-E8,UBia\4)64K2GL`^b$6TOTcS9iD*"$JmeMY%N=R=\8;k!:U3KP5b#,G-&OT.1Q4hn&B\Pq%6:lWXG*Zh%F_s<?i?'bc^7tHg`f"g#`q7>JXb`R1(cdEE$(>&CS>=Y["sIJ#6^59E%Uc?r@Jn1fR6HBF"$\l2!rAE4/gK<)8pJ/(Sd+4DK*L]ES'%2"4FGngCUl1mo`4e:@RShH7(@@M0'5@&/Ei^F)RZXn@Qu6d?>gtpK%Gn)"P.7j`\-"c=`j@GM=8u@6tV%WPTM@>b,;M(-KXI(arW6'&<S0sUf3#g@fUSL?(PH25@BCHT[,ASW7oV7!`-Xo&rN(67(.qR90%@V/Wa$S%kffb-SQP3l&\&Jr(j_>:+o.q/3D,E!V+@&4UH?^8kMBIHHe`Gkf]k,W*1Ood7>OBO);Lj/peR$d7VI4d3K68TkK1DAcj%7$Nuo!@c?5Q#&u0:lOuoV$A7.2%r:j/$,dB2F',i<Lgi\=SPUt6qV_9WBe"83>]t3I">7-0[KDKP/'YSX=._LXI4`!&5n[VMPq?Q%=c_O8)-8iBL.Zbh@0uFl#[1e+fL1-3@T2hac?O*];+=OXMc*:]SiG/F)6lsc;_11g\1o#&pITAT+J+[D92!#g'spnuYhF]CaV<2Y%_<[9=Tr8%7F'S3?0Vr6E8gP.:hm!p'IYXjN!>TTgIKQP`oJ^XG4X7*>iI$R:*E[3T4;D-61h93\P@Wl6+oe;7c3PrO_RG2!DSc7:%1,iB417;09MeGCErrDXq\Palc"EuA,'BqDESE7W1CIK]8=tZT$P*J?-#ruukT2Q)h8^nb,Q!V;tM=SK%Fs;c;Mg8#o\%m@/#Shh&%+c:&t;T=7,(11<8`jT6ANDVF&R#VPX>-R[1;UpOZSmtU_;j)&#.>ha,]YLih_\D"%bn/LPE7P*E&CD`<G"JYn`Ag?.#GGJ?eeHh-%L>#NthVfFrc7e1%=JS@WC%/eq6Y=b.a[8PfP,`GFN_tZNKYTJlV8u(sP"2>/=YEC'\Z[DcDCf)8"P0\h4Du_/\cJ*pSTij%a9Y4C%lf"ipL2b0Pr`!4LiJtmb\/2<m05&H_^*\7t=$#,K]<]-&@[Y<`G.HS_PJqddfe^akQtQHYi3p3&24SVJ\?_,k4Lc@[&%LS/2IdsH%G-KeAOdjU+2WQ&6Z'd1a0AXJ(-7j`a@0[HpYaphegclBODM.Cj&b(>WS3qMS+rn=^;r#Me[n\XP$#VOr[$aI%('qQ)ZG^UH\F!2A%Ft'h)@T'YEknZ56b"Z`8XjhO8NlN+])$0k"/i!G)NiY/Z5D-XOEs&p<1Xb1+B&"`=@X6%GeQ2n/0kV<?rX<b&8"3cbZsdLL>lEV/%j0)0f_m;]?DKh(J)C0F``H!cq7M2X5Bru%7qTC5a[$kj`o>tGl2\P$JE/VebX8U_[dnY9to"u%E5YW"6r&eWDKC'(r&K@t4G6.Te%Q<V7%%[VYu,2>D8)*:>1JTOTjljVYlh)1WQ_;OaE1#@MUk2sk3N#QWpDjV3nCc5G4T!)5^J;[6K0IT6>KXXQa$"[X%"=-FG3I4&E%$s8I=MI/&2oM,<*s#?PH21YfQ0hpYQ:\lp-=ZiFD/\a]<U7!4QNP6QT[`E+`3\6'l^`6JX4Nel^&2_u/4R9=h:*L6t!DPL[bO$4(%Lb1qB7'r]`9OZ&A8AnL^C[1]h\l)f!;PQ9jeA@2K$@$$p>I_X8DK2i_F,qs`iCL*&PDJ494:lRW^dED13S]Q6TF$1I1nN+'aObSi%B)1hA`bm_C*\J8a1brITIC="sD)>!mI<=)q3L@/2J;\[L2,[A<`F'"]hIl3t3r@ZSpUn7/oU88ADTBA\]?_<;d#fM5H^EW1h*3F8%13IoTm.IjE"8_Y=O6ApG]<_)XUk[&V-Lld`P(GTtPGqXeN%4S.AS9po1,<!k^oZDj;<S?HP,JCXoc+?N'7R3KBbIESTX$HhFuGkL%7M4#33SKW<=n0\oFoW61"@1a-eI96k1Qg7Y)ma],R7TesrdrVV:1dB9Fp2dY8"_&iNmQQt_nqDq_OL_>id\JWR'T<C"Dg1&Zgaa]%B+B7d&]*q9_+A$`IfTJWJS;k/iO53j]TW8-caMb0Q!\E1ou1TYo-2J1&VRdha7`R6)sCh)h(/CGJ*Lht)_T?0<^'GIb`(XD42(u<%7UO./rHH`GBZ\T^g[VJ4`F%D:\PdsCIK:A&rlFZ2rLhn$G/<`moXb7:3<@.3blSs.YiXan!+e)rp<j?tf!PVoIoXD(^[6g.)8I9k%]Y27%f3e7>E]K?!W\6rjKqHbrYl0%VN]+IWd99o^m:$\HBJEB^k._B6BPi\/>l8Mp?=nb4J6]+r5S&FkFU8_qG)0NL9f-#!AU.2O%dY=320]P3DJ29,CK*JjeeF4"T,#UHW[EJ@Q(73]9?gNY;0K3>IC>"^L-D93sWkM<N>UO.Q'j-d/q#e";/^d`$#7Z*dB0k\r9>HS/%%6Nb>6!L-@R0*UD?7"qin:,6fbE*#,di\)@$@MUQ5Q,G[gTTutDhNNEIXSdpm@JjWJosi6Ad?J-"Pu!q?bil3G.)\NK,FWXJkpSK%YpcS[R2FA&(rR-(7@>HKq:]G3!tXB&LpZ!I)3q3fP1I(4!k.g<eh0Nb6s,5'=qcEbZ>HKMW514J5n`r*Q=U?ars1gk5aic(J.&`A%'ll86rJ69e_.^]('BD0[r#ab`WMhsX#Aq/leKjJ`o&0@8#epe61EQQ_fHV[r<UF*(O\@VsZ!\X4T1JLMokM%R5K/fZa;kN@&+>Ar%%e4Ht0^\.KC:dX&moUEW:&]ps^][rLYJ=,umH_lA4%$n7iBXcd(1?.rQRkA.%q%,a"9Mka<JqR\X!l?J^BF$KIcaegCTf/G5bu<-%+@3#F,bqlD&cX=[3QBN3GZu)O5,'Q8#'DiN_%o*YTnHMNC6PoE9VPW/QSQ2JMd:P&DL5`nJW%75gZ?jM3'ZjJ'B!DA!YTH:8_U#7%7>V,Y:oFWoe-8bS\$<h2/H@*W@3VeGdQ=;j%#B[-&.]bq#+33V*TiQ=I3_*bDDs6P[;WR)2V)&`$+QLG>+s;"*e<Ge$li50s4Ca.%^0L$8@g0Kc"!;:R(WW`;6kF8Z#`6U%4*W#WTtc-@\`E.+(3jQr;&5b+Rl>l0\oRo]k!*nu5nCL;!6%b1+<XnWaO#DT`%So-Zl4=C%5`t5_Bd?H"nLAq>r)nl^j'JfOraP\G:*DgDVLPkWXk4Eg^,BZ6OMk"hA?G_%^Q^hY$*$??/MID`&^43:/,+*Ug%q%go[l>/ho(=]%AcHAc_3>mBl'p>rQ\POYhNOhM[kt6$[QifR#l`\Cr80?YZ[Z,LlEKNf/B+i?KC*ukSH$3iloukQfej.3.!5E<lEDaus7(@8B_a;*%jo:*=\fUhK?Yk`%j_:rj9a:XPFg:$$)Ki@#g]0doj@1*dg^bp1]R.u>X-'7!p'=NhTbpuHiIAHuij4F6FQSXLcM[LI4-P]F_dk=3%[l8e4L79hH4VA\4]=gf_1LVJ%lkR#`%PAf+l'Bum^VK[j[F\Q!q#Q6lNqKTFIpf)OD%c!dL)g>6kYsSu-dluu'_3eUA4k5drfTr#%@L9q?Q^tMX,s9=T$u$NofI,u2Hjgg)aIu_d[./5=@^G0>@is_g/2RbA6C]fmJno9&-"ZC=3_kg=_KR9"nS$XDkboN)N*:)AMkOU=%:sm\EDH;9aF%W/6a;^^VXB-qif"iFn_.74d96n"[<6/n44!KR-m;4@rN`;!.>Kh#.\UQO2b&FXpqif]Do1.Q9h)o)/?&Z8ZR'X8g%.rb]5ODfat5NIQ$+XtsE4`[maW%O9+n<J1;hU5rf'Z/=-s5L2jZcrV@*gG#5S`F)+:=\<ZTql'dR1pp*>'6YeiuW6[N*f!(]92Pn%57DcF"^a>a[EVa&=[4a^S6G1D1kYa>B/B-[lfhs1T<Sba1ToI@m`j\A*:*cG%5"XCX`l]QXM%QF6d`B5,[PFEk%`S)Md^eM?(Z;u%nPC'`]-nOYK1.7'pPYl<Ts[Z3.*9)+:W,ORaEB)^gkZB&eFno]Q!l;U/EDu_Pe#jS6IS#t3?etn-!X?FKN0K4\$!U('QBMWm/U5n%C35G-5N/*#O>h-4(#FW+ZM(0o/AR4Qa915MQjLBAFXO#K=1FZ0B&Vm-EXUd4T3XscK%5_hj2@#K9S72:G[4*AggL$_lEopm^2,9/%fLkBHH>.7"H8`/)s4D%7ne[hfB!W<10Dbm**f>N''&uGR6M/o_)BmRC=gP&?gBBRs_fKe+).EFs]]@+A;rWKh6KX@T$sTh=m#2Td%m;;Ta$0A,5C,Yis/1J*R@'MV".;6&Ub`oimY/H=_e*n9Y)XhABgc!PM0PiQ'QRcR/7uL)d3)^9CDO^=-0D6lmLM7d#!OFX>Tk,84%:Z0_ZD6i*>XLo*[ctKXgCs]J?8XgS(bmD#8d3kB+lS!DeG@!l]dVT/S$5_K$WrSEer`OqT$\s&P#&W:=VD7&&_/_D8mV/m`krNQ5%gmZq-P8OdH2kRn$AH;)L/d@UU!c#t4(?.*a^8$BcmF/q)\O(:\n&(^#rK6CJ6O(35U&ENrH#0lqIJ1FMjqIhM.t0LILf5h(Nsb<D%S;:U>C,_(hCuA7O%HT):]*!PrR>D+O3Bs7-[tgC@2PIfH7TSq[%3anH$d1r?L6dDN@?^+%dmc66!hV.eL)[D"[G6RA/!5[X\)_*>%Q:`"J>hg+X3VV7Qj_2$`2Z&qkBq";_kX05N))'XuW)M<9mgJ@t1Pi!'6A/(fZ0VC"1M9F(%W%$Wn/?f!aFFBk$f$sUgq@2a.VpR0%pO2fbFeSga,I=o@Ti]>'+TO>=!@@TMjSq^]&;+"3Qr(XTn07pm1Np1`h[nM0p^"stEXTCGA8MNZ"-'1>4J#UA!J@hKCa9;m7h`IS%&"A/B%=NK/5H%@=N-6QklJ'dH=)=J_kBt'E7\Aeo-Hq`<)).Zs)T"gN8P*#tbH"n(IBAcl,&,[L4mu]O[=uU5eJ?jgW4(&V8[WFa%U[$l_c-a^#$%=b"a4NaanY>3_Cq:k+C^tU/g0?1Zcc'bN%TSHAE+O9r8j_L4?H]SgjTYT9XLgC5P_;Ui]L?[u4/A>8\h59%RY3);%]f*lhg_647)pJ>L,`39FQ^]YUK2C`M.'^<,MmFd#efP2(ZV<4tf?;-RnAR'D5]6R-i#N!T+C*MY[_CWoO!ubk!n$&(0"?k$l@9cd%3a1q4Ca)>[\oU7b^P0lh"6cZXc/20Cg6B:5KW\(SR*ml;)BBqt7a_DeL6C3,h/fhK6G`t4`sEj@hi-kr&ENo76\c0MT_cjHb^",D%2eLJ@XhY$14#A8lC\CUgnplWcAC9^1+9@\R7*:RZG.Pi&IuNL^0T!?(eT!E\+R*p5%q`4%[r/[V,.hcN<Sc1mOG\r'e::p"faU,2%jG5PER@Sq3>1+n3,')<9Fj6'i,,kWhkVO:HUpMf^FS@F17V6@qTiMZ%OXM%l2(UD1RGl]Fo^\*2cSpjImj>I.1Ve1t56BsH]90L%%RMD4J3Z3HPAlj5bCr2T"1SUOaH$6S./UK<_VW6T*_39a;asmS4eq*tl.TRQ).8%M43nli_,N+F7_(dh;B#QinGLogjeE5dlP'hBS%rl/AFd;:^8#g,D@(2fjOTJWF;b>79Pd$riUM)uZ"0kC*t%#IgToB4+Ma^q<S@1UPH'AQi3&DO<[:)dhr+HsD-c9H*XVr<g>E%]#]%4;(X)cs#"BQ(GEDcGj)H"L)cd3Ee:rJ[L[6W*&WCCPDGm@n%(B089&d;]!%-cAX)4R4!jqj?6CcB>2#'Bd7"5*k=Hs3c+i/;[AN6%DXJlaT4u;mJMW>BE70kWU(buR!\3"9CV)mB@i$ncp9ekpR/QJ,DIHnYImNU6(NuX3JYq;LY2R\n<A)NeRp*]&q_\E]?Icjj/@Y<f%LeR0NFE6#Y+Oh7`R%5edU9t&"cjl./[k9q,m@,C)1#VC3[)1)ABC$_MJHj]P:BoH&YIB-;87$^1UK!oq#%Lj;VLh@p^)Y8Y-YrU&%0ng@3@EUHV^e\!X-PgG*3.eM2=0YG12J1B4!%A0W^Z*&)//`=Kr%(R\d$*aZlh,@Ojrj'\@f3OnIL5'W00D8g.<lSK[mHo8?_)[X%`s]p&is9rojTul44-TEH9(G)K]WW*Rj-SH]X67(8D[._g'"q&PaE[WQ+P-0D4Ur+M@dZDG0BRnfF`H5n7Vo5:Y3Fl`7TZ)-\9?UX%k2T^E4LljKk]#01hEf[3p&Mf@c+('YkN[g$IOiC06U>J$Cp'a`BCcid,gWq.*Hs]5^1X$-Ru8="=++@^c;\D?HFSBKV7PdXK/$88%]Bi`V5@r]/fl_N\TS'C!j/ie]2A]g<o*JAD4aMHKQ"J"g;g).:g6B?Mc_QF=T5Js?2LgV[9@"i;"%ZabhoG1YnB(Vrf8"K=.?sgT%;Ou21!n6YW%_">tk1^gl<!J1`Dttp_Oip\+Qoe-U$%<)9A^<M<k-k9+_q"QaDD5IrnC&XZ))]/_As.tS.=U:SbYI#uL8C=(dM(UB%Y?S$[EW8<#IDt!l(HdC'p[D4Z('DlFE,hG,UunisP>j$;*lTOV:aZ@o/1Ek)cr]N<^p]J_90L:N@<PP/Y[Dk#lO.VZaH^A:p)Nh"%f5qbNp&+Vq-(%9*_78!%P37NuH2/N&57Co)dJiq\!aAd:5_f\<s#D'^QfMZIFohD<-r#-3O<Bu&_^7[`SR9hX2Xb5tJS-$58\tl(%#RY<UEtSAWH5q>C'UZQ&.K<Lai9'-/jV%`Sp7c[P\kb_e:oFMlo]>j7JFe#JcOIX-hU+kd"9WnN;F8/#)O7HN!o@Gh8FOM<CrF<?%D[Apjr]mOh>2V0-Hqo,$W%S#hTLY-a:PE@Cc;LrtJ"(/aT'iRY\^[KHS]O[tk:Jd(\OuBupB*5C3B;JiI#ro7;Z)Ad1%b5#7sXZr%N9!HLf9e"Jr$5ZXiA6b1)_P]Ll-@Vf6+*0\#"/9B%EocRd9-+Yk\jM\gVDnQqh$t08>b'LY.H]h\lYBgDV$_8<U`9oLaV%&K'IlS%djf9PY0-@_23*.J056#`/]NkXj?N5E%A^l`%$['GGO8M33NF-%E?MLH>^ifaLeFBo8j6N<X450)M'ODi=QM^an#-hqLj\qWl>s]&%0d1:T,e%t8Nq'\^^@G@rDH[?'_i-.G?iotd:r@B)6R\Ws0WF2Pd'[q%H2LZFVfIFe4"BnCIFO9C]/G"4_*4o#6G\+?Db)W^Y#2X<%W:'=4!&R@m6^O7TW?/IGV4q8'QPtEH;i).7CA`BZE].dSf:M(@3q41!'WRcKRnN/ckga(Z<9Q`MPROr@OMV<f[>,kk8k2'HrmLOQ%3%rMl%nir"p#H5u)?C/[WY/Rn6lC1sog7Jo^-(>^2g6\gBRXB,l(^b?=qXZDr5)XAo'fTl<B*7jGjEA:iqVL>.elfN+9-Y_mTkIQ%\t,>%lb:Tkhm6-#Bf+KS!%d^6jV<n29tdS6PHU-UKl2CSo<V&\!*c0oeg/Z#<kK55O0YV0>Qp;Wh5&&@4Kc#34oH8>e^l%=Ym9HK%'"ORH:n>q5Z>_ZgI2;F^EYpY/HiR?Ckq8+EgCL<jmDe7gW%lY/i.lT?+(X2P[$:/<d`Z"+b)96!_4D<AS!P>HnBNQBAQU,pjH.6N%Y'Lm%nEHnPIUe;YhoKdDh#X`.>I),*%I^eXhY7ODq(cf7O)VRa!5lXg<X`YcGm?N]e$t7]G_NCnjM=;X3!d]teq-^00AUV**RY!H%Qm>3BJc]V9=E$226qEQGeA8m+^eh3G(3m<S72!^GUs6Qf)ZUEAjlKB[pXQ.+#EA.)_934_A0jS2I4pI_bhjmPJGK$-\IkOJ;_htd%(A0rW&+-%mTc"%@9@QfRR0<j2R_KP)5,m1cgW<g-]HG=IR!36uk_k]L5s<#U7#8][eQ4.7E*NeS_aH&I*DL+KA5V#k(:jLNkV3J>%'lcQNLSE,!YqAt;Caf-20Mpbr[b'FY!M9K]9oWVFipOMp<(J/pN:a*"k)2?*l;>O5K+N$D^^7]R,"tOP)k6n#+[r?Dn[QC#LU)60%]HEM)iNC9X-4RV8&"\O9nkikPL.(5XiY\-+&@X=G&jN'"_/A2&H=#.)T:bC41_rd4_f^O.5Dgp"7YY(H><-RVT@^b-j7%hT'dL5;%2D&,0O:ujkoX+C<IQoG\hEQm__=Yd-9prkh88R#"iJc4P#X"i##/k!9J-HTXO$gWSm/"-U^/s"-WM2!(]_LFTB$+K8]4\_&paIXR%<;POO]*7"?G2E$Yn6fnJ3N:"25d<]ML7!DM6_DS#HSoj+HN?Fr_l>HtFsEho0H*j-NF]"QVE'.&-Mpij;nC[pAB"m]fPA'p#i1_?%":._1Cn$hIb7SpDFoXYD_/5lWjSJ;0Joh#h$$bcmk>QsG$_[n!PYMW^/;,@%f-a.'#^-Z4bc9=iI4@`8kujCW$"IrCRL9&Ado?^b%Yqhq^;#c#6(+>7[j/L`_h'aR4!.h=\\h1Yk9=M(5%<@5\X"'OciKH#46"41l2SsS742o?Y"-EatSA9Sg;+j'rRU)q9hZ2XGAg\?h%R1Q-d!qWa[9_tRl:bBqTitpeT_e6Q=rr4UE>`5a[>o]5<[s=@j(k>Du9m(U0cX[*fpl-2.di_3'Ha&7(;OprF!:Cp.OFt0g<j[,?%a9[oCf?XJ0:#gSProitG]_qHfa9$rX5/biu$\Rl%_;$\<Y6,mYBoh9%"NeNri4Ut,?9%!RP->VQiI",1@Cf@UaN5'YYIoT9-n4<W%c%"#<(0`ICUTVg'N?p+=N4brbKB?1u[U!]>ID,H95j5Z>U2Fm1%kuQM00F^("<K5P6u'=#[u'5s4KGVh*3[10bXr?4ho9JR8Ku7j%H2d+nT"TTc6jRhOAaU4$G@b6J.G#<=>H:Z(']52^13gQWW5dcWS]^"3+mD<PrY(l"-l/idMu;7.NUcmtEM0HU6$s=c/qA)UA!de!%isYQ;<m:<q(WFGLJ33WCkY-NsbBtNp=(pcf"@at2?h++k/7Z:)j/<Z2954C*J6AATd3RgC((fV:p<DK^S9-T[]a@*alij*@E`AX3%-V9\*#e^6<U%2.55dV*a/&:"&JE7PZDiCc`)`,th9;W^g@.*o<m1%V0O[D6i(QFn-4e-/:U@<HS5b*9pd,itA2FaC:UCbG%!1Z3!%]LZSD:H'ZjWRd)oB&Pfa!:;>!gL5/3N&ULq\&ub'lNIhaFqfEump=+FI7\GaZu4=V!h@?]U!4HVqN9rtg4qs4qZXt,K"Z&^JZ"`Y%]O#a1[Mu\Lj^T%.o%rY]!8f%,(!am%)$Gas.dkR:!ql;T`kHtR5'C8V?f&EZqL%j38j#4iWEXk!9\jgn%%&]Nl<C8F-&9.]<P\n$%,!smgRXXI:gn?&[46J\O`2C4bB8?:BGPC;5i)aWYFp@1]YKr,s)en^b:L`[Z!h%-"j[RP@QO_G'0VWdW9#.&=.EreOX49`)^%gO@%Ca@5!0Z7HkEmnPa`)fQQ_]dPVO+XCG<:^.sahFJXmIg3ePb!&:YCT=_U_p[EoBUNneLhH<\T2W3QWLL_&,t)'+P5$ua`6d`.E\Ds%DoT=Z-+J=LJS%T;<%#Mp<Tb=9#IaLF29_'pSZdSr\c0I+b[p@E>.uFM>\[e:=M<W50>MH(\H@Ihr)%]o![o6$f_`1a\^1D6c5;5N%r+mXB(X,Z,:X>I9fa/Dunbq6/O#ioVo&S#_!.l50;2[bhW@(&P>bKHOQ@i3"H5%O%<jpF)k"7/#k:KMrpD3R$Ad`a%O\3:rDs1'\%1K&M\2Jrsg1Z,jC$gdk>O'7"?r.&9l@?K=ko^u32*Y<Hs=%GpA+rSiCON`rhFK&7%%_7Q@o]UH-/2C6@!k#FWVG+[_R<!:p=*%]0%FXe&m;Yj*9s*+",>A'?d]hqT.2"CBE1&K%OMs1uVJb"u9==R1?+,q"sU@sr(SmjWS%4,AP?-`V,<4)qsbKk74-Oj#`.*B[NVWi#M%FF:]Y&#8Pn!P=H+g="rl@AoR,q49(+F7@UPShZ//Yk0,6f,lKr"J\0deka86cReY+]mkp@k2K!Ve66(fp:ak^_*1f>qjag9+H*q*%d_&RNm)mN=)),FHBBUf+82&>2E>NTE\e08<j[$+@N96!8=C8gk<aCZZ;<6'\2tUe*LNN_X"0CY;#M4-jR.BGr-;P^,IY#d1$795e%Mo@ZJ^*c<*1&[iI"W%DKN(alI?j@4gCC+g;n^`JV0XuLa3oZ"Yo'\83fEUC::gE+=q7XLaK$QR]YGh:l[E)5SK\;^@@_T'-=3a7^%%0E/V&Hru-FmqCo\;s^i7&Y)5'a;.+"Z8W"^,+0>Y"^reRZ#<2YlL.Y@@n%94B/>%c%%P4[AbH0o'0]cS8Y3_5^7kS7#\J(JJbVe%?+7`"9N?p4*Z$';Q]ggU##+%EJg-qUbUjC+:SKW.nHld/>Q'A;K1kFT-*\RmHc6k+3#'#`^r=jqQ%D*5lF`BoWM1&['#HtI&hYf4%r*-*Qm]rN`SsOc'9L2q8Hph[,>CC5fGZi$#B"MF7'7#YeK,5XWnHE[IEc>%<*%oeF5g\G=<-VA_s$Vo&M6X^h*b0IRQ+Ln@WQt3$%\n`],4@Hqrb$8Wj/Bo`fHsXE?->GW3^FNY%S**?'P\]7sj.FUJ,D/U<=UXI#VkRJKrV0E%5O2rYNKAIR!>^@#I<kEPFm2J4a&n26%`0K>V91KD#83THsFPSEh;I]K4F-UYn[ppR(.o\WEO\M[m4+?+7FZi\b=>(J3Dth$V9&0]uA/;TdCn=se-)a*#9@)SMZ!mni:Nlp6%cO)),m]&+50@O\73\o*dD)^rm/uY*!XV+7'Q?8m!$Sg/%K1D)rj"c5l+ZGUt\l[a5l^\$Z^3`qqU"@W;:6fi/-iHXnPl"'ZgCYC>%Sc`odgF/maL_-;S;sN6TYKo24Mk_$6LCs:"/"Ktop#59B30%;LY8Q6[+!tBI`*"R[SrS#5HNi7p1>?`XWH<9r_7L-D]'KK#\HQ&l%:PV:@;/dY@gY9=f@)_Pd=?R:ND+Y)c5SG<"(>OF4FuUI`;*18*MJZhKq-`[_Tem.>h.lCgoa1Irbt*Rce3B,AP115t<+:*79`C-A%.U4SO9&J*O'4P\&=&5A2^nOLk[\$LSc\aY'gqHOHKcbfI1:[!_W,d<b8M.g+>7.NeIbt4mis>_o=EkD:(GOXm?r)=$o:H=,P4[S=%Hjr8F3ak!<M//eWLhQA,NN9N1CoeP9V/%C0aa:QTj%A"ik%E>u>_OrQ%rX1h"l;+/E,Jq-j&ii=k9CS*5pto*-#dqk-HHBKPVT+l%=\k<3Q[5IJM<%fO>5W7R;eP\l1fIh+<&PU`S<jFMgl$0!"uJR=P%,T#hfP[bm:%R04!dJY7;5#p)E#$l3pm#":d%-^RAPboiWD#[%8T"(mH1F8P0^5`]OYhSo)8ZRSDs!f[]tf"i<QHS';VM1RE""SWg(1,aiQXupdD#ik_):6R>/6=m52<n9jOqq:e"h>%.&lk+'#a\>%Q"*4\"AOUaH3Q:*Zt4W4]rD;]S[uJ41%`[1#-nj+WO(@3(f^dpZO)F=\;TsheGlToaUN@pedUr4X4PMPd[^@n2Ausl0c80WQuf$*%Fj*[kjW4u:\#f)R[f&pCn&o,2[2Ji)Fp"goWT("l:WY8_`u#?3/3]Zh\+(C\Olo#Lo&WP`:=f_W0CDIVq<4Y":L3<W@C6Q!o,D)r%R$^t2f3XJGh:M5S-,s5-Xod+`j"!aRA(OT3q3!$`8,FLh./QTo][bSBVW]IZ1.@If]7'b_]XRYs^3kO=Eq9^Hf<Y0MRX3jTS[&3!%O:&1cn?G"I(><B0[aXI)@]1V'Q'.d-Y%a_W]Xtg<&T=7n<Luk=9`*`e-%m5V'>eo"]&^aCe5-+"Hh[$/!:Wi8i\_\/e#3+4GGec?%OSDKQ/g'p%+qhBq!/G,!K:en.r,">=?+?.`TaSE`ATq&SO^`H:428C8@DG^$Y!rL0GKDLn035](KHd!LS')Bl9_/bOc#^l:r0i./%P?Gg9I!EDL"KF[D8+?ASlL5:?GW=9uJ@67E=*u$0hBH^oQ`\R8;>\#;KX@V]J'%5WD'a/WI&%^(7gE<gIA*Rta?!0khU#">e%K;K%9:sgSQ-(=/8PunVZBK]PdE>(?o&o4LVK562QP\Mk/+QUcrD[qH7)sL%?oI5Oc"3Td45KiTKcP_][KCkK4$pl.P_`T:]Vp;]dcgNG%d>tkSF2^c9=;kkHq(kVRU:kR;Fe\TGQ$L)_dAMSsS#^!CZS&%hq8Y1qI#^Ejpt'-[oWQkX/uX[/kZV_pkZU"-^B=8"cmL[f?ecea%)U@.cbr*i1em3eO==5<_N`S57J?F$`ffV[[QW#gtFH[*%$fZ'G@/2`jSHlCJgH_ItE6DMl6^Osqdm(B]n?k:ZGP>c.dT?G8qXml"%WQbV79t_p[p%L.,X$umQ]P/9.9hlU,QTij1_oo5T(QXYENbS@D-=>eGdB$[cl.Qf`%N-B`I!JjjYG-g%k2Q2]mtkEXs0XJ3c^8.h%RC`"GkTM7>mNZS!1jSM(G:3eA"d,OfYOUHs;*BECf10!R'g;5=pdpgcYMX.o5hbpVA>D+"@W3m-R10a3+H?>WH;o7h>P.1b,5(?-%[i0^P?X/p"!,6hk,=q9K"sJ\A?\K7=:!?dR)^D.0s6b%n(a*Aoab;)[diaA7-q(\EhI:eZKh-"Lj\'NkO#2@K?$fIe?4SL"r?PZ4%n)__3)OI#/&ko0#0L2'hGBP&&S3GAGmu:`3C3LSl!/hsll^V`/H0FH9XTl6nL.FJ_\C`S#W?]9`=)B>#!mpdf(jsO%02k<[2*dU6%Bot;PV4N4E(\2=&-9KK:"%HI>SMCI"`.Im_>U5akQ%Ud<ZeE_d2*J]Kl6<q8o+OKe`T]l1X[/r5MF_*%6mp0[ooV.!YDj\AguosL%HsGej87a<;4MQ0D?'UA1QAGjm;d(8Wo6f:1pP3HgU^p1?$"g#2?gk%XlHBNJK6UM;M?ZU)I1Pe-T9P;ak#.k#]^5M)Oa_[SRn!RV%YArR(eb//O]kIL#rqhPtqfVf4[L(h0,+Z1FmO'6T%.S?7PF%E+RKa(8X6ASNW-)5ZC#qF@1dIM43?E*p-:Z.LD5ukm"+1r7qtLeZ%BEL>[VKJL%]l3'U!9jZj7Jc8`EsbI9)8F2>\;BO@"@=%"'YH<VmUNV4IQbD+LIaeEQDPOC]UgJgJ@)i;lJM:#14t]qH7M8jH\'d=%0eEo*qmOUQW>P!6&*.IA<tK(V<u'SUTiBM>%?N>L/Q.%<knB.jDo5sf<.1n)QX&r@65mJKD`1TY4b$T^qCc]APh9F59u_VT[(3:@%Uf"7;L)-3B0CAqF=C1GWc^3(OhL5"g9)%V:Fl\DUCLCXkePdUDFo*.mrgi@_%%*^*<H?OWWfC9K09Rd(8]%Mi6??3)>)B+M\>kkU%g4E,.hJ*@L]/Q39=a3^+?`gp\`R\P\<pqO-a3Nt>>bcaj^=L'26+f&WJ]--tC@^D^=P.p.Xu8c:D!E0s3OV"LDOsF19B"FZY,3D5%dR`duHo($$B4!+lq5Tlnc+NeES:<(.gg0J83r)@hi+ak=;,2:Aor^WA>uSuAKeMT;^\d0]l[/S-#oHoqqOYaYOf6+Hq9LfQjjKN+%]@VCJmGo9,1:[5+rut&/ma[Aj#>lH*Ef>F(?CV0tN;hYgdg`WDCN92P8&X/KkIZ1T^bOI$mI7sX\@L,$cLVho\$=qpf*ed:GHXJ/%p"!to%^5:K+eJOtY8qO&)KSSB8S,Sa=5NI]E:q*200]58q.a@"bHI^tDhV.i+]EH2$[si:@bYHC3(oZpAe';87ll7oh'3?'6!X4?%loMd4^+K94L@Jp0&Sc[n:ZuM]_RC74Q;c;":(^p!EC[1\$P*M6T=-0'!QoPLQ]Re/-5V(PnF4^Q+P;OLod5/(oj"jk6EoKTWpP8o%49j@9eJs?+IHTEc<n9m=ESmfOdPL#KUk_q=`X/N,Caj1R&h.dY(U;bN!Rfi:$.>guToiks?\rN_mn$&[.\u=_q+l&..O)"?eEhT^%,)pf:#cZ&p0_i)$Vs*Hnm66l!#'.'I)Zumm0.:ZfIAHC>%j@5)^5,g#n<bmtMIHemU`c*/O[EK.'RJd@>#qi1,(k`R+]@B^(a=\5%aLuEa[1!P6+D'hUN@9oTi+jJ-k`[\/2r!<:kj,]oST@gST!^0jL@)e?9.fu,a4-s4(U2Mk%%)(pK"HZl5\[dC_6OS8Q(e4Z7r/bt%/'N4,X,s<hmJrTWK>PeXTh+)I)5;BF:-"ftDP/%604f\=p9''(AVHCnf[VGuJA,Q87D:`"]pq_$r-F2P5g9[2qFf]SC_FW.A>N?U%<*Y:sTGM0Xqpsn-BBa:WTg*!2Tu/Y-`)X\968).P<.Tch=%hfZ*@UPi2'G>m_tiSG)gleGi-FY?&>_bBg74t[j?+BgiA\tXS?^J;%4u(NU>=58\/4V@;b*ZH#T;[rN%kl$o;^!?rrBi7)'5]p^Z-.pj[6/o<N1sbaK@b^ni.sq5IlY9onP_s;H6ZPZ/.Q0U%Oe\>N.=&.%Mu,fW:5h;":E$qTnc$@f[3SnQVm^O+LjXt[9K4-iSXBSb<;Z!VRAEbD^#25XH7H,[(!pFt"B,71*0'\"=a=4Q,lfY/")T4iWsuPr%Pj.\?o%Mfb;M/dN&AGe*1VGiUZ3"P"L7[B_R[$(SY/QpA7T8`DdB)-P[Fb$KN-=5AKPdP,.0R\?h!aWqc]*7I0C6C18i@?MA(o>9%efd)UP&k=UWoT].g0lq)0r;A9;@HKtqYG7E@s$BZb'KZ`4grP$eu^2UZBYoe!%Wh3$pe=j_@2fDhY!X:mCZrTRX=mIZT.DU7V\YZ%msr]`"S%C(<hs3l8hJ0`fU8!*KeJ&N5tPl5fjN./8K!b->i>:rf.q<M93LsY?XWcYT4mILF/@d9@*+>^0:PW%Kp`Cl1qh<G$+T`$%2q>9;p#+6L<Ba=P.V&rti"58L)!.hVBKiMtp$/\g1)jS3j(Wh?0h[ZoVXg?1GY`kb^;HIDY^b:6U);RFW6C['Xd#fi5S>"6YB(q_%MXm:F14D\&*V0$"Rf1lbbXYJN5E/<K@JhCq^GCJSA?8NA"s/e_LTUIa0Z1CfZMTCW4':K:34@/:4,@B]?$d2<[736F@mXKp&@?-8%W>AG;Xu/1=.Y^fWc"5]mhA!>c_q:Y?dUV=+FU)..;lFCTnIoNr\/'MIQ5Tu2b42<jN,:1Q7rh+s7b/0G#C?StWpR@I:r0@hL%RX+%@"j[I.8&;iMBO/?["(]'Z#<e"nL]eG7,XH_fF[mV5$b3lHMWGeMi)@!2T1NB;Nb7pJLcYEaR>@MD(iT-+H&-(!d.[6i_CKu\CH"!%%>FA/CNk-!>m,t^MQr/mNJEKbg/S.<Gi,e.poY^7!#0cNG!lK*ci#s(KC^C9H[Q7MAN;I:'PoCMWAX2,UMoHOo'lVb41fZ*YhE;%%P0Yh>ahR/[Lck"&,E(TMAT$+:#;I`KUbH2IXIeDfS"2!'?>V7sBnk:e7>Bkq42h`V,lg0_WCIEi/e/=?@a8fB]g!+%a>0Ji*o3f;%V=ic-lC(eGqth!G7OI>6a"/1*2f(+Q"NUFti7?At'0C<D"WT>CdTOZg`136f\@Dar/2H@?5:#j!c.C%*+)o7GA##q/<1*ru.h/s7%'='-JZdoSf1VF<MJL_2Zqt[u%ZCc=M__ila1T6X;>W(#ccp/dST!2)DIUTrIZkh"Zc>>0I8^H6SeE63:3PW4N_+_&O%&_3LBhY*q%Y0SrB\S<76GDZI;hM#HH]$Qm!$b;J,,g"Vb=e@XGhS0);p!b^dF]-.j21u-*pi+KUhOP.'`N^L.F,@,9m3&?`[J@*mh[4oHVsED!%i+I%V8hM0E$Q:rs7aFcf&JXn1Tjh$o5WJXQTH4g/:.PuBaX\)3MULpli_#,p:BaG*5%jpgOh!5?McVtJXhP0lZb"!rCJ1G8(Beo]%\Imjo6nM[;3Fn,qOHj)\.uhS<\]eofdJQ$Dm9ZR8eGI8rdqB7bWu;G.Mlr=tDIqmQ1`C`sid+4#0pkuug3OZ#h,Ao:BUuKYkPkF`%BXE,G7Pg@8rG\iR1dr[m"6XccG)nJKH5D-Il%S%RpCT]KoR-c5JE7'S#TA"]MPW[g01?EVJIi=tJ.$hNVCo7G_6Dr)mC@Oh3&6Fn%YJ#Mg4_5d<$VF=&VX+-V]m9rXZhm$!P\lI;%<q+(#oYBhAf/4qdXdV@5UaWiSBZ0^*6VP/1f+m3(^+K4'"1>jG38.mn=$rL)ISl;%IcC>]1M[iWZ%e;E7FfI[)Ht&1T9D&M0Z#%.7=:F"HN5U/9u\_d6NHJ/l(b6m7\e+tER%MUrM.@J*c&_9%K61AXOuQqrr"I6f,lMi%iV(1b0\f3ND5#3cfc%//f29G"BPn2p/j3tU2h_Joeo59jb5n(4[@Yg1R5It3_ihK;)"o#totFG0,Ut6A3>V1=1rre7:dN^.<6!#1%B6VpBBgV+/mG4iF!1'hhb_!J-N\+MU*'5RYI'V]%g@h\AK#qDd]!et%:X8SVU5WAY$a-AH/;7ZAUqkFUV0"@!.5b^/mIc<_f1^@j%.>O]Hn"hsUV/hokZ*9IaVWP.Gp"d%ffT-3b@_AC@"`!)oV$orA;EbtWUhodbFs2IB[']X0&.;b["8$/(%S,$\V0$o;b5:AqOJJ'U%Q6ghVoF`oEZ:Ba1L$RYq<m,dWS10rN&cDLn^tQ;q,Er[d**GXA?9nfHKn#kP:;CL=5ppX<j;L)N$9IhGNaJ`YdmY`dd"r@lWASe[%'m)dMi5miu\k&Y)3\c(D[>)u>JkiB_4LKph]RnG5>4B<G3qIOa\NR])6YB^kVc1][<"5DoIV<H/o#)G-c%]bg]iJ@u[X2R/lrEn)%`cXPc+12hFJ1*9Hr4]JGMnW8t9?jtUl?Ds*U8J+(Xm?A%;Cg\'g:DXQ'rsG4q;g58cV3Jbni7tAI*rpZmFEIpj/j'T"Z1"BVoVdh%B\ktCD@^meVc,Tg[=?>h&gSrS37IOl;D%"'rQ3)8h)KtuJ%f#8RPT/W2<&AXgU7pZ:X/`9ACW0a8kYX>G/rOS@UX-!Ah@lT$X"r*%1?odLq\?0$6-P8C%(CheG=(^JG2'@mD^Ek:q2J>gXA:YDq5lHmAAQ))$o+(/Q%]Psj-W<L"Uk*8lrc3=Fs<<%0tBaG^n*]WjHQa!%]aBqrQ^HJX(7DIefin*``0iO4bF!/UY`^tEV[W`[L/I($LXk94+ArpI$^.S^Eun3a#%[(3A*sXE;TG\1\*R:o4fVLba1'[p\mENN%.he((QWG)g'_/o&i^*f?`d?X?Tp*K7:E?'KT?TNlNc/@9R!d9YX;][.."08@JF.UhJejUC6r7/sH_,gsR4bl?\n>+C+e@,dQoU=>%`_.IFE,<jq&BsB:,^tkN:@UDMSMl28cPNkGbDp?dkA+6U,Y`GL&GsTc"TX;C@cQ0KL!q@<b9$&`\THQ,Pdjj%p,&aSbofWZ$%eY>%l\\,(]ed.::u<B#$Oa3j7kFp-fiKS7ZSKVUPnE&4a.U5mdbNa#c_h<6-,uLcdZ>ISR5_f:$*7QM(?W/-5;N)DmYB>!A0#[6Ub6i2%O#4$3=W!L@CF.Z@r+KG_S6G5,*(\?.lZ`;ob*)it/e`a$YSmJLnQM?`[_;>;hMUJe5&'^<J(G3)mi5LKVlkL&99`8uG#1X4OC[*o%VS>Aqlsr9d,\`mME]fuf'ZFcB="9ro)4=.gC9>V!`136\q6kFJN#@oDOH#IP(9"GDEpTaqSD>oe?Q!Hde@>qpjZ-khF*Q<DETPa8%)&ZP2VTHn!o/n=$L:1_VLSdGM'rb9LOcb4fB4=?M-js[I0ij3R`-k74jZ.iQaV2+ILncUuqr2ds%Q/V!fXFf)MR0s1r'jE?jZR=l%F6d*$e0adcV/aY!__`-SeZc9%G&PtbI%%2e15ZhnFO`AK\RE+rKS3iQZ?=!0?!U^q>o[!KB796[@?^o\l7A0](mU,]Glo9!_^+I&%i]>=R4b3@`UKL(j^No!hp*a*K/)+8=BBa\i-eH88p*WKJEPGciGH?`D<Y&iU6hND(iD/:(C8Dus6:L/meAKDYJu;V#X%:r9Hg>E>%"(91$_b!jBLQuTo=:]'<*0T3[LVr/HXbclAH8pjP>7l)?Z4>*Sk\?j0lbs_453leuFa_I(c9m>Ih\1ii8Xr!=mk+>'[_5=h5Rj:^%(fHTRJT+A4X9F3M$(_Uk`%AbbWlA@DaT^Y%VkNDOO,#iU'MT*H''_YTlgPq@!R3G89%_'RBY98=dPM(/@AP0j[_J-mZj-U^15ZXq%KB&;q@HFnph(jDg2\,V2E#>_KKQ^bBJ)P+W#`:SJO,mTZ*2@4m^p?*VS.cueJY9flf"^4uA!5=PR+Zo]huSn+Jc,siE`hh?]etYt%6>BVToG\OEY<Td&OU=AP?:F/Fc`^<DP%RgQDY@,,Z=he*PMnbT`d76,MGsT=fLf%A74NhokCFfmWR3m?5T0)pW9)T(&As:#C,QqI%<-)`N@FcCQR>+l5*Wp"s\*\+!_?j7:/quH.7ut6Fg>(r?c[n?Z'[F.rd.K=iiFIs#%Q`A&YYmHE\C*W^*E*;XS5o@/;E4%7.uN:2%/:1%KX?)*tYZYi9JPUrSF`j\n&t5)J_s?Rt?*Q+*Qennd4RiQHDe\<!L/r\hr`]7CEl5:1$_"RFNYlZ621/*e:,P)fH!kH!%Q"["%WX_XS@b8k%HVfD)cn.F;:03rCB;;@o0;B6[bWL!)O\MfXiSQ:P0"U\>/=.P^O7YGVeY+VuSaOJf1QVa3Wbp,.;eDV-R:4TD32<`5%6KqfF5$?#WWJ]ML/sXshRUWbtLL+2Q^/>\r'scqfSmKqb3ZZuLA6=$[:Z`l2OeP4N%?Mp_iM"tDL)"kpdgE]ebSVck<*Km4:gjTi%eK,Z0A,/fUh:d^a!i`a2$lq4-n<C<!DX`2#R6fYsc_SGGN+'VM8>YqQ)L6U-GDb592tX"FZ.k&eEH0:".KclRYcHWP58t_>f3GH"%2/@m;cLa65S&U((K8E4^Sl(QK'0iWbr$58$D>b7_]lm5l1bE3K_?*-be"<HfZjUE2Ru6bs]qEuj\CMC[Q>griC"[=K]lM;u_6_Y@%*\:]6_P^]bU(>u7A:BQhKnW#SmlC"JObC!,4\XXOBi!E,5H3M2X4'h,e+8$4T&+GW8TK]^PAIq[8U6WtUjhO\hE=pekFrPXcOndb%f4TEtgFjNj-\C(*4K\:rXieJ#mpRH`rh1]9)%s@?X9$Ki=ZC&)+4EZA9X[h?2IDdISsQXifbHJF.^/;BWp,IC'7REZ:=%\'\UM/Z%:+tS&PNb68RSL&PcKNB6a&gaSD#hu@UNfBgST:gMAaDS+\iHLRmbk2>;:Td.P5Lg"FF(?:]=X_3XesPd!C=X$@Ps]_goOSnI9JM!%Q7f+*NRqKtXesRJV),:m3Mr6?j4m$:-fk8924`UfC?,9AX6F/,a`G_j]VOSgkp.]TeC#csnh4"ll&D=BLZI'el1A`TG!)UbX6K7A%$%&h(Z'rs_L%dO,l1F7T:>shhTC<t`*EZ$KcEZ9,VUMTBK73ROC-'%RV*(+-GH0m9G=2=D2;Q!8Ol*.8e#WH$M-`u\VUMTBdof=)%Z'nF+KJ\%XJ"`=VdbI'tRSJn]lBV,$W2A%EV6fY",,=6%8<Upl:q\WY.GjUC]_::>\+P!,MkO3AVmAJ@>B(XWE/Y0sA8Pbs]/]#e%3^&8=Jp24mH$+Gf-PYb6m5_Aq.\H?.[aj_s[E,8ZNeKq*%%]ffO)d$=M=sc/i!uL!j\hEj;sRpTKW';?J0@K6%>0\R1Yt`D(n\<t%AIW]n'G9T24O:4\-:)R`dS_"MfOO@!*&BS<mVnLtF3L2_F%/nfk0EV+/FfCF;i2XD'L$elZDD(!p?k_2Kle]/PhB:W%_B!d(mEq`%h301E[OE2EbaiDtb@V"8M+(E7B8)RV?gR>IE.4N8X;\iSB5s?Q[8d&R\_QBTL\ab)kZZPaEn?E;1to!<]o^O^Bfg\8=uQq;%)65+%i,2b7]73O%0!$]_g=BcI.Le/qPi>d+:<81/+rH727.%N).*LdU[HE:AmLV_jbLOJ`OZ[)sHKR526Zmir2cRiWDQ#][_qT7MNDPC1%55Gam$IM*Nj*_3rjI06\7E=Jg[A?;OVDHTi3JkK-3G9%XK"gN!D/$8Z<p'M&i3s*nQ_"NiJX+K<='RZ,'diu`eC#4%MKG!C":uk8%^H''*)J)>[BsrX4G\]LQP,R5)%=[,S8<_"ZL3qTr5G^-s@JPg/(d9L#nH?abjiJ#=JDA^=B^"s.a.30KGB`e?Tq1?\+&t?%TI?+^%O07EtI6b%D'H"TP^eknK=?hUS-aGuN`+g`RV*YC4O'a[LYs5[0+=p8TitLhjWinP]KKK.d[pM2*=utX11iM17$$R.7++N7&4+'r_%aa5T4S8`])8U8'KQ_\]Bh;S#M&h$YQ@1EB_`!LWK]5F_$:QT4T)/,nf9K-c-jQ<,h[grk%X'.!SA^C4a$%p.@H@A!Iq,BG@O2"Oo%$_aN)=i]p?JoD2+Xc8q"NSp=5=::gi4W!OjqY!G.L$0`1Q3Z!MLNKEPPBgKXk-@/[ZX/P9.m$0nH<0Bb2i4sQ/7Nol@Cp8ZNdgI;%!+m.X92@FS'Y$@J=i@,^1%XVbH4a*,)]%SZ6"N_.`<H&4@'#`,M6L,0b+_;f3el'Shm.$"%Yo4B>g)*>B7?=1L?aunIdaeedaOQ#%G\,s_)V9#^q#"-;`CAJf\$*fZ*4AftDR=%D[3G_Q4"3=ljHs]V`ec))=aN]i\Zf7S?ln5LGpa[--q>&/W*cKCQ"M`^@6R$SHUu(A%1TnsnQ_Y!*l#eXX4o1T2Fm8&r?_hGYmT$e3*gFjE8-<bim&WUmj-ls('=(98EXL&-nJo"7ea,a)n@-'j`T3DugMC(CQ)]/?5]4r[%<q!CsT>Tg64-i>`c5B^_Xj<AC7"Z1:T3nVsl]uDtO=&:R<FT.-T4Z.!Kef[PQ1c3+Cg\h<eX!)OT>$aSK?CqbYGO,c5BU#,E[5eN%n1]Ld\[h6eF!bPc`Hs6rQW`_5gpl:(@$]WO+]<NJq\mUJ6!mT)3Kkr5S(f<#Um7F9WZc_+0%Jp7g:lG3N%13`!daK1ORoQ!4/g2Q%Q8qSLj0)0mm<id+:970G2Np1>V`8gem7_:VV*)#S3mt?Xg(OqFhJ-Hmq/U?Ho'gL[qPT_JgBs_#O;M(!r5_[+4(U&m+DLjF9Ufht%;AX1mCR'U;=^L<U[oS?5nn9tTRI#S`kEFcRW["Rm%bb)t>*ZO7O/@&F=rN:\@=*@b6]OB-OJEOm5bb@J'&H.,LLr.&Gc"]tV.FY\%W:jq>_JDojDOdJM6:c@3UTSpZeSjN9h^dD:;i\r8>((.UQ*[)4-a-at)Wn_RngY16g?\#!Z1lD'GqF/f%#k#(9@eEWjW/2PXU=R5%LX>>>8lu71X^5g^+9b&r__6ai(s>EiMb\CZ]%#<TZ=hFSIB1na1e^-FrN-q4jCGJ=cd/!HRQE&4!$=NCe`?N:II`I\Vh1NLU"Vb.%h9GP`:u,aC[omuGKVJ9!]fEWb9NXgAH2cGF2-.?7S,3%T9fCS4\rALnc@I9[>Y1/Lh]%g^=r9K6G>tR1:FP>K(a$C:4VQ7a.H!SW%E+(F[AHi.hH\.Q+\eIr73$"CVqVVr*dllUO=H;c#%'iW0lo-p?2rU,47f[/Z+.dMIStc5GLakZj21TYZo(X\"X#5Dcf-s^Ma5iEp%Y6*42J5HcKmKr6GWrNUh!2J@H7o]RnXT=Z0WZ5"BBU,3aXZW`n:c!/$V9L,P[TE]H[0BGT7Q.FO'WB^LQ,\/K+3K@MXFAMpWt%@Y%:KN]RX1"$KPYWs<q#*SU9X8W'$]"Hub(oQc<qpdbTmX/tpRaR4Dbh/:QO`+5W>YNN6htntCAshbPY_%!j(<[R`a=^QkBh!jL-"9u%5P$9><t1[KY2:lr)p75H^I+V&FkjNVg91CkZ_;KdoeXo$l2/SXTBiC><kn0@.-8!gk34YmqF^):qX*#tr&a*<M3Cp=<'QSE1`qh+%>r@)iHnc#lqO-Ld<0^_'<J\#'Wo$\:=6c=AGBi!8Qui4JX6udBPNh<?#Ft*m5&lR+W#g,bTA^(CmSQ+;_:ao3jqT\\4nI:j\UN[]%Y49Pm51e,$<SC%-qC*?KSEaaKkMPa;C<lK6<lPV2f?\-J<9JI?hM$%LXON0!I]f;''_sl*P@pQ1WIEP9X(0KK1Z.>,p(Wr_cLiuS%e-u(T+*ar\=a<VP@IYV<^$#5,9Mb?1Nm"]jq@u\"p!_%#Qu9Fr%*nN-]IN<9F8b`qL]"sN4hdcSF8\k+qc;#8ZZmPKl#dL`VtqE]%*oBhU'[Sk$n+=2HSQ#JDCOAXEl_h48-*M:A/Ger7cLoZT\2XekF*UMCf?Zc`g+Su^-e<5#TB^'d`st,]mr34CQui5uaq<`,GiF!r%q]D\FnN=NaTBm_ma7gP9qO-N]Urno8ch0B^M)pEalXq88CS#KioXTFN54>$,V\?`bFfq@IRq)>lF8beq[HVn\oeSh_n$)EYNn'WQ%oD"?JT2e8+L/1>+\^ELiDdP4]oIbUQ>X.i93PoOJaliMg(;iB(Sn<"8c'-PSIb9OKI]f;gfT)R+J,6^)k$^?3?VWi;:ZRoBWI@@U%Q+H/T)9.q2X.i+TlXr]8l]9#_c!,2sNDK6%;_)VY>X.iN8"5N)3TaR2o7C(MJ*_u4rJ\`"TB`mMUM0%"5P'KZK7"N"F8a<!(NuD\%FPOEUgA.^3e^&WXV=ep.bU#T>*Ar7G8i%OF0b2I<8Q@^X$ds;lL(?$3`13607$H=^?,P1JGcs5:9O50,h'K/J@C]CehE+dc]T?Tg%%Kq>O!ck,V1Ta>pX(,"/&a&SsppQ2Z`,crZ2)A"48TW/Jd5C%TO87O$aH^ng*j65V+rOL4eK`6hl`"mgN6UJ!HuV?B3U.QUK4=6m%B>+%Mf%G=2Vd7b?Vs30S<hX'%q=B`;%\)M<o^h4G_0%N$S(HB?6\eo(7\-a;am?_[\_]Mt<.3VaO)i&1h+N.)k3YEOZjJo32`;K@%l?GHS+*0KgQJ=7T,+N"#hfEl.&BG!W]nIQk]L`N;$_$63ZYbKtXa9AjQ<LU[D@eH6$uoDmR-l1d<6pmi7(%1/`Uf;:&AS/nGh/JE%9cnQ6+e6Rha;'.RJW'0F$QKca.XNBi&#g(g4h`s)+tZPk[gV5JW_3`c%K4LI:$.&=(s#34U/F^TbNC>Qh!$V17`IMspWakp\4GI9%*cDqtj.:-Q_bRu$p!e/^F0h%1h5O_+5!/FqGfG0&PUfWF?XTO5/"oqkr=&lS^oYkLHH<ouhBK1So+%.R(9a<(A``R[FNmdQ<Tm*^%g"$e+Q"&oeqkN5jA]g3Z0;J'[A*N0M(tn]K5UP?KPUb'a&c?g#<?0h=Dl?k1o-TPj>[0$%kM<B?G'.+Y4cPbRJVrCYiNr"\eOM8t%@IXQcTPM_qC\9_kH-bWr'/i1o_-'_Ae"7$\H('J^+15O=Lp0)eB]GY&7mmX>$Ol1:EZ2R&57=7*)YpA=k8k<G&WoK:LV<hM'pmio%2LrMnl$W4-^(s*2le@j9U/*LV56&`Ppg+lWke/r.k*cc$:u+s2)'fui2OAO-YImhXoq`$^jb8&%-s[*/08qPRdKMsW+lo_Sa]NG.%W39a>H,`Ik"Vf4^n)8h>+f)cTaqF3QLgUi.2Zt[6RZk-i1CCl`Igj0]^UkcD[fP9_^EVWX3c7<J_JoWSn\Wa`DSs!++BaG<D@,s^%G]HVrTs%<%FR]2p$EH9WUrNT^f:?Ua>jhmEor'O3Po.sZ@k<;ZR3nZ7NiNf:ptgohik_T.8?!F>7@60aX![6;?m@%Oh0k;-!)"`U%P*,?Y5&d.SPD/o/%@)5YHI9roqOTbY6'?RJ;/3g]Y,TG$j/4GA;;ZOV'j:%)&/m5Ql.Q=5$6QOK8*T1tM5L>:BI/=-Zhp]jC&@I]%VL>i2@m>WBd;]3h872E>cUA-.3K0t<U*$]gJ[<qQkf<BlJGn_Zq@`%<Nlpu^5BF_\ks@L/H$H@*^@\894=`!9[%tk#K8#5K93+&D%,93Y$'(J*ZPeS\;euMH>Fm(F3DTN7+k#/,tc&',coO#j_&-GUX%s8]Pbq#S7!b.@K+.t`J@6!CUnF^o5Y=>>U^*4!gpJ<5.02cEG%"A\GDji=re4mU#uC`#nF#bqoP%4^b"50PhP,T_1e/\k"/O-TD%55V(?A80R#kb;-E/u9A/JIHk=,#E@UPU[ucJN;j^5U-"5OAlH!%(<T2*H/[?"Bk_b!?sn]EH\ta8TL.q;<rSUe6f>)L8qK+,ApnW;Y0g\$J3.Hr.V/5/Rg.n7DF$]('NERA%V=uR/<%+*_.mLI,7uYC%p7eQ?&TA]EkKVaeA.gFK:iU'g=t3Ye>[ZN$f=5dg]K2[D1;R:kiGHt>\er!c'[B@c)!1KkA(9QoU[&pN]I[DB"m%$JF5Pbb@da.g%$g.6g.R&qV+W<q%Bh77b<TdtEJmT=(e7YNd*)%snOB.gtcc8mU5;f=l"o[6^b^?V48nl!S\;UXP1"S,/,d)H;"D$W-5j1Y?Z_OkR%fA8D'R2"qQ`77d.#hlYR"8\N>+?*Rb7[=iKY/&CJAVmJ]*<T7.M4"1F<5TpCVd:h%E>ThS.\eGWd/;g-jP\<j!`VsuTp\D$,JA(#%-`;qe0"<dXSZajpPP0>*8lco?EeXUbIqoGf7WG6s`Yn*I1Lg"7-il."c+s*$(39r9<T:$Ip$WjaBI!gP/PF&TmTC^qNo_d!S?m=]%9s^J_35b?M%7WC!P@/FYccRUd]Gpst[oo00@_[$Z^ao;0dfk.p2!`Lhk(0$5RK,u4SA2DWCXcu>:QO&)YF)DB5'K=j3qQ^<Pp2un%?4dI3CN@?@Rm040^i1+fMFi[L$YSQa!K?'p#)3cULI^:l+p<?fDfK:]+Pi-)/9p1ba2Y`W5dY`#`;S5*]LL-Ln,Hk]=&'-6'(R3Y%@Y5/3O*WUqQuY\"HIdhg<H?M3Lk0mX6n+i15r)59;V"'_-fI)H2H9P)$SZYiTn-r3Tc=aJn.@EPP4>^d5N8k04u-h(!jXroHLn!W%45E5qj1\S/SB+JT&Yft\U3l$-Lfn?a2sTSDTP%Ke38l&2#6XtbURstp!.H$t,]rd&F4&`3,7mMUVS_p^U0A6nm3Ha"5F)L7h.Mh@%T)'$>5+,nVNb,#<T>JI3H7t(M#cY<%]R'fO-=54bSd!e>E[<I!?-.c`pf:k@Z]YWF)C5cgl'9>A@P"0u=O&:'!Ji88TCI`]"A$j<%;9D^]l@nktTO>TIG.J5fi-2/'&/$bf$FI[FB[Dk-@fg&S`C?*jX[?]O,JJVHCZIa<?@a@M2-%)u&Ho`,CIh-t]nOeHmmT5BLCE8E%/ld3c/nR[d>cA>^;\7iV<sE(6!/QcF+P'KK5p3N7n.TnDo0F?4M_d\%r&^,IjVjbqE,eK/d*pipVmXc\]c/@aFqbD6qTF:FEfs6"%^Q^DTJ9DOk!s(PeYPINCTA._F,o43n5X:C`J!u+COafV4KLL_?K?XCDT$fe68fDk<glnF[_o_%Zd-(i[@P9MmXT\0c3``0^!94G<%;M\i'JQS1o]mLB'L+rA0+@=@7M*S/gWjP_iH5;kIKoc0\g/Ud15+s"g:!2j.nJh='-"GKffcCaYdjsA'ma4(OA#:C*_nhPt*/%oI%;9"WcnM$ME76m(mV?Kh<(*b2LUD@;E;9"X_#)M,,X#();[R8$q?$$T-q*Kb!BW/m/iVU7h5l]Z:&1Nl5[`XI+3"S'*#%5EW<340i%KPKF=KesF9B9CG.@h?3W>>SQC[AC7O0FJaY7WG-PR0;c6Q?jf_JCJ*O:q[^g8A3'%Oj.I4<$C\_dc\mN%2E+[`Th</F9N?hQio.7%-DZeLOL=,n6]7?]PV?76LYHC:r"r13<bKe48m+cQM-+/hILmYV`tO\=]+@)tg#8pl0H:?+klD@,i&EX#nNq(ro*Qr"b@1rBSN1ra%==LLh41XY2F8rj/9:r+j6N.sZE3(;Z1$grQCa,rO*C'VA3?rR'XBZb2h%PV4==G7`-gr^oAa8-Cq^d5n)Cqg\/KQ&s1==O.s'<^+%%\>"FJiKpYNaATYSG-Ma8<MbpTr^FI`(iK/JO9B2]u&MtT^CHR:^f`7lk0%"_j-/:%-?m;eS9'Lmcp9Gb%og++Z!S3.s];u$^da<%F0$__3H`5G?3l[e]'?gIF$Dk?am'DaLcMeP2Wh`qQ__U8%*H"oJE9CI%l\7I[n$Yk33+[i2=Xim:cQ5^JEZZX66OX0Ri(72PfZ5]%1+T09;%cIR/q_R]\6XTlMS_ROe-P!`c!!rK9+@HMK,6/7T$(^H,ngH%<qGD,;_(C#3R5\g=jE.^<!MLE#N<b"cdq$b*jNf<-sVk[%i9m[SP3b>.fLB.$pVT+S*k2floL5<*\$#rKPr'AgbXEL<WQiH;"'<tI-lj4lA(9OK0':I2)NdVaNeV8N-u`P5'QLNhCOsZB'^0)5%hlIV*@pk(!onFnf5Hj=MYO7Ijg^\pm9G4<51_)O=i7SJ<m"H#erdgMH.adQ=jHEAOYK\@%K]a^21RNt4ic'UQ>o#gn:^,#7At9=A%aXraMf`41t#RnR/N_np0_%F1?]6$$s'^n"3;eL&EVkhi"NB/qo=C>/^.p'n[9H;3AUJH,/*,WttdLERQn[c+`"%5p-+TV^CPs=O.%^jrP,g-o1<R\#41%Q`arbVt?e.#AIhOb4/$-fB$nGEoneUoOoH>CN7bF[lZBa@-Q*`/?g-)<c2,Ep`Noet>p[=';f#?f&q4MY_4[%(V?+j4f18EkG7Z2Cr;OH/h,o<5GN/OpS*a:n$-kHq1f,c@Zs(o?sia^Pa;m^+\s]*fDCAsR/9Y^PX(jM>o+Fbp*6QX>_0(uq&s:E%^\mZ(=H:es*`VSj=9WXr(L%Wm[WYGT7T<;+N^:pBP>]OD\DM_oWZ"FDrF6A`/!s#T7_RiK&t3<4<XlFa/K.V(q?LPA6G"&t-sFH@%:XFO]-HSOjbWpD2-@EH?&cHtEQ_fZ^U*@_10?Ct8^+F$*bp5ndXZ*q!fKH`4EtOWp@sJ6-%'L(r<p'dIZ`47hi&0G@9"^W%9ZrbW%GNCOiPPnQ:+l-++7VZ`<*k:i[emRpXF"c51gW#LEH42FR6/2(?'csW3Fd?VWU36^)i_pGhN9L:OmTmHkWc<1??Vpcr6B`bJPrV"r%>QUTc/l4g%9,$ND&<\kE;[(E_m(L0(hu6fFSk&?V'fs.S4*mF%qbW0:/PEB#aj7?UGi1Q0H1(A"jVsK!]CB5%7_8D?I(PX/9/SKn%Q!]"2QeU2A^2RA:3;]WFkMGE?]JUHiI?NWQfCPWXbu+em1RPK#nr?gICmrB\558+'`1Qu"m7U<T_jsGjg1ACE?i&s)?h[?/r52IK%(U&8`roKu+iVW11P*#X="AZUdi]i/`H8(PHVQ7/G5Q'J4<<@[1V\fFsr*aaj\:.5$cO9$`NhFUV)"2nD;Z#\N]8[dn'Kj336m6l4%pla0p5CJ#oZ"4p[I>:2S&-#qphr3Xs]S1cWla$uL9[tT3KBha3H[RMpE;m>;9S[](YE#dhT;Bb]otaCoeQ[O<Gu=V-i<t.K=t74o%$_/g,VhA0e)IQiQ"^%dkB+2'+5X-<)h9GBOS[Z0hQ]%JHk&.*jc?/JthR"rl=[cJ=^&3F@$W5KU<sjUU99t2)c$s&EeLF!J5fVV#%ms`d#/7?jaZ:&WP/iHsLSp^G7m\q?FV/t`9>ZA/:I4(<9bakqE:D^4+2R8j>m`(;0jV@RXUW`FGUGs\'\_d2E]Bilhrm?;Mh2AJL%olbL,T=pS^d(f&2?MZt=rlZDE=QoDM]Ah&?RsBDS7Ws;h^+*c0GHQAcl+c);QI>M[T?fLPm.-J:`f5([\hrK^++8+qRm5`?.fn4a%1X(V5F'#!IK5VEDDKLbGp&8DH_!@?Xs4k4i"Sb&GW;<rd(drN0ZAdX#GNIiM3VuCWhE,rWZO:]A]DCUU^Jp$$B*iW+[H+"]P:S&p%s0j)",t"[0e$F?J<-l_dRb."VF1(mdqY6KWe$F@ueOeb=oM<fuSIWsF&c]6,S^O?B#:6PC>L"jdQ)2lSI;6@IIIn^r4W&\?nP'hS%bE"l7rDUV%4oF9&39Rn,]cunk4a_3/MG;F3?bIo#o]qZn:Z_MDLj$<0nGZ5LcI/':h`eq\]mI10>OHn8MgQ7[j-&=q?;$X1I<N<B%4j?4*pfAO/DYO,[RL/B(8[l*Sl*fT0UjJ"OFmRFM+1rVe2f`G>;=4=#%:'0ZY%7+>eQ9.nTJ#d+o0[[3597pY'b^AU+W/1ggGa6Z%HG?t4M>qUVOldYGUbDR\h*8uQ(Oepd*o.b+n/liK''/LG8aQ+qHf`+[;tH%TQgRJ]1Zqjt4-)lb:?-nU(Rj^#If/b($)`NJ^YLc`%0V$iqds6N.]_km+Vt@!^(#R5"qkD>$TQn3:a%,Br=&'iOM+)Fe[H,*c!No_,'JWl#!\U^p$7#-a*1,8[p:bl*$hg\E5QC$I[lug@%*k_=1]:U)!\C:EJ0C>B]po=?=jXYbMiT7cD<L'9UJb%?`/Uo2QXQNj&1*kq%/mfWh=#f"X.pq*orUnh.i;A(bXtK\Pns,/s`>619%Hb6ui_i&H10AlX(SgGY2roD=JZ=2Y$pP3Nd+mNQZp%jAXh[E"n$#$3"fVH.Qc+U_JRWi(UGEjC]U8TL!q6D9'h-%"Jf#L,9<:S)F%UO:#`l1J+al-b4)Mc>QdG@b=`@d(Num,8<_P'EW9\j&FSl*^HPhj9KAb3kM`9t:##FRb!)\'gW3IIp;)=m];2+(*?&cJ:#(c+J*V%$fclObrb=SZ+]bKR'WT1nScV*qRK:@@J?2fB$,SjlT=+>HH@<6FnG5T&tX:6UGjg]BWlg]peLOZhbH1,c5R:8aLug+6Ij_oaa;s$%]/$p6McN'U-T.pm&'gOADsL;d`$e]XYClGOnFR,qd!#-9$f>*&_kep6]@WV]<gS77?V^f&;h:JW#/0s-G;"Alld`K@mhHu9d_A$G%o=6COr7=GjYPNP+'I*V(^E_%IbjkU2)=3?LSpYYOmc2pE_3s+t;31W'id@@&87',pAOkSZ,^0`4>RB%MXPX_"Q+:/0o@lV`]c1Z=%_"u59fhpPNq9.$4^"-LMrnAsjm0>;YB6Ojcc8b-(;:\03ZV$IIkE7'L=4>.YVm\(^LK*fL8F]SL'g9K]C4IVOVVTB`C&[ZFS5f*@%j"I3mrqO`#K?l2/n(`:FcgUkB%9(UMpkf`q?ho/674G5-Y;)7$Xdlfd?5:]F/+$DF5C?Jr<U\'VVK;WJ4O$b%#;=o8ii$$"0Ak+?%EVo8XH";)];h-l$m*`H="J0mMaKk^&-s\rbm`_t9S5:Y-=Yb?c)2_>%Ja-C\;V/ZCbrO*t(RXiEhol&mk4'DBI^o4ARpWlgI!"Do%pm8U2rV5(E?WLSMCTtS4>]:]arStD;mFT7U]hs5AY\LB>qt,"[S+aTGXNEHpS'M7fHWYE0rjSL-rq<Rr3ocFeGQ):'lH37<Q0sq;%3O"YW$S!EFhT3;fgIHJFH9]G(0>HBBq4%-HUb=t.k**-gW[\h^4[lF'0BRrL[FZ+k-XW2&4QlW8or6lgJqMTCQc,@u.?4=J]h1Jq%qWce@7TA>.nJkIJ^&NEMp/e_0b8NE5f=q(QK@a]/R5f5,=19H&l*ZV%o,"C,s7H!1P'jqmQ`oT&oZNLaaf/[7*QmlGeCk/<X7PHH%PrdQDO=fVe7[EW.+6Afl]UFJTLNh0NYKDFTQ_2#G[Ab*sWc)sB0Ak%ef:@9R)(j>V?C"N?2nL#9Ied1H`L$<+#6+/Ih2Qp`qmH(X%X7+j[=*R5)^+Q;d\+6W8J+"i&f&\>dI.?M]oM^s_rr1Mb1@g.*gtKS#Ul+pkePPA,fT*n>Qh?Q&]Z\#ueWj>L*ag/Iq]:lOTV1D6%oXZ-bXUjHt&?b9l06mr>@/oo'-^X2T;d=liFCoRTc^-<+<dj/2rH[1*ZgX%[U\HX`EOTAakArjRb<b<5dJkB8i;.5U_`p82n`Vk.%_pR"2;u/VGhoDq\TC-%WhfLNco(<Ii_tu%ci<q/Wh1"aSe)JG/kk'?Qd07S)I<R(3\4bL#s'@lZ]U6t9?bbZOpn03gk&l,*s*=&B%n,#D]O!W7mQ+Gct*-:!7<^&"%bLaSlSbMlbqmcD"2)1CI;@%P&s7p[!p6(u2hYUNtO75c0qG3r<N7-VR<Bghh%T>U(HLok.=9!Ye%Sh]NFSe@+8pY'0XPkk1DB[tG4pN!Kf5E<8R58;Y>4STR>MKT]7g4'r6ks$6.k5Y9^CYt5%ogQI+geCp)?TmcF?]Y*4JLU-D&+jDn%:KPa&m[8%oRf3*;^GYei0ANkIEmL-QiGf\5iJVd5"5WmhI.mkAn)#[26D\ndO53j/\eP@qp)goK5'=bES/ZtE[eeKJ7X5Ic]D]M1%#Lg$g]7*n;_g-.2h/IW+K3qBFr:p8PhgGCIGDB60?9,N=j)3V#r8$E%DuKIla[]/+pZJ%'5PjL6a`frk^3k1m`eR'.n'8hq-]buk%r8b)p83VD]ELC&i6anJ;HeP`W7VXm^Z/#?PcC[:FmGZ<>1nS)]h\gC<]CVKH)=W486`tq9lFDiAICA3qo:,YR?iFPZmd`"aIsCD(%]D$68]@soeo^eHJIF"_:gLoR2B<PY?o%*Qa-XH=g($H!6oD360h73%EpYLAZS`Qd8o:8rIg"lN(Zi7.HrV6-5Rdu,Qq:r\8_#<"2%Ej50$QQTQ0r73NH/idRYJ*tHd^N_7bs2k4\(TorL60@pMr6HnVY28C1j]VWZMfT]L3OsV,l?@aR]:`XL.3"daq4m)ocYq$=0tBZ4%FhI(p:]IT@ntjr%[BFVCEkoPQYjZOj8pi40$AkT1F"(=$qneWAL8RqddB8/_48pq8dV-AHq[6i!I!jnibP6jZ087Y)Hu+<2NBE*u%;fk:VDsbD+">n<pj00?'<_qDeilJUd\/bG6(NJfr[sYsd6BfZ0[u]JlDnk1cgUV-)fBnVtfu]u+^3=\0Cj+sFn(k\"$qP8IdA:mP%Gc*WtVY9aJBZ)F.q0sI/TD,bJ]O&>$3$nl8]8PhH5J;D4O[W]&s7H7q'koo.io31_r]/h]hf9mdHgil^qMW2'%-W=ZBD$IfrqH0^%m%ru`ann(uk:idjJ)p;N&c%2nX12W:;'erXVY'00nmA9JYJ)'"QdiP1gQ-QhMq`+"g0EpI=)g3ks!u#ch`a_BK9Rc:kD]+1?h]?Y%4r\;jpR=C$cQR)2mk\J)`6Dg',E?C'B!V$@+Pua-nXK9kfA)M;ifDB(1G>oeN*:W&YI`K0F>\*KKGC+8G]!*BLT<tqq[5sE+8efO%iCi_Ccjpb1?ac>+@f-dYJ,9,hm_O/.gukP_nM"%ePDM^gf=nfqo1m%TrT6_tS>>4D:B&SN;66"'Yf5AsPl0.MLE)sW%qBB48*=:U%*SXAnHsAl%GitN6buJS/gbcoMmmpmISMjepn`C?lfp^)jq;*FCn=kB7X=HUF_3q/$K#HWuU%#6g"=c*P-Yna>X)@a\!qmT'Ze476%>G9DLBNiimO(/.#qC#D<b4O0%fYs+ohHG&Aq<5fLp#=W15)V#"(LFWNqX(20=*nocV\a7,3q$?2:L4m@Xh)#ls5"3.n]ccfW-eE[%cUkFm^2d3bD/GU/bq%n6't]U-;"MErf:>f(s62gNp-k@!TL+7kEtfS-'"(g"5QCCp<[7=*'=(C6cM1dG4otHV.3EAlb<XAP@.W=S%;a9)t?`ed'jh!bJV+o(oDI5:Fh#-D($K:GN#f$<)I1"q^rRL2p+G.B,fR3o8Pg:RJ":+*C*e!bW$OFSAEY(Q_..Gj'>.sQ;&Ad[&%5C=R!E\?/FnW/)+VKgBns)=<J+R<V-lfDoKs1m70"UH$B.%eGB%-TWuqg7kmWf(NRTYC",GIRVOmuK,.5&3:q]fbV<\9R+Zo&(8I%Mc]rB1j2Z#f#@5Fb;?C#&K\;3dJQk:C4EpLnAX)0]!ueN)-6L8XmIX*%aP+%0)iA9\T6d\>s,/V>cGK_Ip*X'&*kikc_/SONPA`.%:jfQjnaQ5GlRr0u;+V"1;Xt:ln*6Wq##Y6>-u4=g77%gNT6tq_oYU!>NiI9S/pY&F^[#4:BC0T-VRkUFB<ndLS(4oZnN$p<J$k38%J'cKEm=L>r^(l.bR14g-[b!t>8#Hs3cGB>62i[I!Geb-?<>XJ@?>Xo_fA=bdIGs/*lU+`rOOdaYGN<D%7(VsDH!'ITl&Q`_g7;de%HTUf%Bd5c6E)Rb.b&-s7S=4)ub7tP2"E+kO2fU>^$dc@IZ0ZW)$Q]=J[d+t$^;m?/G[+PCLg&]U(Hek'GLUsD2S\0iFhM;TakL1l%\@UPElB]3NJk+nMBALL.hs?/XDmLM2"K*?3hsagiVdAX:GcK#kFaWJNN^`i[q-(g\4?Z'Fb,\MIc`pg<eZ*YZoQ.$6H*s[=0@-V(%Fd^c0ojc<MYPRM`>sESqi4L$R4a?;)a70/oi;ECEq=)MP^\h:S$kM3Bo(=s!*C'J:-U/ZZL\h%>r;Yi-Vrb-Wo3iPlr5Tr0j0&qF%PdZA7`P^`+Lci1jj2[d1Ie2ddDnc8>iK+"_pp-"L^O,nKh4'0Q+)9O8\a:o&(G[qoKA8NfdmZ:)HB:.7E6oT]aT$JaJ+EVeOT4eC%6":=6ir<SMhTgWMlS.^prpYCIgZJ"]_nUWV*'T\GHuRFirN;WUj_u-l>r+)"iG#0ch:+:GE9`cqf.HT&f<i/8bT0CUZqF%dl$)a)%oS8J;!\MOQggTEFg%Bt/0NpF(VKSBMYJsk;RPrX7h(gQLDDgn:;1=f[D7>IZ?/+_#Yo0'pJ(LQ'rf>E<#[Ogt/e=DNJ_GD$cdE-0%C%LspdlG0<n4>VL;tk_`*f^FJb3sA'+mnE8kmkPqd-\h]8RXfUL`A*a[\@<bc^qS*%R*#0KJ$MHGJf["N#*#.IJEDphgG1kiIs5J%]^[BhnH[tOr(u)O,O1#'2j^-5@CNW8,'K':>tWB&[,\8XbO[BQ1=!dT&u"I8g2<7s4;qp:KY+C$k"HY:U[!*XQ!_cc#$'qFBD%3V%ZYS;H&Q.1/;B(t0CK9)aoXeNclQIjL9JH`p2"-`>$tZMV^UpJgZ7d\-I\pr5]pbAZ4>krt;bc#j85[Y*@q_)!g:&8Ap650L"r'Ob%]]=gd2TW!6HqI/O`%/B+N$pi.iY#9uK+?J$g<S]`Wg@-QR+'0sei,>qBNlA/R&;d:_]_[Q=2QpgQLf!_ZETB#;B@[<IG1HQ_"c*:%]tTL;IbKOslq'Uf6^RI1Pk?_*C7mptFK(=r)X*9g@<NBZ=62S+E)PC9Yp8]`S&)CdES*hA`<J&KWSOsV1M4e.Y&`fND-mR$q1Pi3%hZ(eaR<D6\"Oa[D(3,2t@r?LS\.0Tmm_l?Na5#ua,,\2?fc2"lBi#a4&Q5\$RFLunDNi@jZ&UOo7%)^3GFeSUZJTfYM+nP2k$L@V%C]P\^(OHMDC0=5iNnf\PjuVhNkf79o:0G)0WFbhfLKR(-KMdI!keKdGDO)0EQb7I*L!5[6B%Nshag3P`m/'pk<L1PN(;cl=C)V4R%,U*2$<e6GkB9A.,@(jcu2oK,mM6f#=/(qBg.5L2lRnu!IP4Cdf&hh7$X?@MifheT('hOZ"91O^bo>k<Vm!$\u>;DSlKVaS?"JHZb%$A!%:-MF`Gg/cddZI#o5Nl,aNMjlOi?4^\ba89X_/%<&:D]LsdZZXuAT]L=NZroFo0lZBD*2:0>s6o:OIrFL`p0ThArL_",nD,)6%k0PsjA$SsBWFo.rJPQY&9pr1K]:idO)\GtS\ZLsN$rc"]kFlRmXCV,gYETfP+6B+g@YK6\b9Sg1fSKg"65Va(4LM^o,SY,;*CNd3%hn5:YQ\(8TA).JRH-aTc@S$'&N\EL;%%XZ,ll&0>U,-6tbaH.0/i/gBT(J$RDJ`mhH#Lo]3-)+L6HW_++3*kP6,oHHY9dj3#JuB+%>r@n<n`$"$8Yk0%Mmu),8V)GqW?gFt+#N'^C<B,F.J,r$@AKQq7'W5G4,Vkd!/?-/0W38eB?aa`niJo-a#3sb-4bN$9Sj'%luC!h%.henD3Z>cSrM37hTq`o[STscpeO_;!?'\eR4Iq?U1X4)e/Y9io'+(P'8?rX0]pN8V,V$gE0p+N/-?Pjl'dKLo=V%3#0*0$+H<J@.%42oFN)_,I^K!iEfi9AJ1,*0:'^d>Z<2E=6`p*g.;8">*ke,]^T5c\8m(sNLTfn'!4\m8879W(PV:U5oP62ar_NG+L?G66=`,Z?pR%U&%irgJ02UPQ7#^Z"!/:dO8VeYbb;(:(!t&Q:*JhM+)87'8FICS0r/N#Y1n5Ys.f$X:lVkBI=O/;>'%]kDd2CEedsH7%G,e1cs)s%-5?h&22RN`P!W5idii:ANnFVX@P=+XNHDN\S`:0uY%,_qZqeM8'/D@^1oV3X77\H:N*W?H9lMML_:4GU'k.&/7G)9N&[Nfn:rJ<7%*k`uF;%Ku;m&l+Hf7Pk8qZ6f9CkF1AQWc;:RsL*$MsQ%pO&ejY&ft7.?t2/0Z@$tj'F7"AkU/n<UBLsbfsZ%#7D`Qtc;/fOF:ABc%O-2656&LK=c71)I7fNr"Ad_:g?!u*O0@c>$[^'u-jek[K:LQ_FUp:"q<m[*-6eQuF+Uo`:Z#:[KGZ8Dl`Beg>;2PHck[fu&?G\r?%1l^M,-`.I3V"a?e6hT`7:C`nc*cVl2maWoaS9b^IH51-@NKTj!:p@;TR2#W?4K&=tU*KSbd,hd'gNIA*e]jZ]&5%fS>Ys:UpYE.&%8AYNVUpBH@,_WHZ]:]q!=e_Q)NGDcqMafl_.M.39SA`3MH_Ir'd_Ji_Al(E6]4OAn-(:6`@%5`EV/9Bh[J[K*9tDZap"EhAaJ;]=%$QHrBWDAQBC''/mrfcKDmNIN#h3IXHh3EtC;N\Q9GNNnr_PR!94@aTQX#Ad>/KVt]2[dbRc8"']:@)O<S^"VH.>3O<L+Qi>U32Q;%-D`"X5FKl-j"%G;+ikN!";t^VPDZ.ZAeB%^X-CZ<P>6b*+QCM#1).!s6SN#'+C]8A.Bs[_gI=6X(X@3?c_/*jE'f1Hf"TFaik2f3%#E?sf>0T-Z'F;@r-mbT?oJ(*6ca>6eOp4<]LIT,3@Be\UPT<@,m.OO!Qr3<,I;bQ3:WF^pT$@XpVfY[CG,Ds?Vd%>^X-Jce\6('V%VhJ(tr]+)^'E:a.-iTN5-iTN1-iQ-->:'88=r0rdMWpOiVWl`Q@+soj_ml_)A3sQ<#mBTeJY[E#p4Bls>!1Q]4Y\%Vgrf`P>Y,%"%Ji(W$6E!q\S7aE3ohn;CABcS9>%j)Sb_:1=ISh:5N-%s[9GFW*)](qY.6=nMN^F8.&_[50%<do%UpJ;[9*'C&fhCJe8G40Hff`go%70lmB70lh,;Og'#<MbqE\#66j,(r,qD6h5o$`cothTDsf4[F31bB-C#=<ln.68)hSM@r6UMM_P<Kg8N<?nX3a[J[I39NRR!:CCl:%^@bO@(38+ACYM0ipM/HN<7eQ7Trr5;!i=;IC>8*/dV/AigR4VTQI;eA9m2.@V,_AZlrLO][;\$fqD=<t83N15b%G>ggn1l2PrL'`%@.Hp][6Q%aHC25r?n"dUfobTdX^&=n'"o8fZ'@R\YuE\)(?L5!9Y-XjlDN$q'3$%Z:jjIclIcPE^R!Yu.S8quWK=,PW=Xf_OL20T%-AgJdV,R_#V,R`$8u[nQPu;N8P`f(4;Qp8"Uq0Ih1C?`glUn,fW_-tN:ap6e.J7#GPk9>QV.j70gO9Vkc[4F;4Kl6UH/]]-Oj-#9%``4pb&@U[jjVM2=-'JYfPZ9Ji!6GA,8qt#E1,b0iWS(c=[>3FF274:H`X#(Cc8,hYCWUBn4dnHY7B?SO<$1E(PHBEP3]jHd/L53>%WeI8ENb]g.XG;*m4ROpe,gA>S%o/c=S7Hq:N%I^6M6R4A!H+im`*L>=JJn:[c6OCZYg$hhhKi>HDmQju%agM9$_`R]1SKg0gMnkN%Cr]Na.'T/_agL.i##+Ek(EKiI)ZWC'!K\H\!-/JMYW98j"UA*\_b@"q@3@i6JY_RD02R-M]BrSGm]Da4mB%,3$DM:eCIQ$XENS<:%la;l^la;mI&@`%i$?.UK-W!o?11<$s&ee<P[oUQZNMK^Z(!an6elk,(\L9-kaO,;o<$6gVia<CQ5rhAsl4=g9+Y\_$Na7'#X$G@2%^7ipm6;V#9Q#j(#5EMD17dF^4FT_7H7A!(cU#_pf8H@k>,8(F/)bEqen4o.4N:t2rRCT5h%_K(&do_=[q9M+gc@g>mS]4[^SYfE>%SI'(&8LCQ\'"7@B`R22saH.u(itmW21\*u"8Ti1=L/lA/#Zt&WUl1,D?r=%;\"-FF*[W51^![BpH#Ar%'db7@.SNP8H\I;J9jRWV%/u5MQF&J,o(sT(d_g^CYA5Z_.9'rYJ7<X83[B%.\kJU]To0L#7q)2WG/n@kN/p(Tg0'#7Kks@>2dY1AndtM\n9,G0R03qs9<t%T/%ISQ3b#.e6.%s5]=*s_udHQ];:faIGa(=%)$Dt_=E?+VR2AO9ZllIrp,;V/(o86oDaOT^WT.O/NQ\r=R.61/Si,ruN0#Iudo.T%PB%<MDaOgm_</LqQXQc#]ltoj]!TS/,!C'(k36,fkA9_rom7*,IE3g?YYZpmh2+0;N&-QTI^4mjCKbcc@g\*bXTk^E6N#<W8%?U^@5Q%-BM1]rO<36f(.Qj0rZeqS/0Pa`5>VA>]!d+l.`efPQ.dY4INE+nau4K`7$ZG&l0WH=O!ka_d4am[P%+689Jp2m*_!L<H5*9X5[6R%WoDZ7EngDgDKXASPj5&=#iVRRriAlK`7OY33SJJHXNo5+Ob51:Q%LT'0L./0$kNO%f+A*j;MS#c5UIlp"Gd'k*&/!qoVpOP&-FH)%CaX5C.R<!OY(7uP#<bmc1T*fQc%aH8\Eom(`AJ=06?*`F[0pcU1L(7pKHMfnRBX%/M@-*Y>iCXgLqkLb#h*c%:S+r1DqJZaDe9%`%BI1:X*0\o9>pm=N1c][8);YSAot>['0S/)2Z*DR+<k\,^3s-Z!IU!9BZVf$sPoW/q*"&\n4%;1:ZZ7;5,WugMd7u0S\K4*I;nX^G%Ca\np^bh:%c8O,g(@#mQ'IL*KL)!`U58-RuiimJ*(YEPaKs'6?'"S^o[i5*9<rr]B&d$1.KjH1/fg',W'$(>Q!3FU>0V)TB$a#J,%VTL?kA@Gj,#jJjI_\B-dP<sW0H8$dScmoMoLt.@hi"iLs)"'4].n1YK]WXU50!SSg,j/i;I&1n$rPWG>a`G$iS/BcZ,/MVt:7Ai,%UqKG/m+ITKk(4\=Q=PU*a5k4C,)@tAKgJla"Mpk*+F!pg[T5CTWtrbsn#HJfgW)+5F4;[;bdk02K&F[M$T]!%*/mp@,Oc?L0.3Ht%1$p9PcR/D)ZXm-9V`cQUkqiZYne,U[*j1oEW7l"9l;n\Y#WT8NE-."9&WR2$o9i`G;1p1ZPn;8T?A=+>hq:L4jfZ9jX.h0-'hY<S%*^ESG2LJgCa.@Z:01Sei:WkGXHt96bC[qQ?3R.c1CB^`GZ"g?][5HPGfh<t5%L=LaNBuhQ$LK.MhZM$IS3*/'bUo%7c5\d@e1k.h%`"SkV=;SJ-hNuN2jldEP-TqO0pSTpOp*][EJ$hMKh.hFS]@Ho1G,tQj[Jet=c:/l=YTrMh*""bhg$q>JjqN,5X1^Y0lFi_khqJ7T%<aAnrm?R%H>6sr9;U>`SQU+RYU!l-'RC0sM_Ou'aG%AIYLbU`+:.uP8=sbR*-7h5DF('V2K]OHm(4)[Y-Gmd->/1Q+"ROQq0Vr/l%Z\A=Nc"o\SohrtOb?FT(bCl*\?RDRdojpJTp:a5AV#&7;q*);\/M^c-AO<9D?RE"6X.MbiqT05s:PPQlcH4V/dd#!Y.EDbUgRkWp%'!-t]<aR2TjL1UCV@(0nqNu%(^CVk#^CXEWIN_]&rhL>W":pk+22#<bX%skN;:*BhIfaU0G]qu/8bE;uR8ACk5XLS.[/.Rh]hn"%%FLFOToi5mZ=t![a!%6*5<MD74<Gk#1X5#lPlJ+Q:lJ,\oQkH4?7P8fnk3HFGCtWboSh97hi2j"%__oEEa%8]THrOJ'4]\lA%S5)K%<<<3/[!PdS2KDZ*;H3f1kq$rdi1uG7oiD7>"K_[>!(h,3$mZM*ZDnOV,l7CP=k-?GAQ;)@_eplDZ`9^06<ur]8S:,apN:"'pT)AK%mT5Ou4R>L+o<=+2k$\uBc,2RtR`E+_LlI",LH=i`-HE8m\HJ[bHffblpWWSBg_355''`P<:F2FRjLqoW.=CsCm_q>*jHEgeI_B2t%OYq4fp-E"P0d&lS(V0_VCK\V>R8Cpe,QqO-X13qu:fnQklQB-k\4<]rWo>'T*'S%P<cJYJc!G/\D>1k4<s<L<]g4f4TjLM:'@q_=%-IidNKR*^;YR90=Z8M\@ns.#,HmOke=)TG9lGZg<<%eQ\hE\B-%_@pO=45b3g>5dpi+\n75p2X";(Qi$W8GQn+l5d6eKLN3:(mdc%Y<k>a9F15>`8_]AnR5aX`l#(hNQGohO_#7Gk8DjEnOb98IRp]#--(HL94gL294l%%Q5od%/3+3@=>COjZ)$/`[#-0_a;)n74K9Pl%E-#P-Nf^U<kWY3qBJU=eBTiR#Ij"8cK0%^ka_s8S/F2?;EEO;PAjSV?b^ZcZr(E6'fk[jiJ(\Ug8@/0^:FPN29/[,\=nW=VN?.:p%=WLUb7R8EnlG,.gl2sZlJkkIYJL,Z::6t'`@!V"sD7]O303TB^=_#1VRIlBLdkbZA?,AG\9i<"C'O^Tg`I6H@`O0^*BBOPSiqgMT%g/atC3<_"mST/I^[Hs$a)p>6AENBmho6JH[U8G8Fg?(2l7U+>"ZOkbqC*l)B3B`#'\NQg%;?(`a#&UEg\;K$Wl(p:fH3WasN&KrA%"fH"[[_&ET!g,1GIG/`ZNH<jPD)GMj[i0AmS(soY2jso6_'\njRuK>M\=/keH_7b"BOder$HLQfBUd>mII\Fno9k<;etc%-Z&_!?%R^01MNcDhjVes)HV]=eL(i>nRg"['U`jk;87at[gQHN2u.n+ir;HDY@0'C`"*BZArjTr<(lflUW1!OWOm%ALI+HOfMIOCf]jl=R*%bZm2qEgOSJ-/%2M8<<\)VOd(V0U=3PPP;c_d2BREahcWkLjdQ),]1b>=YFt<ZhOEh>-82R2&-1f$ro9RrSZdN5>jR_;NY9GqmET)%%Q@\^Ks#IH[9but7EIqiab%[j2hS5QK-hO?0W8=bkXE9i217A3d`0[&4tW>9P.b7+"?c%paNBGZS;EU9)mU99*h<nYSN*a!M-PAT%Sd!t!5MM6X7(BIY\^A%9A/]3(fSB3rNh\CRl]Y5U.RtPUaama>iRn&,:+5GPOJlR:4E'[Eg#$>#pAOT>P9;pP>$m==Ln9%hVam-9%ib.PU9I4@rhZj)'ZHr76l[qsHaXL:ZlbV"GDVGCjn$4Bd:sQCR)1EnA^HFTP^TDm-ad'WlgRUF:kFp]'Xr$8c/#Y5J\=W<sDP7cP%$"Yj.,1i?;E0Pk&b6"'DVrL+m/)eBN]cHk%d+uM7+FQr=4lgu"l5p-&FBDhZ6VpU/K<56LPj?DE;SIsg.'pdb!c>6D5J<sd?S^:J%f$Qs@KPjn8-;>mS$CWFW(EH\ii.bBA`h8EH2X/+.Cj/cj1di)$0^7uo/sJnX:n.``GY]Y#+3p8*TBYYAZllW;?pDrG&g!=;fXgQ1%j\:]\8M-d`Y$mO?8"6paoCb57Y&3g,m`?>?DXj)^K#+3VVlhOlUG"J!,_RqrAb_OjX]81T8+SUt/7FMtgK5[a3F=$%$*CjK'$R%$%D_nmXn8FbI;.p7%",=%Gib&&O-XV\VO*h76=mL'Dk@3a)HVu&D9tl@6,>k^Waq/+7O"a@r=f.Tt+Z"DIB+-Qe^EGC0+>`K(AEF!i%i\=bI0@$YePg>.t-f:(UG:\EP[l2g^>)(dGV`42V)db72]!e<k7U#W-Tfhs&p%f_`d$!&jg78qH3fcu#<#s)h!Wcu!]CdAe^*!qC%Hd*c,1ti=&52M)d,4IJ#eWBeC-0+rLDK[2^d$R9Wg1d8R@iR#+$8T#%ZRVBgAYDSMc5oTF7'V&CU4GXfP"(;6-VDlX$h>Q=0$h3K%DC<&9BD)G^)[:AJ5m!H4'Hu]]htbUJ6rWGmaD$CVirLL#l#n.1ZF<V7Pk<fHAY_SU:4jt.-]$3kF(%+:PAfUEhIr:J]isM!#lW7^%g._Er_oKDt\cTj+g^q`Q7:q?p<D&\-f95d?9\pC^2JQQqQ'4O+IBC*bP,*OCMri=7UCo]:-(3m,@_(V&Kpj6GRTnQ-R-$BbaER-D%.oV?^%^f_c'=+WdEGhYP^0-0QVhJ/,YHU[,qRDr3,V>`*Cc/>MakEIo3)o9IaX.p8*'38m?*g(,Wnn]h@LgK(g3Bp<O5f4e:ZVm)%hlIcM9&-QOKc>3q0qN78NU=`s?a$<9fe/^lA;4%0O48PlOa/ILBP4Nl\]EjWJLXXc\cKFX$`t?Z7teU&`8$GYBCFNag`coBEuO-%%4dkM]3"L-e9qN/qm:=@i#\c$1*2Dpl#@Vpl6OBud[59hk;d-3jrNoDDo:%pi_U9faNNWU]U-UbU*&mSgSE*FC)<n_5T8&6HW,#Hm%H[HCYH.;-^HIV7c_((sr=:Ss+@;i$1MI7$JBHA[^L_NsEdpNdEP?GgrPhW19gJ8V`n#<oJWOK@uTHndpDlf4g8MP"GpV=cuRELi/%YB(bYc0M*b[rWScGX4i1ME2sAe5<]tEZUJp>J*``FgalPQ3)bD,)odk4EF=NXeiS!Sl"Aa4+*;Amo(]'M?,2XY<6E!"=6K($c]m9%JB)\n]fIMd]tQV:jUZbt_abYnqQ9-WYuQ&f06Df)g-u\a-du[<Ls<M5_R%NKHW\;nm-IpD4X"Vh?>q?$3Ja$`JJm>[L*EI_H'E2_%"tcL[WnjD3=/CWU-InDHdUWupq&6)-6YL%o@jg>bi=5=(1YaNb@a>DLl7:PI$_C*&Z]Tk9g,)/Y#S6mQG4P="?Cg5qRp)oR[f"O>%/).`aCm6?\fLgk\SUbhkF`bV;T7cW"-(Gs"/gZP\2m]k)0/Rm.JKf9hN0/2-AbPuXNq:@tEl_k@Cti_r`P%h?ilRd8Nk($P_PZ*5%=36\%Fb<pFNN9Gc;;!QY0P@Q*9ng,MU```Y)KHS]$+YqSkIHIkA\![SNa0Q$kLn"L\2I8Rf<+="VhI%IA?G/KlD'HPcKcH@+M3;,%k%a.D'kOA1Y(`79(:h&WO",TX,-@4s1)P(u!X1W))K]HE5Tr=S/&_6<KfI7PLel50iWAVTeXe1u;pp8N2CN9oRJ=qgAlr;7_$!E-%$78^XW.J`u*agEo=Gu$N`*mWK$f^2c'H`_MiZn%\I-X@A-GFcX%98?J&"Z1'GUXa"<6#=90b7`,Mc&YWPqgOY#Ahu9j=*-ae9OC+%'TO?icD+>\d8--gF&*`2ThACK0V_+Vn2!rRIlRtsVtX`\B.]t)Jtok^SQ_R"RdQYB,jjkN9k]Na9aKP;"r2@cmW7Cn%iVt$"53&k%E1[oL>c?`E]=+sOg`lucEuH=e4dkAY3)@&T.G@7t3]cc`\VWc@C-@ii*nI(@:.^Z2`,[*DTFpOl#Dlr+c?.&tib8))qI)E5O3.L8%<[59-@Zp5P(>AsHR]M[kZ6;W5`s:I==>\qs3UkndNU2hAF%!sDiS]2o&B5U-^*]rj/G:-YYLLO_"=,;3d#k3o@p)$:]o"Ga[59hk%PC/u&YCskOoq#<dSVX2I.Yl]P2Y"^eb^*A;jg):SQ+;_n?6(hFZF*`IjnKt*F$Jd"ED6r/K\O'.;OL>-]n!ap<FHhA,)rY/pB@Iq%E\4?Z[*Yo"&l/mP"@.QjBi^"Y!l.pBL'%Ec=]Z3sUC^Cd%"L(M=Te`EN#Ikq04q:%_CktEn-dYM^R.k>;XhZlIL5Gd)'Vsi=k*_)%Ai-eeRc5YD&m:dun&]T+/WGte*.fM_dAAr.4YAQQ$joKH!tLG)1l[,8(`G5j"%%9o>K=QY$p/2)0ZT5a!X59udh'*::P`>*4HEg>%.i`u!E?9OIHK"@'>TM*2T-:A^_Cn3aKs=A\AVTC[?)!T7-E#3hF`r"-BRP#L-ko>LTpVhLS.:Fu1aX*?(bSo?-;pKRVa3&o',9Ke%\RM'Z;iELB`VB(10e6+<(BJSI)Hd'Yr]VO;i;PoD!5e,OA:28M*Gr<sZQ!fM,Kah2F!!O$A%TRP>P?XKJV4'+!#W62=f:cRKt_A%%*Y9Z;gE$nR#7BL%dRM0sf$A#QZR<o_K.si#b#XBKBhB/96UsD##!eq\U6`G,"NufJI>eoKK_ea!da[Jb!)ZCWVCTFeCt>:'-rEXB%09ts92q,>8;*V*0W5M,nerJ-R;LnGS/@XC3BA;Rc[ZY>^IR1WujRjmHYA%)8Y0he]k.=)I]r1<;4ZbU[Kdb/n=.moaO[e4cH3S<%%C\7Oq^2%g$VnU@,VWZsgK'/S(OG`'S7(&jU@mp_sE#PS]UVLEr.(mL_L?buR2eU@e:#8:tlQUGip#EZQ\+=@9G6Y2HJ?TGpb>C%?%IctRaY1]r.%kM3d<875LhW":.KFXJTi3DmjTZsrMQNcR5AO4U#admcgh,fN7Pg-]18AaNDY%!;ZU#+_)@K"P03*+BRGm^FrXfI(<%4.$4@&@u&'C,:\AG.@D>=goK#oHs29Y"t`J!s:]Ef"8fmqKos7qTMYgYm@L.P<F=fTY%kr;M#4liB`=iHLqs2ojP;c/r(9u#k\,m%&g'Pa]o`A'K0I'a\@8%R\3Al*@)D%>ZU@\@:d/UTrm9$@BQ]=uBl/j4%pC*S.nC/P>])s/Ruei(*mGn=SjFT:SjIEh5[and$H7@D%:jfp<:N-tQ:D5L*4UoIM2bM$?a&_K_]q8J)gB6f;$?3<6UBAd/*!5^Qk5gCP[t=AGSeO?Vo5OV=<4K=C$KlY=.*bdfeA(O5L#TH1%KgKmogP"SLh'24S$C,NDZNg+hCKSc"H\d*s&E1C'K%&0L5\^Ft]@7*iLX[$f:6?._*^iJ:4@NlOH&<#[#>dT5.PgGp,4gqE!?!\t%(2"BujYLqh,K;pUd`BRX>"`j^OF>a]#uWG.p$7o/0Y?,mD\'u(oT"),A?U4W[fKCapP+BAMF[W-VMIcd1`2t+LLY!6fG`R^aM%nV%HdgakA)DW8BGc(</$oX-"eIl7<)N*]TKpN/5d>]ATVM^A#+>m@p<^_\C4c\0OsLq-h?:<BfE]SE_E8)h1$G$u#r4g3OIAPi6&?0M%fF`Z(PU)eY-0^Won.%;R+Gh+)P!5DZdb,Oe7jmmt_sH_nocSe3;(\[4+ni`m$*b!q/KshP&g?t5V"`F"5t%BmTp5ngGMOjRP86u?%NTe_fK\3p!&8/Q98?&9XUoEJlG7CE0%TahFN@CgF)2I'&3W&^;$up.qZ&a5[Wj'3-TEa`ZLuR+J?3AE`[fJ,<qZ2",6ojnbEQ;ZQ%O''(SDTEe0)n%KOj83/T?0J2k?/>3iT]^aD-7/$3JS)O&G/GnY/][6Ep-D'#-j^OX<^'GKbUG9@clk+feQle*]Z6TDN2P;6Su:52%iaRg&'q=q#an^0&lk!Z&b9=lsf&a!F%Jp"TMDAR8CO'e,ZO_@+=Il3#d-_l_rPs2^#B678ZqkkKL]ckY8g8"#g'-5Vm->lOp3!gf%0V!4:%VFn?0>[1c$3KEiJEs])asnT0XhoF:<NK`A4jH6+#s55($'9=FM88kY,t$C5S&$m_lN\!tTI&S<K9j0@CWT(g/WhVuWV:Fg%BrP=u3Y?&oH:"IQogDCUcmR*1`1Ep*[61ogg<7BUJ27:V/5OXo_[;cO=/#)b>u,hg@EMkoGgS(OD?*Y#UCBD:TTiq:Xa[Pd,h?89%&+tnjZ!A13H.H,27kHo4!ml*BK^FoqC#2@<lZ:<.=r_,q`>dPt%;FZhMl1,./RG"VQq\*j>_O-ZCP8X?cpm-Z4co,D+"H^VCb<3C%YjtY3h99f+?$A(8!SoFs3uW'l]shCt%fN-_q?G-Q/Ur^HohboA;0K40$I:d7lb/oDmS.\JiPhNN3Uh]ZW-ZS9q`2IYjXno[M'!"V%HtKSZm:#]3UERiFAE2OlZZ5!O6bYmo3qF'fg6o,Up)`c>K&`9&E'n'JifjeA:RZ_W`K$%`pi$8):Ss5W39/(]I!VBhm"oM)R!l1]%K@s0'K\99p7%&fUP%aK\(1Pjo(;ee)(4tFr=qi(I_]]_8Q:S!Zq5!9LVV2CliWE3-Ht*BgEL*:0T9q.I"V>)*CJes[Z]@_II2-.$%&CDP!0Y'?9$7;qhQjT_hRXc\Q@4cdUs/=iPUAQtlj[ZJ*r5a;Jhg1S-j6T-l8t8%S9B,:UIhMGr@T4Q=@k6\9ee91u+\Lj!G<D+[%49J*<l=9Cpaa!RHOna1@T>])4rcF%<T95ui^%[3TZPM'a;#@0m`Z7>jmHS@:6L?pT-X[sG4#-+2gkgChJNMi\'HA:g'V&)OJ3IZs%3:@0*oC4s1G-5Ksc2%FVB,?N.ZEMjN=mKTMbjBCV?%Y4pJb.$K)X#W_@u`oF:a43.>6.pENds@1=:qH?Z"\ljkhB/r9I8.g0J>hl%!<k1G_n9Gc$<,'2(!K;mm7K7T@d$?<P_aM32/AGCcYdNkI99)Eg=&Ls[&4oVdiJpWaS4>EH+ET)m%$'rIOcsTDs*_7HfMCO<[kMa%`JU)0d%(/6odM$Z"3m-Cn$OfQQ>:2O&%.IE!%'YIV-+g[7]:_8@k=ZY,&uu[`gFGo6nlW>.[!(P!230hYhrGu2?N7dMD:kiA3^Q`%jmL>Q,&Cgnf*?_9DIpc?]9P8>F8nC;D@a/dTbC;c+`nnH4W]1`Id!T$'4L8:SHsZTd46C2Icpj#NZZK,&jZ;Eef/:o.>5^F5$Yne%&"Z,?+UAtK+UFt^N^:\8.IHXCin>;e+7_RHm6chh<j!:6d=Yna=f5^7CStVIILh;Z7%T:pP,2WX;M"I3dnb3,:F/sp5$Yn6Osqg!%)2D[KHENX#W3urcG6;W2f\]1e(Ymq=6m1:C7h8J,_6Xk8GkT&rIR(0_GBhU;itgPF*ojQ8?9_Bs,?bs=nC=dOiA1mjg"tLGfN*37%.5FX&a#/`U.jN<5Aa<t_e(KrIp2O2QaE#m2VHBW(4iss7NQ_PPlH*6rZJH8UO3s\n;!G"P[,dHAlUn=X`R]V+C"Wk*NDf!ioVM-G%)r'h[JY(Nm5XA*sdM1eXh6d0,74laN!V^#<+kf&)YfX?[H8%dj]Dif*1UR5.1J=YG)EgkTs"ujW_Yb3!'i:MZoj=Jlo&d\VLWB[i%4s<#M^Pm#UYK?*5oNq+r@<$[LW3urd#:2cA+)M(CFdql(V_9+sJb\fPKRNY],eeXm?X,e/Z["VcbBe*?Ij&VQ_D7W7a36OCTs"ba%kI=\ZY`(_BD%F.;9'CZ[-BF^a#]7<3\j/f*H^l`Sn?FVMb56QhMW]BA<I>AZpG@jFAM,bJ%MdK]]LYTBkgj<3T,^RX+p`V!7J1!t%\F0oS\__gn\(PCtG,FtJNu;VX2@[Da3MX@P#.U#/q0G'ckd6)<_"OqXlkA&I?U<n&*#=S.'Jh0@gaDOuJGX)ahQ#+s9B#TqRsfTY%]RB+Q^fP##NH9#d&THVDRdPe8V,o5WMr/+goKp@,c<<jYhG_k/^HH"BMRW%TC<3bWL#Tu@FtPn2Y'2KHJF:)c+no7RMh:1l&5/fa%/5Ch"]I+@#"uFhe[njhlL.Pb7F:3,tNC(R3>IQ*Na+U&8U=p6$DcR^>ORt,e0RhHj4p$cO(*."MeF)"ee+Z@!5FoMP''<$kRI+b&%Ge9VhNp,fJq8.GthQ^C7L;$ss1G:DN#/b-IU!6s^JO76sNJ>9@?l3[1D@F8J.oe#N3*!ieFtPn2Wje8_'[RoPOAO*k\1YFCKYb7h%q@Op+nG30?%cKh`K]b/tc[.G+q/F'NS1.R&1Cd(Ll+&Z`>$#ub6fPS[VmT&S7H,,a%Qe0OZ56-Fpgs3j^f2tj&9eL7]2o)$46#c&%[sECn@Q8N)1d#<APS&bi(KtTU-@/Ii^',IqC[j*Bo9HceRZMOHif12@3Go8CDgaHpi>;+Ud6bGf;gTOuP3HfK2Tg.8=Mn[,`T/c`%'ZuXsb*5%dVAq81'RU(Pm`ffO1d5L[q]"nPk9u$mYgk$RBtG.p]H0f;$1qL4";F5a[k!">p)^OJPcgPYN>)ZJBb76;"G-Do/l;*B%Ja.?AHdI.l@r#F`;$s"t[BqiGj^W>8A:`jOEAYQ'j*DbNI6u2tl$\uH%@1?\LN3fjhpj2]9VBn@4Yt*\JBO#-6S.BR$P[?:1hpr[%UDWK#J;r+=2(rSJ=s;3k*+oJud2CBf(mU`Yc*brcdDC@[8jYGT4f(TC&pBi^;)MPm,^m)l,b&_.K]oPuB$PQ@ep;8iVE#j0Eq3e+%UH$<@=+f=oRsBXRMOSmaE&/l$RsF&kZu5#AO_tNQ+/865TO1,-a0D12=Q/Lm&=u5@6XXUnpV%93K'(h!Y9&6UKI?G%W(Vg\.1i*"%+?],7K]g6u,U=6*BpjSg#tA8(-s2qEme5iXA1J"<4fq/a.7V(0q%]_j/iK07DW).s7sK\HPK)X$j1E^*&52K%UpW*A"+BjMBilkr%OaT>&Oe""iL3!jrnbIHd/ElrPEZ-eD_$UU9@71G2_eCe5n&YuJ:Ri@+p$;N"oq),OU3`5)<0Y2\LR"T3^J91lWZMU"!l=?j9Z\uP%Fn*Q-\[$V,TIb+QAW_<hX'=[T"RENo=^B^s>ZL]kMD>Ohe9Pf&C0D!dA!F]`B\%#<./cIuA=OQ?'&W=MX2/br"?:UZAmZi@Z6'U2%@LicQ4A^iSDX1?04J!L<67.`_$nSK[$sYMsT48m<Hg>=ZESpK0RFh/9jKL(0?b,O28p_Jem.C";j/<8?EgLc^786m&TiH#lU:MQF%!>Yi-A.%aLa)FM)MMSB.FR4jcp\$H2rX:_SRqng6\(jC)%9A:GZHKV^ZHpl)Z9rQ(PuZ0].itsGBuRa2SDtK`ZJs6RXI)/5G8p#7%N&bc/]i\&8#9hVId/6HpOQ,6S+$)gt`XD4QT2mDi?N6LHoo#\6Sl<H$<PIn'4C;/@HXC><Jp<ns<b&*'hD6"&cF6dXUB(0Tj=o@b%R);<!EYt\tL[gst`V=\L`K2NZ1$"g,$tgB^Qp"ShN7;brq[oVfEa/G?Za8kV@d6"XKcm]QOS29s$@<:?K>n.uF=dhiY*D\e%%P3Y%+ENhM"^5ma[,O57.mBP?KhOc_jI9>X\HSP6"MDIV-d>B%q@F>51rE4=D($sLXgKjNZ+:\tWuY"Edse!@q,(7ShTdHB[!isiL[eVq%i$um1g^!YWB=T<jT=H:8eTpY[b&1r5lLP9Ic;0R3B`0uERR`FoXImV@G6Fpl:gW<!hTc4'+4Cb#S9n$XkJ:-6+EU(%Md^:p+;/`6%6;d3n6I@r)D2[)NQ,)T.Lo%6!jV4oE,RVqGVKLF/W+"^rR6qSYFnDgrq\012=St&_/lEfOVa5:YP6oNio,QPRU3/<YEsA7CYVV#T%Ct3h8aEjl*\LCQQD:!6GL)&/?D)CE:o5'T!`U[Qf.#&Md,`Ac?8;',X[OkrN_HfL$9"7N$U<qa@J+'KEAqD9$^eBinShZYZ1%[>s%>/:#Z\S;@78HK&]FefTt@m(82Pc86*.=.U$%9lk3O*&ig>4'oV7Kpoc-X_P%Y>]R0gCKRo9uGh-V-plL5GQm0q@qJaqaeS@JI^u[%h"gM=Ra9>d6:'o6LaPsVo'Cedl1/'eC1H1N=0&"!U4!_JZT9*1E51s[$A"927=iRUXCRua)(m.a3bC#r)5q&bJg%';:^H>/NM)<b%CIZ!c3PbJ14I\,q"O+0S)e*i*@tNL>p=+]LYL*H!inPB]?fR4.1@ON+e<'RpqNPNp@jf8nj5=&F/u5uOhP8bDn@ZZ!AJFRm#<2Q"%OXqo:A%`DkYs+>kZ"/W&,iI>$82.5l7P_-lF-"Y/e#&6*lD0W:rOrUr]q&qMC<[*<<oc!HlEIN9j9KJ.%(me!er#"F&Se=H\6c/$%8:bBC#2ON"d#F+L\fk#!%Jcl=34kiQ4_\bjgFql3BNZ)2*\S<riiZn$K7S6+@kS!3md]-@]<_0a]c6"N4W[V>\Ao,>a1C'd(Vd]A%p3<VGL-9uootol/qSLOJBaN\Ml0^-G7so/H$KGaH>5sE)HGU&HHSXD@+r_l2IT>*j/8hAk-A3OAQ;K,CYn`OXNi3%!XjWKb^+*D+%dP^;^Y-nGbfEN>HE?ZfrY!QK[n:9s`W!20h!sNhY8E8;=ee;u-?;#BE#_08"#^X0iqm+?0;tOXbTaKSANK3a9#%!^)=0\XMZZl"P%#ftef"U]YqC%Pu3kP#(m+^fIh?T,L9;dTaCh3VPnd?d];^<`lk[5!9JYI*4E9UAerl-_%J%FfC<%ND*9F2kS6#_e0]G(i@!2EGd>%j]Z"ZVKQ<6YRFl+%^L*B6W]K?UOBh1BH2BIg).b8f,*T[qcr'b6gYGob-)/-$CC5Ikn[BL>BeSCe]OcDH>m<AD-,[#1&R;VYU:=o%`sWdh?dUjEFnsC]8(4+66:Yf_rV'gsjT$9cHdLKZ4&5BHiUtNkiO:1Io_3_fr,'kU5%=:k-9eBdAkE:j]gg&86ju<VEX[GbX1)hg%(?N4e=p9^!IaA.'=X*5q#>dS[MAZ=d)tOsXM#C#8E?2bjN3A&rcSTubM`nKC_L!l:m6UY9%toT>l$5@W*msJ=P_8bY.Y@FE(W,bm%(T4cJ,#.1Y4gfarIMpCTO!oJ2&5iA4+m1qlAjd>_Co'>PHWnU-HPCtZ!m^gnI%]Sla5iQ4R4*sMgVEc55="E/4<29WFj>.rkK-d;%<fHY#p`9CS4'%<dcrUX\pMLkakIY;e&hG9SbVIgLlhBi!'&=VK+*9qFEKHd$F6O;"*i):_4JbQd4JbPQI?5MdpQQ^"qNRRM>^DO0%dds%Q4Wi!OQ?*f!s)Sk*;4+!1,B<XdQ%iT$dorX'j7pO[BLmA6@Th&J]Y"6SJ<pMD*pk/3?Z(S6NQo%=,`@pY^jm$:0DN$IWB30S%r*)a>3Lh5H$uSG@]%0SHR7F=<1T%ZFN$"f`(r)-om@m,PQ]E<oX?MLUi-Q7h()'+D654.,R7LtO>>1h0/rC?Z"d/4IF*eUNYWh'u%K+J</:Q)mu73F_2kAY]C,)eb["n4YY9&C,0Oq7a7Bdur&7"KBg+Af?IJOU><BKj7m.!(1fp9b[fp+ZJRab92>i0Q-HLl*U08s<OH%jq5QCh*_slCN+:<R$IcT7pcbdGO6Ol99/sP6I]>7RJ+!,f,]Tt"<r_q=s;AE*2a"`d2CBf*l]9\=4D/:]0Q&?\!5H2)K%Y;eU&eH%n%C*ao0XooD]LcX[e%;cHfI$?HGIj>!#S&].+RJtqJ(E$\';SUTPDLFq&RlbDWZL^RlPh1rHA0DVVC/+K=6S7$.AEg5%?q3.6YQ'%.6W:AKCfGNO*q%W:[&Ib:['mYV&*hq4mr^*oC4pW,*8F?6m+^2c$=MkoGOqLV8/\R1>O"m+1+Hr4NAg[hK`pbNGp66$I1S\r,&a&%Y!M]tas&#\g4m$++PFg,+PF;?r)j$[*;8Fao,sIjHWgUsqQp[/\7J's5tfm0lPK5te#9C2r)$D+QN0]X^roYT7+DN:&]sLD"qU.(%-Qr&6Y)'%c](1$I/KZc^Mju[(49,a9VQFa$*^q?hCJ-1#Xt0B2BSmMQ'DlJAUAj>?>^2[=e//7M^RauI4S,k!(!s6UR:cjkIK0R5%s+fHc71?PF0GS#(3)Ce'3k!JbWV=>IHm+5s8E.]*gDT_tae*9aBDpTY39(qFPo-q7o!bG.;5'tq1.R^ClZGR&P9Ai2ML*Xp6DIl)%Z)EBm=,Bc`R:9NeE&aU\28iNB3;,bkD7lYB)/bL'Qh@og"sS3hE=Qice#tl=/?oq#LYb?J]k"#r@6B>2-9TqcYR`ZP$C`@^>+#]'%-aKnm*M"q&m:@(al=@[d/RnG&[%$r<$n2*-gYK@jJaniam.J+VMEdmsL>ia.3a7;[SN-A*_%7(%%#0:XAh\ngLCApqHfd$;9T[/R%&9=./di=)_0oP"0+c@LBb[SXQZPZFjA2/GJg)e6U%#?TdLk$n&8r4DYOBELM4_TO_G\Vq_H"r&;qOeRTmsR<OA'*-u8dJUW1t;pp%U/j6YcjH28<ld8.@Zq0\Ta3u5CJUDR_t^!uAmYgG*!FJU2,%o9VM<3.#H!5i^Jr#H-nIot_lP)ChrTV*?%0,`#"iiX9;_pEo@tD.%+!O\dq:bm`YDsk6WXj)!Jc)bfj#05OR(nE'ngoD#a-r3)k(lra9L#V!mQHm^r15Vk+o7-aS`4X&UtI&im&BY.qeKn_NT?.(@/LVt%dT2-E&]l,hG66bA]b<6Kkag)s&A8a,:WX3D:WYW9,o:8F3U`s?48W._65Juod6=#l;1m1J=;iDF[V@tC[@V,YD@[_&mE4)f*6Y\i%(ZAPP2JDk(%e#AiO^m5T3#1lgBGQOC;(m`*,O-SqTp(30hHT0p]\8/^T*d9\3eV'._pB&^0:A\n$SGWY8mn6+$A.P6j44+Zd9tYK%Sj9d*nV9PE3.@;&EVqX>ioPg/&QKoW0i>EOL;!1N#D@dWm-WS>H#HrZ_`@gB^:]]m1N\C[W-sVL&h17KJ`HLD\X(b=5lR\a5^oJ-%Raq54"8O1I@p'TbM4&Qua6X:uaH"p]98;d57,O+IU]b3uTGb%f4V?@%]7Y]FF0:=O=k89obg*>L8:J%RArRqcPNVX1rX_[6aW<bt%,2V?Oal)>\L5R-9o?^<k!;d>T&r,jf1Q)%fiJmgSU04CmIq0@SAN<SCA][[`^&XP$@mlqk4=;"JB=c,r#\n]7In9PEjU]`cgBFtr%llOYC83GEhe3)8JCjf+f&bo<5QYc4g!:$>g#j%t)fFaCdiIZ*k'U;&*W>nYd-tc=\gLL%XK<cWopdDVQpA!,]$Gg<]9&/I?'m=0W%$%',j(UnWg"fj5(nR.\fr1Z+bLFmsXIpi=L[E43<\2X"[GjaGs!bY=r"Z+SOHbUG3epD2[5paqGj"Vu#fU?ec&["l7N<hqNX3j.'%TWZq)\meIbe]:B`>Zh/[f\WdoV(1>+n';$eLqQ"j@!qYH=U4+,qP&cN4RPHlpk@uYTN(*]&T9S3UX=#LY=6#[P!A:e`3;a52Yg*6%<sD(*]<]hTPe"*Ids&C/d1^bGAY\9@n-+>N*J,dL1im6laBdK_q)r$:k]IS\ARO;!g#W#D?.lm-AK:.FCO7IZ:d_#f[97I_1lG09%Fni4O7qgAA1$tQ1iTc5I@24Kec<$,ED1*-bn\0lg*57:MC?&nHqO2dZ?%&@So@O`.p/q<mLsEJL1>/@QB[cA"og=>nj)b=)O$*Mq%n'bjA*n+t-nOCIf]61Je"#K8YE)ECP2g\^u\#pn.o\;>chs/nD>#bN5@/aq#m^DLQ:]C+Or8Zr/g8uHh4Secaa5?%ajfaH;:[W]+%prWR$h]MjqrK$u6^L'"RKRr\?6$&Fn^W-T>iJ!2FpHSH_9XW3)WJ[>=q7umh'*?"SQFB>\\`:+mg=5UdP((h<njk"`E-@[HVIZgq%p<?`HN0(ftn^F7b)_B=9#d%p(![O#n<J7$='.MtYa*Ak'0@`HT,9@r6YpAQQ(5"Lp47Y^B\=e(!'Rc47'*C[C7<@!OECHjA-ahn'%,+/*Wn+qus-*iV(jV\Zn1/j,8Rn+f4[\QbIlj.(\?pV53alO&A>t:8%-jl"ems%eM#An@'SgeW`VR0Rs(8#f[p]0Cb(89q^Xbs5a%S>(8/nuSCklKmasFC&S3(^C@+ImOQ"@U+e*DHmW?C&((qUidNW]WNXsHT6;57q(KITE^[dpfWP&2C;aRYe+4sngC$jgfmUq)gu,B%*o8Fq_kS]];lQ<W)Qj7[$gp?d1\=//G+9n/Zn(;PM_9'UmNI@gWT[m"PXR?mfdPrJ*r4Vs`0;_I#`N.+qF2p6a\5:k#"Imi*PEh9%2<][K67E]+p0cX4Y4AoJ=1Zrjqms4g[Ir2_k).U_=Fm>(H1%Q[`KDq,?=3XE$7/$ZLGDdi@emAX>G%B^<$LGWg!FK]f@`Mep'P[W%05IBie[^S6<R1=q^/`h7LcnU5j2-R3SMocF6cTG7/'q#uc+L+)6sAk21.;3qm:\"Waulo#dB%.(b`fL/FI#`[ol5l'n>SVsaUF4N%obPF>E'59tEi(m%_p3L>GM)]_3ki>[_Uj>c;hf)Z?T-Pjd!MN/,&iVm2BMX0i7U)V8?iI_#u^;R+?9iGUe?H@"#<S6EG@tjl0@8d%=pJm_[1I<t_ua*V$Y[fh]nCAD49B.?WEG'i3FbY*L.Y:11>-`+:'5=TH^_(FK@+;D6L5->el69#2llf)B"%iQ&u-K!1q^#]h2*`F%ffma,'Q]1U.r0)WelUrK;'cjU<_%^5P.2KJN3qkQ2=@TB&2`)Lc'bpE+su-'*YlVPD8da&F0t\Q`9Z\5J51*Nl87fl../!j4HEQc%IjqS-M/Q7nA>U4dBjHKm"3(2UCm!;-AZ\;)\4S#,BZI5D54&p%l1O"3TpW;rqmiiAB\AZ?;0PDih)f`dY3sG^GM'CI%%74eoY:hc%1<m8TZ5kk%HH0ibr^XAR>*H8$C9Z,c_>/!gH[sd\VXtU.Tp;i].(6>4c5J+%p8#GZRU%ZiH:m=*I(YbWf<j0@)fSB_n`m[2cJM*0%3Y,o+<U\nIoeaHWL%.XN(?EUpK$2PC3nnaXD._!;=9N?[gd.gic>Ltp$,ml\_bFN*8;9O*)3K)ErfH<HN[>EYnC?1OaKf:IZ"oJt%-:_[1O>\N7QFp4-D?g&q^?p+a/M4:h#@g=2bjc%lBph(>e>WbrFC[mdBc5kb9h']^_'T6.n=ZJQ6(LpkcE?/*0$Rg!)Pn1_eKI^L%9qS!C,ZnK:_)0o35An)P^2CRNU>:"GWeV7!:P3Qu*"NA\=2>0$o3a#;?a(oA6EiHmBD3ru/%a];IWOb?P%5>rN0:m4b9bRth7iQ_%Tp!2_48VLghT-I)fo7;7/QDoHor'.E1Oc7,8T4K[:b6H)r/XA0MqoT)csW"qi6+AsMs;kt&-e9/oJ>,k[ZU6@`hML((M5Y#_7o!;%*/P."[+R2jdY(M7="*e,G,)cS-s4mfNN)V^+3lb/X[bNtm:o7s22b"'_aQM//C]I?\U->(4^O7S1r9l_I5Y\O&Lg4=[esFo&$kjs%h>YUFIqcS,=tZau-ujh0.ET(N31id<fQ8>Eg=L3b2'9selO6)Y1_SEfBU/j[:=lSnT0.-tCF(^YFbJZ`dcgg()Cug878FP[@D7B&%;5Z&h1ooFZDN2?3NR4\([j2Y^W\\37Ij2dq3t6<\(iIca>2,?kJHeIG/K/Y]BEp*Aip7!UguqS0hg:W&4aPQ1H`#GI(f4`M'PKCd%9`8O3DBEg.d=sVE/M1\h)QY[XX3K%PV)#Hej)0SSnB4KCC-1iqdmr>i1\^=-Fq[m_V@k=9hak&Ag8mks$dKW/nRbsMHInFD-e"%*%b$OO>+9]/bd\atO5.X2W@aYUD<dc[G<-WrP_CR,?M9lr94e%YW/lhMU8AT0]Bm,+iHU:?mj*=Pj>eu+%[T=8NO#tmo,"]r))8"@=%WUGg,P!V/mdd.8?X7+/>Z]r`"H_VcJ\ldjR7B.^rW:,_'i^dD5_n'H*c]s4TT)/n[^nU\Zi/=\ei.fUQjCW5;>23S8DcFeM8CU+_%>X\uf&dj$H32;kn_pE$ied?fb34VQaXO5-_<[B..ZW?%*G+aKi?YIELN'1<p091ehT6',:"Qt+]IkCo=;3=ps/F\Xo<OtPKO0haA%,E9)fTib$ARpO99b6Y9ZU^]q?6=F0H.#h956@hpGX9)R$p]-Am%1@eE16lSMN>!1r:\S'Dq<@N:#mEN@67"/[dL&M$]@N8l#H0jI%T;YW_>U!bO_P#<1<@,h"B;5Y#Jg&_HR!(W$C7p4]?_qnli2f:s004695c7@0kU2>:i"J'f\o^]7/j3+"!!Sgfb3Z+1Z:9W;*3gDU%Y2R`UDXPm-j3XJ)R\q)Vj!LQ@W:5)D62qSG%JPgdDQTKBf`]H*1$<4_:M/r*0<=T%$5;j?_C'a%l'I'.-/gg3+hha]i#!lYV`J\7%6Y4AfUO<+^15A]bP;'sJla)@=MGW6\5RA1>ct`3Gb;KEVni2SDLH#iC[W-i4?[KBI:uW.6-+aB;.9b(;TaGUI..M<WAVnaB7+D!Z%gI*?]>"C79"1DsKfW6.@@.ZA.l7D471l,]8Ngm(JUm.maI\7F7[?p[2cA&Wd%O\l\fc<\4*^l0.#+qD*.%s<I>4p5fHQ(hS_K[;K%XJm]6JaKkfSkFd@1'l;Z!+eSg=R<.4@t&^q9je<rN4Sp!&j`U[1/V0qQBIr[-T"7-BSgYlPGhoH_X;qDE/gNMe[F*:.pud6f([5s%$[cKR't5kSf&b'P]2GUI0bKUHTI_c'Vb-\\p0@'#1+\TL-]r2b3i"g<.A<=l,6mS;15Y7P(WZ)]gs]Gh\b-Stkp6)n\F%1S]i>S=%bFSpq,8r41g[@0Z$^^qhG!kfQ\MZYWDK1ce^0U`)eb>XU$C1VjL-i:n1E?s\@Dqmp7Zc>VCmrD4ctP[7g.A17>!a?+-malg8uWR4%V-'EflqNC=i5/s<K2b*(_a5eF67=/.X=1N0"I_VS6;J@.L@OU3pI>I>X&a;]^j3!3'B[p+>e&$?o3A[a.C<'^CYM,ahg98Hh;]^j%&g#/(E),M!1\@iVEJi(&dRK1.4[FBXT$,csJgR"/BZoRO'UeQeJQC8`Bg[ZVESDJfPVUT>,X=H)^ENCYAc!06$'g3BJeq<+Q/@iA%+'K,b%C5^`7uV)Yi@YGIX`RZs!9LdiW.G]k_(+/tiC_lb$l7_-V8U\H$*$fVB3K5kWNF9PQ)^<N2f#,>-.&^#[8k=Z8[/+]o<-P-%ZMN9H+PAUlR:&[ddo+b[N+;)KOo1#I;$*Mhe'eLEPd-N\[m1SsNs>&TgPf<>V?,gbbNuZ)EFG8/c'dT9S],uk&Ba9AAouef]R-os%+LW_Zhg8MM2Wa3s<Sh1%\2&!U5aE_#-bG'G'"4?%.f/gEP3,o*eI%"<ak1&+79S3\\s=diUtj^6>@?tD)UN'SRDeK0MP\AY2.3%L%]]#*<`n9.FFgk:9gndE]oJlXoNRi+Ws!$$>J`odCOeCUQ35l<n=@e-q,Ff_ZeD:/MJ!IfU#fV8R>F<EZ@;A&j7WgMQKaA)m>85hr%56jB.huo/cIm+_CRmRUsrgdj6<cV+ko3[l2BlAKUM1Tgh8=b2GHr?)!6Fepa[?k5s^-dr+gItKa)D"_-KG(p(U"J%-aTDkF8$2Y5%[%Zg5?7\^,,:.S3E.c,*<Wg0%F*80Dc%QPRM3,Z;5fa_s5uL.Wb67!%l-%Kr9d,]PIrgpU_Y?'U!EY.]!BYjtE$2V81';;JAmp\e%LQ$2ZmlS!Fo$8=75a0]sP<<`OHZuBAPR/#9FE*S6?jh].]%d^f?I.EU4D;N+k7e62AN@k!%.D/_JrdiH-'N.Z>!+&-Wn4S=-dQKn%[h^L=XY/KH!'2KdqEXZ-^lPj;HulWOUo#I502:N*"g.tnKNY?LFF'.9k_!@ZUqdgqV8.Z)?fKJ1!D_$+/XZe[8?3oNV#J$f)=hWn%@ij+MR/dRf%tZ.lIGZQ;MA(=/_FFi+U:j8A*'Bc?WdlAVN5uF<fX4Zk<F3'2.D]_aePXUGXTt+,#en;&8X?&mJQ9iYHmK^N=R0K2%2U8;3/"K0)"*t]F,WI7Bq+)t"SjlKs8fBjPSi^%j1//h:W)P+%0X66:0QFHA=_ok<.OMO,o*b$)%dSh!rM`(*@e%=j^ud4pJV!D,%'Em;?)q^0hPRU<-+YPb:A^--KGsMc;4YI'FTP"gfScbtU)4aUQ(as&9b](T*]A,4tV6Fg>IGS#M<,.I=,<>WToX#eW.iH=am0+p6%*(@7l+l&EIR-8P@aF7ZQ3GZ$AS07;=eW!6X"#6X2@1Of'N.\1^Zm>>"8oaD)M!B:eO$.[/L6b.q#2WB'aoq<kp>p3<?kALf6*3hb%@!JpOF`>p53KKa-&WQ"oI^R=G/fgrn;Y7sYdl*DT"%j([N49Bb[TsAZ:eP2<XiW/1OtIN.b>4\Y)'o"PJ-l>A7$ORL"=0uE'fJ.-%:C@H%m+'pNcft,2LTur`^,;Vjd2?UL&e&Ca8SV/iA^o&[IA@J41c[?!Mfiq)M\Mf2LugTu_4%/5+^)Rk$dH-)>-Ia?c-(Lm@J56Z%Es#lcYTF00`CQG7+:>R`b"&0[SJd\OGVsX=ClE=T0K,1kS*4kFgcb(%k:.G^9:J'>8g`Hb[mN]"0Jc?Rk\h]F9Or>H>Pp&XEdp_o%i,=B3-fK1&gX<1ZgH*HjN'.d$$tioks0;0_^>u9U'@9Bk?\=oDLk3G;O(RP>><sZtZ@hVt2TX-!!IfRh"CeqH62dks<,35BhS94g%T\jgRJV"$j!A?@`5Sb1`E]8?UYc'f^:_<Sk&<p)p6!$">hp0fLq/qUW1Vn6i(8)rc02d0<.3[><-AT!ag<0?p<Z"^E-da%lac0()%U0g#r.g@//gI1)Fk1NjM%?ll40kVH+aB2d4JUt[\FCi'qMdF:o)#3#dL^AGG4;'9#]jX<bB,e,i-G1>b,\C'I/0q[/65h0]"A;dl%00d]9WuA))?occQWe;6e,Zmh',g316LLiM1$8X0p`0-/)lNfjWc\Mq,B2h7e5I0:Te1afHAHI@Y*@Ip?+$:^j#(pVK"Rbq9T-!ud%K'gU?&-m.lFri-6SCIb@LCP1?X3=>-J@KT^_1`(?cEm&Xg!@5Yl-Nq!St06[k42L==?6,!(!7!>]$p_2re5,;CS4*-=,[`)A0I1k%bgkk,fnT^JXODZ2,X@*PF8/9HJ@7i*[9;>!)UClG<##^9@,poMeM&?S"2IeF7aefu.u)P,IUl>MX_5pF$ggIYN+SbK#5c^N`Nsg0%+ksHAHNP[Y_1$@P02lfkV\r&p'Ub&e,8=S^ckInDbS5@f@RkrP64RbMl6HQKrJ8&-_Qd5%Ci'N\Djoe`bUop;"S3<C<fl6J73kH,%_+kPBE$,ZAa:,_am%[R<#1.Ju/GAe"mI#:'V2V<InhVVtL7j8Pipb9B=remhPoRFJ^sr!U@Kn7c"H`[/lJ,Xpd#sa5e.e*nH^JSh%$W`IObJ`PZ7FH>8!PTWCO9ul)9>4pGdu%IJbV$$C3P4@D?Vs*7E-@@S(SItW>qlhcka\$9SQF9oc\Dn($R\*7c>Hp0Pm\9g5IP.Q%oq#eHG-JlI[:RkXjGD($3EcF8p(c)"EUh[gHIE"W.s]sXp$D"!ULW,A5F?=)K&dCPeum5D_f]Gifq<?4BcqQtC)R0A1J%5WPPr5p%bHA"YoZKNN:I>EB^#2Bpr[iorAS3.QUsM^F.^W+0/P#QW>*Zs]:mTN/IcO=Zd)M77d#VV=31Bha_.X$dYf+5q(W$p+X<Q"(o[:0K%=?i;+6WkT>j'r9QU"0+=T,Va3FMmNZ?LoPOZI/EV`Bu%"L?`bM7n";<Pm!NrKnc0[a<jJjg<Vq5<]S`s[32i>#.8KR?=U,0>[:0q%7E1u_.U[jk$$iRp?M>_+Jg@,DWNQ:3<6MTgAIE)5bMP`mnon6b1,k3LKN*O):7&HoU$*Z6!Nq)`M3$"1Q+%e"nmGfQL(G1V&#1!*%@]ioQAtWh12:tE[natQN+dL\0E&hT@<MfhV7g#"n<ii$TKDeQi4:@/LLe/o>CZ]8S$T/uXMhVPmG@)'PaJFu`@XX;l[P4pr5>SL^%l?f8^jC+(+(@5m;S+dX['4C.l'9)gWU'3N18UmBF,_S%6qeo*aZ`PU-+pcHc_DPqeTRO2Y."u^W'CHabq3d#BZBn+u4Ht8K^@0gb%H?gAURDO'H&%%FORq,8DOocoQeEM++!XZ"?-kL\gTKmhY[0')($'#)W2AQSjpp;(jOPXjWE"IhE#<[e;::lbl+:o/*";9H'DsY/>%_)^i`J8Y^mX;:k!KM]OD8-#lJUeW'rhM^2!!"aqt/G&uL6sP-p66'k:\F'PL&0[DC#7<jiW[:)aoM\CbLe58@S7n(!@o*3jV>+do%Jb8a6hbbN5YBV0T)Q5J?$ol*L$&/Wu#RQ4eiST/mE'45rdGt'Q7tCrF-tG6>UIV`eMd)\bM@BIHXh"c[Jj.l@!9?SZ9UL-F`Gq?g%?;beNc7PSBkZQ3ZPlI'C'^\"jHNaC;8;cMBi9]h,;ZK'RDu`FF@ifD.,%T9Lc::LrI)ZSc!uN=MkAh:7#Nj25CD;:`n2K8@PU@Rk%60<]7:bT2)BJ'p*r?SB5]b@^]+,KXNba=B@f4O,m5WIKlQs4&b+=N"oK]j/t&!?qkTRR(eUU]+i-k>Yd$Eu9f#@14QfR<@R<7Kp@%Qm;*_&ruME&>9lU!rB`p(!mI(E:+`u=smEh&'th1(%de85PQ0?5C-R;ilDZ#CB_.$@oG6L#N/,AK`HRH)ZbE[\91K-+.SfF5C2+q%0rYg>+Wldf6EgWjaH,=->K)>9ZR]Z":9^4!*;U8k%=!`f3J".P8MM#<CS3G7kppY(MZ^0nX<.D2$S7I`,"*6U8:;%%A?_2Po]W#n%oU3LE!n6--KG7\bF&J,7pgY$sVIBOSKQ%(0%u);/IW3m?n0<T2$N0B/<o`a7$j4o;Oq7kI0Lc'3!s&e2HdLITm6>EG<e667@tTTL%+Y+=o2_.p\MAHEN;"B3#_3E0Y?-.Yn8nKGI1C%qXPF4h+LTtXL,\P&TEol\[#O"N!l6;,7MGu-;>VnSrd"48Gjf3P/I7W:&P-0oZ%V1$Dlcps.d4!!rZNJq<;-u8l3&QFG$6#Y4t6rSL+W;2'sK1Er7Zhdps$hh*WbmBCN+DK?l#bV\OkkmKOl%'JO&r8tq5^dU.EAAXr%lGM@M`I/67esLY%Js^D1"!c;/=C(7`H,)T\M*((!Q\/rLWg>19a^H8:!GTsAehj$SKO?Z>+?"mPFtI)_HFoUtrb\hL7?SQ(4./^#%_T/'`5JH_EC"hh,:'q*^KI0o_!"+5XfE;*Wd"#C'N"C^I?icbucp6/,_58#?bM]#uMTEi3(nI"I(_:CZ<8hn$E1SsGPs1]$Ct[U7%m8,/W*"WLI9_g^rj)DCnaBi[p%;KYg>p2ce1;!!,Y1<iPX*&"e0chJ?n_(_*d\,i<SO./[(ohm.dKeW]Kg0V`X?!iO8jmmMj\KLE%XF\2C-gW-mK.J"m/\jN&2["/\a71'+)4%&<<KKtKbB)+)q(qL]XB5Jk_&1hp*[U&'W0bUnh?)gX4F#Bq"ZU;)J63?r"7/mZ=UiDA%(8*BU6?m8^fC&I2Xhc'M@lT1^!3?Eb!E]jN!tKk;*!#Z)3<8>1<<MLubX'SN]g],E&.EpT^dEebU^*r<5]L`ZFolS*FV9ld+?`6s%^4Joj0Gksi;NqAa.%iP55*95%<$[ajM`r\snPPZ=3@C,'!9q=!#=so;5QU+8Os<-fB:]&r4#S3N*'>CI#(pVK"RbdrVMDp[?QP!$%KK+M*Yk-Kad#L:h21a]lAPOW+[=9QTAC(5`b``k'KsP+d_rs43:.o+65$WX[dA==Qn86P'!*f6$@5&J8]J)f?2G3eS<C2>rc)e5^%)224ks3+#!H8*J1Oa=gsJb3?M!Ye-bASQA4OoPXiP%ki?U&eYq#:!s<j(U9(i#eg#UdqXc+?b=1!pSZ.1Ur-_*3s?!*(USq#S[NA%&.(8>85]`=JGNjG@#N/[*U,k`"6ncZ#t_$4.nLdT!9lc^^_O4E!&0#hETW'(JDrgNiI<YPLnkYXGUF8$pcscbS=)cQ7i0W0!'NH9%=Do?e_`W<^+pA#Pas/O)nB\mM:lE+q":kW_#/(]^*;!a'!!<QR26u;.Y:8I&U8]KK?8^oU6u3oL+@&AK"TlUC8\eB27n$d<0ftuU%i25Al-d-i):*AJ'a[!.emsW5U<(2DgEUQG=blH8@<^+^i_o:#WP8q5lYqE4@as/G\TI<>4c@S[p=H'J;a:X_7f5^J*?!KA_QT\i0%?eLn<T"/H\oL)MG[3E0n)WNj3g:"JFGY"*L-8_aC)1""Ma)dbBZ6,\)p[ql!nW<KrjQh?ecKrn/\<TeXr+3>=l<bT'Of+M"`bo_(%O8!2RjC90]@Of]:%Lr,&rSCa,p7eR8XX,C?$/b3V<A2C,"`]KmqSfTfictFGYCai\S7Is$COD&]/KD(,Q%O2gr.e%>QC88&Qo!;M%gOl('[Y<;e,@bDRj.q?@2f[\;,eQ\TUr4B'mcDP@N$s5f*cEE5/KT<fk:I_i%J+??HR<XHpBPPRDndoJ$UUP_8t'GR1.OR3(Q9-;%#G,2@i7mW!Z_OWne7p`U>/YQFe'QeRoou=MXAh'Q!NcdZ0r,,X%$OK3O<TgbKP$oPG+MD8]r6D?89o>9.<$LRhUEP6Xb!VD!)c"g%%t49u50:H4M\-lL$s^YgHPoPRV9>M^)j=)fK+<+-3(qZ;Jg;uKQg-/rIZpU/hA$NbdG$?8)/O/qo@3(>lHVXE04U3fUS@/HehQ<-%>g0ecI*p1`c_MTS"[02O^6iW<?$EkULq]#^O%2Z-6&cdU8WuR\jj?$_;5net+dtZ@*O)n#0?"\29#3!X<Ti8"YiGl@>RDSJ5,`<l%k:H_lMn[Oh]]o/*blUOPnaNFFTMlHg;08Wc);:.b90G*peeli8-Mcq(M"J":"-R6Z,(tE59m4(n=n1i7S?FMF=mb?b#D-?MAS8/I%lNI`6Vb%Gk/q`L+7Qh+m(<uAEGZ1HCXU]Y*S%FadoeATNlmnX-J*qhV?gP>Bm&Mu2PN1WmADcD)BhUt.S77"'?)!IW-[O.e5.tXn%a%(S^#!Ie2[5,&7bc_r?W`Vb)O`T#$4o<V-m/msF8MLa(I1q[K8EZh:2<"]Y]I<)"'CQp&&a<q#Fp=slI+t*g-9amOG,]E-qX;Gp%dO3L<?"Ho`ZV*-ohJN/k+8Ku'nd&4(ZG@/T]eVr']"O9)1t[GH/2!jJ30Gd#oo<U']u<:!VI$;;QtO[uj_n/8K^B#YNZ9%L98n8`%B8V*p+1VW%Z4gJjQm*sG@N[4ek`mk'F!G&&Q9"O?)#8>LB/l=Xg\2lfX29L^QE<j_2QqMqdbE`Z(6S4W7TbD!8*G<>6cS[Q<CDX!%#0$jb`IgA<3nn;YR3MC6lAA\o5TPU$,)AZ@AJa-@YKK_DAO'p\7@IB+9:1IDP(sP;K.hKIP`A&L)f2!XoWV[>d&j"H4@e%?[0bes%_gnipSk:Eni:%3@0Y=Bm_ic02'p(ah5[@[WAKauuj'u.@4hDPe.G"HIO%?.eB;Yf-0A\^s*`()X+M@%nA_+C:jZ[h6rFio)p&)U#%D^61;2V#:JG.;P?Nk%eH.RA7J"%'>7h1Uk\0CmnV*<+-!cmq'+h(0Lu^?OA+Ss:Oj`e(;++&O^2<P3`Ei4Go7(.lj4I\H"`n#^gf%]rSp7%?)JF>tBD0@6eaHY]&Hlm1%af$FG*-;CCAlI4);g@V.sUd(F)^nGKBHKPXL(R`ed\p?@ZTDYg[+N1qM'Ib(8Q=`q;gaj'J#%Uo[>i=l3U;mi]3mb#b"*D"bt0pLGiIp/HoGFBe"sr2$bL/ta<E]S_2074lJ=LVE/S?9$Btp,j!)>)@n.!B%=)@WeC.j@3X+nBZ%h%o+=<qDd'E2%g`Ee`iNW_q9a?9JI6.*;'es!R0VNZeDU;_JN$Vf`^d89J_$J;Nt<jo>T;gkEP5%A2ZgXiH<ML4%3+Bn;3grf&I@7X%F&NtT'<u,qQrRhrU!qHE4s8I#l^*X&4[;1^0OWQF9^)19NeCW5$9BCA_lbf>/5t\=9:&WW<JcTD"4Ca>g4c,!>8[de+;s8TZ#Dr\%ogD'cf)jl`LURNFO)&<UTde?nS9u(C*UKH)5TjKW=Cj;:h0oB>$fqI/YX7`Tib-?0H";5i5XG5!J*1rGIA:pa:K)Ski,:(Q<WgnZ%?EBW)M/l@+0=?k0?5;h;q@'uLgVqT`3/K4eZ.UT""bsH_j-_9>'j`C;Z*Po,\'f$U]YKG.4Q&j#'(0(Ko>tF2>t6;<_]Jid6:>Oa%:PAHr`6MnT>!HVMkpJJmSkG0.f<Lc`@]3Q^XdQAGNOV8rQkfn`c%q_Ead7Yg2PUHuc-DVqFS<od'0jc>;b0Uin1(u89TneU?><'<%a5=5rKh'L$$h!Ln^$ajj#7j[aniLuZS\9=uAX!DmTb29;XY)Z$UJfgNNPMXa37:8YCG#M>DE+DUdKj5(Pr2tTKupX1+V\"@l!f/q%=K38DHqN7'`D)p<:Zau"9bSpcmepN0YF#0`kXIaBZP-:&!_u4K1$d"f;:-lKNhtOX]t6*/*[MUoYbTTla'5=ufZf,qJ2-H'j8ZiN%X$fSa"ID`+_QN2b/Y8WZLIE]iXCs(M1QU)PC17T(^0iWZ\er6'YiZkslfMKef<OCf)aJ>QaUUd'7NTlRF8Pa^^#?=8.\Qk*)G>h7%oh5YMn/[3o_fJZWG.4He*]WCnP3pX23*=r\+?JkQLgME1d/><M'CFZ#+1m^&(RDWZIXBipL_So?l+KU+@^PSZ/TMMGl1';#H0\&T%e)RMF4kUJS`G9.Ug&e5)b=0L1S]0dn@tH[k,8<qQ*6^"K^$FFl2A=S$qK=bAc9AoeV*`R@\o^3M#YgM(M7JKXg)6kk_K`08&(Es]%;&%H?8_EAd#O-3k2kUF7ia,u[Eq)iE9117n-90,Wliuds'-m$k>)CPm?agY.kaP5=(TDs#*,!b<`"As(B,\PQmuW<!)Pi62C%dtJ%<PBh4$R\,%+blpO8bV:3YKrC*`C]CYja1c_df=BB/A$QOXnuhP>V$7C4t$EV;R"BW<lpV[Q7P,alo7mV]bNGFqr7-sPrQXgP9R3`%gM(\im9)sH%-K*@YK:m!:f05j2e+MM9'Lb!`M)U7+-W.:mXMGJM"Imb8T6QoKp]#Z(7Mu3"'u>$m7C$Z[r31]-PU!/>GH"M>4fdF%Og=Xo?+cZs>.MTC>.j:-]_^$)f:d*9;l]OtF691**&,[B6T#Sp6jg%PIuN,5:(#6pM[tiZc:Yq/W!;'\W&/TZ^2K-)7&Sie>`pB@%b(SJVX-\NQ'/3sd/5E<aFS7RsM70c#bCI9TLR[)?:5XOo60X!C/([hgADiloCAXb%TaOH6nH#C$::)_/[lmd'4n$q14I!'jJ)?p?%P?RV8N7d*$ALVgL-!W%YfOq(0gS!JBED,1U@r7.Er+&(I)eV8TjM,L8MHP>cBJlf!]0aC97SZC9QIks;8b`?709qA,ogkfa*-8Gg%oXt*Oc$eE./j!t,'D+BQRfSZPfre\]$Ft0qG2T"q#EFH3/f=4#9G2Hn"NP\%^O:t`f34E=!@L-L@p^3loK)goMPMY`@S$_^T-\<m%1OFjFC-7M)$jd"WqenjIE761!Q8Dc.L/;p;k_b&PN+1P]CeocVC00GXduR#7h]sP7Mgr*WbVFNuDV6o)^;KN/9\__<.fNO-o8G8E%-Z.YM$<)cn+IoQ>e/qd0&UEF@)RLVm>N--X--h+dN#Y[dn4hqA\_"8T_T,n@ijB@=n5l:i/$doV60bk[EGr<bl<*e_^U>E?C;U(s%MJsV>XCO]B^`7e[Ci6o+!F,4;E^MHgO8NS]E&<oOIL;)HG2/5?WJf2\3g#&_"/$rGiC=,bQ?:T+m_A.\"5bS5Vh0_k?UI8hmu_YO%f*udKBT&(8k#lsd0k9r[>5ig)e5N0%al0_;%n1*.i"/'FC&YCQqQ;Oh2cWl]F0p3D@H&a]$%)hh!HrE7hHXg7b&`4T^<C>KJ>u9O%>d<8B%'YF,1OR?9)q3d/lHIpdX"q?:,s49oh.=ToEEi$Um&m80jdZmI^lfZb>f-lIQ5Vm$kB9p.`u."[2r\c4QX_m.qW@MW^p?S-%fMI7mej=l\[Z<aBaSaJ+dLl#uK2^rZD_F4DN.g=+=CgbG)KVH\`h=%:>_]aC8%(2`&A,;;Ms8*gS4i3'dt(1We$-8<OC#GJF'Rc%%f$Ye7`LeZ?U"A5t2FaZ9=Dll!F$8Ad-lP/pLV^YaEBdT.Bee`ImJ#5IJ+H_pCQ6K`EY^hC7Ei&?eS"!smJ8\phgTt#hda"mH[k;"%W4'sNagT\T.O;HJpY`k1%j('i%9"rJ4SYFj?X#p)S&`so1N__R9X=hHY%i,n94N12:7h_"/.kqA[#k+dhhrH)]J@C[-+9:SVP(e3%h2EJ>'GaKuVk+IZO5,%2At`Rs`@uY'h!o9JmZ;Y;XHQ:qbn4^Y,[7g#e1?3]!p<*ZaU#C#$sZY*i/5NABoG?O0;1[q)ul^"62$/I%(^t,=En@0WWMuM@:QKp!12YB;$=F3Z7\`bk)_"WD7IZl20u`Z]f8=;V4Vb*(NGa'Kp0$6e-@'AtXVDG&[3FV8<]!1GPpo&IU_TA"%B4s_#W"kefH>!J/U/h[BI83b*De3'N1XmrFNm/4*-K">+n(.)`Duqg@";nd-A32R0eh_[bEmBd/2NVu#&tDTsE%^etSE"9b9o5Oi%T0tMYN)NB<(jY_U<F'ZA2f:f*VY,ndIbkU]3;k>ic<"&ml5kpniP)J)Xb,q()Wn4VT0)+5ir/O+D?<Cc?C&g&=*1Jj]P+>88sGG`%Z7<&A'DWre_##[Tg8-A(%2r%B^28a4>T/KZaA.Y*?(Jo/>9;$D9C+LZQS@'k70Ic\K^A%ZO)EHGYVV7DFsaN9c=)IR0eRJc8b!4)%iBbM8lL&6B<D?C+cB3=*1q0!2)sS1HFF?U/,&n:Y>hgTf\='SZ-@6pq3M*`PZ7<UU'(H\PQkMlAT@fg>7W(@9LH1A>Op]O9'E]hd%Al<(g""i1QU_J]>1G;RR(S;_/6)C=XS4OY+L40j@,=I.*QjZAH5qj4\`!'Hm#n.Wt&;m>cq+]P`WQ2`Q3&eJONNLX%#YDOmi1XHC%''m*gh,3Sd/%FBBMO0%M;dA(R]gUFQ4*,.+s"nl<4dQ7k?RAnjKsYQKWNRnFK%Jj!+1@uY3?d1IM/dHG:Y_EEN]spX:@Vq>&lh'_%S2ePYBsn[])^jh.l7I#DMQZ"<=`Nlf1XPF10*)aD%QsP[^1@Fp'*c1E+)jqadAOMtJ%D-'F!5,<>*m<*HH=3*&'4h:iP<XWKQP0,%a[o$H2@On@*h2AMH#3HdAr;mUqar/gb4^%\6A[eXd!nb1aa_i[PkHI"]1.ToH*G>HB7hZ#'i1)ng'OI[M,E!nM=M__oU#XFgM(=q%#b[bmUFq(CC5oe)lA;F(V+C9DeqTROKA\#t8Ob?A)D2$TjMYXCQ%kO%6l8<<iZTer:nk7hYZ+n-<WG::M/uO*"JQM5;5kq!C?4T"%U-ekEfMJ$Jeu7+Ja%iPd0'D".EdB>l[45WkHt7(r;`7#@RIA%S!7QHE53XcB?gqZs)I&$/WI@2<#J4N*$ai$ifIi:M:@YTK>85$?%ctB4`6Et]+0V17X8aK+;K#p.::9A,UJt/2jq[$52nf68=CX+^gN(n,#/+T)kOntL'dGAL24TE]O!&jH;S8^NSP,sjJ/i]'L3WIH1%f4r>$NVI_W.XL[SN&o`NU;"Mks3qDR;bs3<jrSQ4jU^9V8nO7g"m'nq1>,)ijsa#od7M9:Nj_V@A*[@fc[A9qpl-qa3=Mol%V"=9%1Z]cR;k%K#b[D@[&:P/h1&JWnN&iR:#9:/g\9#hM"a:BP.>0*DOYKX1W$eAiN]G&sM3NfS'"J_r0djqRj2RkWQlgOtAu5$EC-+Tq%0o130:^HV0n%+A%"\U$o47:Kfb_@&_AeRb[:093>4d"D;:E1`Zj>[Gna#UiOnR)F)7Q4(*(\+VU_JPG'1#Wo"FCtX4;I'UE^3@F,%E<2RcC`,J%7Ym4nQ<KQP3_3P-D&Nn#'2`5.Lf_0)I@b(P6'q/ET+1#UXf][ScaU(=So7oXQuB["+lBks1#H`b&%Co5RONTc+a)?<%g3(iMmR(U?O?PJV+irmU6V^uO+fF4=lEQ:3MAif,i]P!9$(E646lAEW%7/g::.)*0^#\O3+`Y)lduZFZpCl_emlfS'2n9\0H,`%h%ZUoqMEB5FeW"kMVcpDe5Z(ta5Na::Pn'>`=?9Ta4g(*J0Kr*7!h:IBB:cGl'LId/Eo`e4#J\8b%rjQ[nM@*9XLKBm_][p37lC<Ns%kpPZADIs'/HCOC(&k>?pQ0=Z=?A'2nT&O&Z_n;G+CDC`'LP/$bYUD"n4lI$EJY/"FC"[XY)N+njdaF:ifATuiq\-pa=l5O>e(/24%?iZpn,"ig)CagNiZuX\jFp_M`7;=NX>*6b)<LTIp^p;'_<km'+@9Ar@Xp#Q$<=PIE:'@os!Jk.7R68$sAn`krk\d\=m1kW)QV!\S%hG$!09m%#FQdhimLf="'l6$_V3f$]=,jHN)'0/#9+?XJ/Ln\c\d$;ru:+^24XE3lE29T5o56Ehd'@RqnR,rrEeGONg&Q.`GSOQQu%S+&8/`r;t/La]Rtc6Gr#=6C0oOjSFWO`VY,YW.\O:HX]rGWLm.;*9s`iB37\o[8R!f`9XicE5.bY@Z6e9,nWtX,^5":o%\9bnAVC%A^OTlFV5I*>U>bKn`$r-(os!p]CSiO=UIWS"I$+cNe9J\0H-"(&Q')JaG*eR22Po*e8m6]Cdo-MXJO/^<W1Y,;>ICioY?[1Brat1%@QS0tgpHa&J2VUIeTH4c_,WXtZP'[C)DI=sM6%_irGdFg-go(TpikH!$f&aT`$I-iW]YmsVog7*b^A+H3u=[q-);2SbS63TGIg/_%g;4Ssm#,MeQ1J!=Jbp9;$OMZi/1%sYP,39[UH4AOWN&A<N2LeX_pf@0Hf?eO9&Q5u4VH.bO;V8r^<mU$_<h!nh"H6=%V&jK%[@gV%Gh)8Xl)H3b#iepm+,06b3X;SQMGITCnU_Q(j$b42YCqW"@S\ge*)FS47+$7AE13tt>V]Vr!V_ftVk,_YIHemeO)_!+V(9n!eji8*%<GE[g`b_L@i/!\Q\iT9`4DLa&&p4DHCI%*;aAQFRBMUeAZ,fEtJ6q"jopi_LDA?RQSQ9(uk+?j_hK-O=?YR7?:aPhhEWl$Nf[h=]%`/GLtrksa3<P`&hA1VhT4]+-RQ-)@flVJmn^/dn\Z"eE7G-$*<g$9I0qT5bn=m=d,*LuuD!F^k(GgY<5Qn$q\rV_gMpZ#)#)aTm?%l%(=-O#;r=W96%6YNC7M?\>F;jm^\',!!A91W=Q.W\$YeVa1pRM(h>BU0\GgE@?/)#k'`Piu=Vn+%$4Gs,OpFI"Heqk)5;R#Au\*%l&P()Z5@a1Z,A^]9>'#D`C'V<f954=_Qc]LK.ea\UqD:i4*mL"#Zgau5/.:-Nc68`]`+m.d[p6n/nrY/9HRa#@iKK;7nQKD:BQq)%ZcVljSs'&^+%;sV\84DEel*G3bbN2P_HeZA:!@+q$B+i/&[qsdd[l]jKsW_5<f.1#8eLSq.@Qr28j/DQEK.bhD:49"5V%LR0@U[-%@cZ`oU=t]"PGiXQR!>N@M0I^99Dd(+q2';G"A%COr_Z/EgoBZ>i7t=@>]=R$c7f*>bcM'3<[Fr%F"9ETM=i-GW/9i%PtY+LR^h<T%RFI,)VW_aPk&Y!8i`%8lL41(NT1,cdnj=hLY43*Cp0]M3l&(SO"O@&hN"C7g)<8[EghY_ud<Kap7$\1d76Wm-gFOH<e8(%KU9[!@%DQCm>ZC3)*(:gnb.6]'$/DX<a*A$"]6j65-KfN[X_LeVrlEu8@*)A+3=c&um/0A@D/dokfkAPLpNX($nQ!A/*YW^UL+7nE4]<Pu5%P<DVI7`&H!jG5lVKnu39F)J!*E)YeZRj(KX[YT]sNTn9q((8X>aJn?5:_hW:$6N8_!>SWkWA)&(c<5[m%%hLGRgGbc+hg*[ngOrc%m)h&9@,P0Z0LV(3&f-)P'rpkk\tc.TkPZ\=7AcF1,EFZEjT.hg4XPo8:DpNJQ:#P[mfS$.:d.5uViGSuUQe[r5?jC:<[amDVXSG9%K@Bh$B'EKi;r>4`cDpuN4,YY\IVFP9Y<usu^-e5SVa9k491#jM$c<IVT!1SC*.;YP/=Ug/LhaiJSr%Z-QKGg<He732#$74_>JK@9%?e[G-934.Cd4g#R\_sasH;_SgKTL,1*/WV.W^ElGgT!L]I%.G,6e]nZ<K:SQfSZkEWJ?u&J7u:*Bo64$:-L#!rD4%:,2*Q)j.l'5%pD'n1I<8hRqn5o"c6?HK:IT,^[@53u<Hn"D0dNPHU7`*m>^ib[UHEaLls=fYbH$m(1Ksf!K/K"(H@iLo:-BtVjd*3V.nksUkhK7A%d1F/UUb(BWn#3YAC/Y.3oX+:*NRr?_8KBH7:pVFGoq'_G@2'H5Vl5o.>3!JS[)Th=BoS'J<6LZ[:eqeU18Zq#&f#FhWckijAUMg'%agbcnf;c2?[4>]-:=rFBhJQtsU/2m)e&7>1S[oqfgt=#lCerm23bO(jgum=M&lEBkibt$.D!Mi?XERGSY`:lC)-QF"fV`n%ZgMs7%4''!A2Fj<a@WRe*Ufjb67uV%1Egf/9.TaKnC:AIPcTtRDMZQnaVdq;.hSko4NZ;#8H"tBgGB"1ZlJ`qHj3j=Z]f'h+Xh[6q7/CQ`%-K@4<!!cG+HQHGcO2clfC\>>;o:?MsGu$Y7oPs3q3P)nc9!O0/(YbQ<TogO[I9.^%,*..R5/JP*IFib,7ijaTPpu:V2kB5eWS\Cr%`bhF(:d=OMdUBe"PQrESH"]<0*[1rRLBpE2U$4#skW/<@gbIhNCFN!r5Ii^kFqU.WnM2P!i>aM7OqmMMiM<e5Er=Ft@;u.of?_;'%F"!c.J*F2qpo/m<kIAMVa$g\%0#GGE9hu`F)jj4.EU,VF<+u^$:o&l26i!>FE$+HS[D'N$O=dA'b-%*oMVf/RUiiPX.">l2jP2rK%>EPSs\"\QW^5]IGMJqnHXaD>.kF^rVnpr.U]Cn;,R"mQ#cbm1MGe/^IO<G-MpIgNLmF7(iAf?iq5GXii?$cjUb?,_3B<41jl2dSB%A"@q_)t#keSoPn,3udts-%EjCbTrurilRGQ`53HKGY!]o]7gp]-LiA&L,2=\hM1]k"@N#Z6ALYDgQ4ut4csfT%T_WcZtUJ"1Pp)7%ca45UU$jX^Cnb^qk@STOI8!U]>Sj!si-?n9X4Qa'Hg3*9Fmc@mq"E?C*F!g%RsSU5IFO+oZY@PWoQ0\=a6N?I>L^Ke&LT\Y7ClS+%TB;O;MYjGW$*R>:pU3F!]PU1J:WTI^]\e.tl#Vp(T7%dCZU$r"`bnlCo.]>fjC-c-[9XinOIV)_2k4n0`h5&]Q's"W20Be=1`-:,%&>Y8NAu6^K4GI\&8&c)STBDTD)S,J[qtE;GoD-8tCq;ZarLWgF[sR9#h"o7@\W*#Lk)g1B+5D7CFM`_?R@fE\SKNl]>K=sK`abV/%gr:>e\b.tgEuT.1n,<SeGFtTQCO[fuEq;:G/OR2?fruW+39PY$E6_t+E6_t+E6e3&iLEkN*O;27!u>h#:V-6*hJ:-jnY\t?f5]:(%I#Ae/'V@FVa*9o!P8=EMcj.1&l7q2HT7uTGi6SDJ(V#fHQ3:.S@DuB($^;'.,TD=apTWZ4a0:.'<eB#n@7A1&0`)\fBKQTU6r>XL%\/m(n0+"M9@E%9]4"K:=p)`nmBmW)6AgFi_<l1cZ2RSDO3V=*@2N,Q'p5Vc?e;X(dWO&OV:BO')09N[.!?=ihou0)ICZ3aN*Eg5h%dAsM[4qXG`&H,T("?f,EpV^#A02\F#?(sZ^H`B>A4hNb@>K,21WMbRG(3rL`Q0R=,4'&VahXD/`7Z90)U5S^6Bo]/Gn/)o1Oom2n%'>fE,LW.`XlmXFDmlZ"N`*%#`3?O_``iM=td`(A9$L9<&2^HH+HqH(1ZM#OZngY4R:&5dO]jW'@A/uErB?dFbN^o5o50!?UEf?WH%XpBQD+i[=,LCq.>kt/eDQa_A9(ftK[hNB\sREVJ*/BCBIN;:c`o;-F(Qi?T`DZ+OgW>SX;WADV#"%"O#oU4;4;`\\5A7+q)%$^Me%c+%cZ\TMlHWl<u2l)lAiYhJnMm5:n#48ZXn-h@T!`d0C(l^:d?)=#<VP#amelH)q">R=uC-VIuA4$YjY6Mf\\:/>c">t6-;I^4:p%<a9MY^Y@eYG'-5ZAu#Pjbce[hOO`doWCslHA4X<Xc&b)+!j^E5mIh+/g.@5H>A8Tac!U0bdh0@3FX@p5pJ'A<@]>R$XJd)<?"oPE%g&:K/6ukWRmJ7=aMi#g,ind'ACZ.E.U+#^MOM&LX/Xk4A[j3tT[NTSA#s"B-,+hG'P!tHp9'iPBp=6>0Y_u5]/nE0D],!upRD80=%WEp@eC9NF].i4sdd:!j@8_!(g(TCq^\?KQ0>HJNfoX$s[*,Y@A!u"D0?eq.6:'_OXA'SBQ":8Hm8P'U^QD,;gf%d&7iW*2F9C.MJ%9]Hk%9$ifu&p02?HgE4EHc15G3[q2PQuglnH,eQ^$/"FTb?uL[$(n!!&Bj'7(J3IVh!gQ9_PWaga>3YKJ>o1'f(;F@R56jef+93j%'*<m/Qnu0n!krFa8Op-QL7f;[er6C4RQ"H52sb1BG&XfgFsL`nZ3ZU`M>_hjIlC;B;R*.CgC&3jk+/t9D=N02Yn+=*;oT5[qlq:r%iG1uBhUd%:4cVJ1%'086>=O"eBS_A%*Iu?#K\<-2n[%GX^#G>JZR6rX,OB[%'Q:T2])=dm1q<cKbAE@O!qam5-+@(0\3"%\YOPIj%*rj)\ob**d:CN;0#gmHE[`)q-&%JLa`*:VW$'8sqM0%G1Pce5<J(Vj_fWr&"(cH`8d]g]Hs%'e+2N?)=AOGU+e:oemRE0aP>tZ<@%eTuOFN4l\\@_ChcAr\KJ>d6b1/\<8oA?G5JdLIcEYD!F?["j2@g"dj;/.1S3;IK+VW7qm8f6AFSJ9XY#>ZPbR5"fUuZ+.:RBAI3]%q,ORj3tJR1>E[),DLV=p0-^^#k&qrqrb2e.US?BZYA57(-@8#475l;re)^7sc>c:c)-iNi*1m<HZ(DbQ`E$t]R!%In4`=*fM;t_H%.b\;%l)Vs-:2$lFE&Ss\NEA<1BKaVS@LAtO3HRX0&m@NOY.83L3Fb'.+O6-nW17&!LV6SMEB]W-C0YYW)AGc%T_^#%VtL[KG:IUs%>'%^,c]#hihJY'1eBBkcgXMOJfegR+`09pZff$aih\gW$E$_"O9hGLk$H%Df6<T(#;rBkJlj0_'5=\u5aO-k0?9Aupdh0ciA5D`W%V'ZH.>/)jeh8JJ/D%:I9oZMJ37D2JN%O0k`32"_\_6.2r!]8en3EO^-0TLcsmXc_+!+\_tQlH[0n@nNMGGKLnDZBMo@$rIZ6ikL6%a\9^)F"pIn3KBWu12FUT/4bP?QqpL@`VZ`N]Z'Wtba)i5Qf\q>/#:;OXjR;&#%2?e>C7lL1c+5dH&4?OfU#D.XPG/?Se+&--?4aQ%NFt9\Bq(#`Ri60,F?2TL@@JQ,(ia3^38ksk$f!W_pN0m]T&A5?];&u.RX^b;=]/ZSG0XYj2A(,5V;'q4ptjFo>`;r@Qhc_q2#DmD%jCUUQ/.STn\-0jp`q:?c?<pibUBhJl?G)#+8/V9Pgc]4BgV,cb:fVomHtFq$a>P;k4)ATZ%M/3MbNXaUfOK>FS@3G7S/+?Cldf&u%iL3qE=:Gi=1dO,KB]=&%TrudNNiE,bbJc*'O>nZ_T+Pi[;sL<7[Gc)u8oX"R1h1_<,!iYSaj#]^E^8tm/,WV[g>pLJ:V5Ad1fhHL%7>d8$-4$Fah4qT`]ufS]8W#g8KR&ppm.A9!H.usYpuU-DifcW^"rHM46p.32il4>Q<YpuTWi`VHfj_%AX^cogP2QcNGDV$UVQ`5I%aTN["j(QV]^gmRBL+qsMZBqmI>)^!07S,I5I^)</)Ol08;F2l*,%4>nOa9(EAnaC!Mu=B2,KfD@>n6)3+,s!<e_8`+Kur$1JgE=s%r&,d_(0qbfX\9XMl7Ui0h3+b,>rr5qK60DB'ECNo9f08R9Yl7TE5A?^>5jKFM5^#Oju=sfbh*u?oWDC\3,?b_=hV>0$ushRioMt>%p"lFu"2FGD5jT?r?Cs*Nm41Re'A^+Fe>i?_L3;S6b8)8;K#c8%*>(^,iH&i*IHG!#'%.qSXE]A(fQ?&nC;ZJ]&2V8%2oW,LlQ4A`%)M5WU*oHB)epJ9$R_^o#k9?_5l1a'Io.=<4eOVT3]L%ekR\Betrbc&/+hMfu"\S^iou5DT69Z=9b3dW\$@W`gm[cQ)`XXXf'`,AX%Q=c6kbZ,K>U7T.XN@3S7-LdX2+pg[Q$5&nIW8O]:>/ED?h'2\M4dj(dkD?`0d')r'$nHBh\L!7uDmoJA-XsgumkqM1.^di+Hc9T$%4j.7>I'.>:GbMeY``lrNd:uDP$nU`9+s%h2_Ip5"<>0J^Y$Ag_qXQc,WeKCY;b.OA_Entk6)b5C7TM"%5h0)oX\HqUf77G/?JBOk%=fL!T9Yg,Jp/.i9^A`;\V"*%jp7cT0^0E?&rJe>h!C,.[DNZQg^uFVtfBe@gCV6c$q&hP\[@*CrM;./M*\.D)I33?_TquP;q42Yk%P;gP=O&h:F0Ct3'>XFOCb#fYOYc!)J/<3f%C&Y^HgOi`"Mt!t/7B&a`ofuiufV*abY&B_@kKISYnBd*VqWr,IN>AF5_';F@lE`qC%:K8OfB8C2/c=&<&9V3Sa<1b]FdU?:%F0\0\C6oRC"nbie%F6;'V#$&880p[:Ak9k\6tVFE0NW4hqA0*sA6,^KZ/i]g149A667-=@%$ur^rC-Y[o0=?ZHN;Z/A0+EV'TBOC;Fdd63rZR+^1CH2+&[q5_,0C3o9(W^*<c+8U=CX/]]%,ikPispI%30D5L+Gm!#-orVbueX"%HWl0BU*9$K7+E8;Dc&\C%EnRl>f"MY&5-`>oZP;uWH[Ek1(D;oM,Ilc1n0FXhC#`]P8HH6HQ"R-QrHoqUn#lmquU<<YEQUD@AHi1%0:?kS%9(R2BcorW1'a<V9f]+E;k=Sgnr3D*e.YNd`fhhf<A<MY*2ZuIP:;hATd`bSK8k0*IcA0JEd\9Q_RQC<6T22'mHo(K5m5VE%3RjE618#AfI;LYs-B[[O)C+$*ZB*i\ds1N&&gCO0Cl1S>,l=%HKC/5c#l\hdp6g>K_'%LaS/5P=Ql_?Rm7XR=*3@crOrob*%$BpM%iurH4.W#)to6s6=caXdP8.&N3dMGFY>8iZQgket8:R`SlIG-rK;Wu]^N%fgb-EY!Gqpn)jb,emY5HF[Cbi<]<9um`e5@KarK$dNP%"/,0:F[>;&AmBH?F:$c!c7OR2/lA)I_E=(Fg6Z]I![!'5:`r'n9klm<c^.X`d"Dg2A7geiaR%?O5I;M3"YmaXOU72GO*m(l'U/TB%So:%VBGtSK"%"6SlTh`sWE&#hck-q"Be3ll8.i1UUmc#,1cHcE(B6^G;,WH[9#qu%Oe=*c=%=#eH^_3SVhkKZB)0Y37ZR=a?[-bq%BQCP^?u8W\+%=>:Wst@sCJskpMQ9bs9IbDC[9[`6L_j#^"[KO27C/1=JHnd.Jkn>=r#,*REEi6:<^'NP0qZOA4iK%s3`-ICKMqS6%XC30!(O02`nM.t'"PAS5nD&j>(q)_^7GYbqb_*kn98OoRSK^-=9Ec&=h$eXfC6pd6VMlh#g6DpN_Y6#De*M8CM-.PoA.s;61XgSZ%3N8`T[T*(Q$1Gu.fWA3^+jSiMJ7e;#N>i&-Ph&"75K\#+]07Y2eLd[5@bi4MPZgo]dE)`XV4lmkPseGR@?lXD#S]VXVLmRd$*;a'%&s0&$q%F'iW%g61K;QsQA.e\^,L^<p.M=Rl5Y-#NZKKA;j3$5[$lO-3=uG!gEIV+;HH9c&_el(mQagas_Hu66R\UMeK\7\i\4tf'%&[CE5i15e%\1KY%SId3&YYEZVdF0Gg5K8nC6kohR_BEa?:+@D&YSGj0T#f,4*a)7<-l,]E$L]@sK)Xh,s'hT"qNl^0]BdMd[m0][%?[qn5^]*29J%Q],^OH(Ub?t2+GJF(9p%N4WrUJKh_VbC]jWXYDqXuk_HR[kOe\D+W2ui:FK:_HXUM'TCTkF5qQgH5Y[3?+9,.%!2%Y[upm@k6Q_Y;#nJj,<nca=@mEggY0N6rqpDh<FNHb:Ht8Mfsrgi,+Jn;M`s=CN2d'Ha5T]ijt=9=1)7W3Lfl7,INX<Fbj!K*[iAX%US%;S,>Ui]$XT*V0+\SL=657>E0WMdjiUIsX.QEJ3VD#<'%8:hJ.*c#OsduCQ2!7+TfJM$OP;]N]6H>9W$0eK`OGVOM\*->A'Pk_%"L`!V("iT)gju+*:%6u;66_u>ju,X=g=.Ti2b?/lb^/X0LhW-[;@IR8D&OL/F.s8gSNN+G80bOrUd!2TL1M.l0Z<^m/G9Nf:SDhl%/f#$6Ma__t\S-.i/ea7&V&,%*BB[=/APKj/=Qfp8U0`f6I*DOMUKTk'afpBY)OsIfaLh+5N(VqE'S:>GJ<4(+mS`M0S&IJ,lC(G,%+W_q^G6oG]3m?(Dl7$tE`oEL[</(;s_F)Alm.:>!M6gKq_C;F0)EIYaXQ$td]IBGn7+t-TIV7kj`g,qGnQkn!3g&en)Wn)M4[W?A%+H6ig%UMVdf$'L/51n6u[hEGb$YcN!YDK>45+?jkjJ1Pc(Xmcu*gJ0,G2[,,%J-]!UT'fO\kQ*OQC)DhY`C?S8MXG+[3V%bKIfi"%YS8+/V&2l7'hMluI>Z?*&&g'I5/UV?_udjSLr*m2g9iLGnf;,o2BaFL`+B[l*-H\g!%->IUCMHj8?fG<)EZK3fSSQB6U;J)lI0b4%JSB^?UsR)8gt0WM`rn-;oat>bkN.'aGi)E"Ur+u`Gej$6L3Z2nKelNQIM^q$\c_TthL=W7PbN.F97l-['FPKh$G2s-3"VtL"&Yha%h'AC4iP^8ZI_hnZ"L+JU4:CSFMgW(f#?LV?gaeK]aZIY&h4Lh']4%\29jUcb-SiM`LYh*gKWiP4\G(##CsOBKJ_*#re5'>JOnRs_%0.$#37+2()Yh5T$'DL[PRucs'a/N>cE]W4=Yfo,8du9>T?Ae@B38c:lmuDYm/+Ln+G1lb;_6E;tS3*`5.Hd34E@tbH3V3EfBe9';%G'-dI(E8Lq3C:JK[^8kP9<HLMmqLkFF)kIBE$mXtMG.K,*+=apA@<13)g8C;q_ItbMQ/(G[Z`qVroh[C:^DJHi#$c+lK->592la#%l3j=@8tAM9HGW#6m"oa)\b2=0C;$Gs%-)YV3V\#[fj`KA875[YWAnt?X\/&'f4.?l>k4pDM,(?S43:*);H=tmA0oqQ/'Unr]!+BC%@7[$Q8;LfA0pe/OJuii0I83g:L7Opdo`U]OT$'\1]=(dNQ?DbES@@!_S]J>N48p3W,^"`@0ZW].#6\KefF`M8'l#eZ'+Vri30UT`%<+hZH-rW=Tn?MpR`a@_@qTh;'k*c*ar!h8e,n?hrc=-@r[>M/Q15kN=oN'1-(,$sdbg;/sA/;3\=KJ)brJlJsEK3idDN-==1[j[&%QM?\Bb-Ga#;X[Mqd*CjWCDGalGNt$'oqe6+:0KJ`+J!ha("JL2OnupXA=2E+]ZVbkI;mV!)GdeY2\$hbYIMPb"C`\AFZgAf.D-^J%IuNZ&MS,e&NV1()Q:=fbP_h@re#%Z5/3G^#?Ii@YZ]'FPODW7qMYHg+pMUXIF/r\^SIpP+)=u4D*ALd7i=pHk."iTb*'o=VVm,4,%Y3,p"01TUXZE$'JT&mT:"I@dU_FnA5Ypi?)$pQX$$o.[9>M7,;qGCdJ7_nMP3Q'M^):%1R_atO[*b:2b]*(WI3s/CWkf0L_ik?:F%P4EOtEZ<6;`ESX2"QuTI7L7u&H3kab$H;$^<Ui[fBrBtJ2X?D?og\@h7.QC\-2s&+S:DRAq,lok?&)\OVa#%Uq1XRq\QD5=>c_@^%/p:In+W"q8R#<h<b\j>%3Z6;34:W#"3Y&a*5':^5T=RdRdf(-U[(goRgAf0qa,Xf`8V%'L1#8!"WLXm4pa8iu0Nmm2%1Z't6Ut[9%@'Ub3JCK.lEXYMC6i*TF6H$En3Tnm*32c:gO=%!#*[2RRKXj\!Q?,UD(f,H()gV7LP]e&4'e_ZECo?#B>4oID6fM4OqU_Y0<4q3;%!5mMAfENG6W1Sss8ATLWL'8[:rHrr`mGaRjO-e@#>W'Lj_?!@f"nJ,FQ[6LbQl!2@=iZ+'pGO1:PWR+<K^,PT-2BKK4sm7?*Ki.L%%I934gTh:1(dl;RN+%,i`fNA%ZPaF3A;jr,C+H]U`DUVZSQh`?8n9*QQ"HC7_)`jE5'eb\kLq5bm_!j>$M-8'InU3u/btUaV5fAn%9`A98fdD7Xk`\5cN6*0ZqW*\\II\a/WG^]4P!>onekI,Oo#H73VofY2X>)_j<7uVfn\4X4C4A?qj6(KHW^?bpB,K_G5SuB`&69%b%#7uX^!JDV+!+FLgpWCI3Jf:4`A-AeG)2iPDFJNu9r>%YS.%OT/6NEhEj`??#$R"m(HH[U<k0AIb"gd+q7YaR_.LB^TDdeAP[1`d8%/sp3JI-ZAeVH]^uq'Dg#P`KUGK#n9$P;*j^4/-+B>S7I%U0pMO"iKRN_$mDkc7-c9[)RMrH'_kS:O[#E?PiKqfMR35QWG-mbN]>E%2b)!&4S!`BQX;+fg7EV[4JBX^,*eL.$7,*2\L6agCYXQ<rB'S'$"1WT_rr(.8$e_<St43>@r"Nq0F=cU#*8sfirL;XV;e7`16-4m%>4t;a<&mVd<'gL<[G0N^kleE'P%G1?.BQ!9+J#$#7q?OCVO9hKi(57@;K!T<:W991psSBOcKDjFH4/43)[#cX>f@j_2lmP>c%kQd%F[Q!jrOmJ[]1QeuN6-b?6R;^2dU?S$]Gh`mI>IRp=+./'U1M-_/_1^Gd`ulCeWXUIYB0O+0s9*$c@p"qMCDNQX29flC!N),:TeYJ%jIYYMgd`kcPp]a$&3?*ge3Zf!2(VYieC39@"EdCo=D;<rF!b\5Q&HU3Q]->LD!jG7Z_o[a%7ButZIbBa(sC&1lcRA7=O;`!>?P*a%Kl0RO=db#f&d;E@2eK1Rd#LOF,d_&!9$^hY@+S3JXG#-D[s'.PX3teW<'M%n:oD"3](?0s_GhY-n*c#GaBMY34o>/L]`qKJr1?tD%F>^kgE=<StQ`Q3WW#N9JZILAI4U4kH"afNq_4Cjj?r(kffG!obp+D;tSHjL3<GerFHU8G5A^"F;on6`A`i[:=jH!;E5rl1;Ln%tU%`&ZC/0e7Pm?q<;4A'km7Y[pkd+kSP#X$O0>/D.7!WIlcB:GM@$$B7B/(*'MUM3d*cpUs:@a8d:*<^].sWueUl[7XRF"=k=V\er*2%TkMZ3UJ$YTo;Do:-J7UFnjH9/()h3_oa$2=`3+7r]>io`&RhqP6ou0CAuGl3MfLJR)7=./\n251An9+C6Tm^kDB+("<i^7VPgp*M%9>"cH`4MklY'i.*bHDcpng!U8j=1i3Aei/cmq-.mJp6g*]]$UM(;-,:H5!sOGZn+AME8*Qq8tP+UlERl/n83j=N,_YIQf,.gp`M+%`eo,3P4)c+TekST5N9S=jNWoV.?#UREl^aiD^H^uAhrN*$p11B_r6a`;UVg+C:Zuco%S*3I*?N4H__KW:8l0jg"C.Q]>W3f%[Or\%MU0Z_;_,R@"]MstaOH0!W>TcSZ6M,i_^222FL4`=NmiB7JQ;ej%ajHnQ"aXCOcG:SkI,\g/u7.b3I'L@Ro;=E1A(@uZ1Cf^H*HlW%b0f*R3\8p/I.*JK.R-L:SqCtK;jk8m9Tu6d9bsP=DQJ.Z#e5pCC%6`bhieh^?..^7p\(DiJ5mt=T77\Er=AF8OfhJoJR_X4_;36C%ANDF\r=-";EM9TEMM2//U]ALK_meUr&5=]%"`B9F9E_35\%nS<;UM</"Jr,oc?G2`Z;'^7ALol"j#Qd@6TO3h_7qFukS/BNg<!]%%DqKQ_:edD"igH0GR!L5CrV&JO6?ku\HaF@Od2DO=>!6;T^2`eM?*gWdkp`Z5T8SkVX8E[WG`em:]Na;MK6I^;@286CGYb<:)4tOG%k@T!<_7=hNj*Z@@Yi+;qO$SD:ZTL,?2J(J&\=l,X&P0r5G1+;tV4qdKp9DYtRub[*a$!Kq:)?rXmqOMnkJ5hYnSs?dke2Ee_WUko%A-IgbQ2FeX7=S>?L;64kF@)58TA>FJDHu1Jd0J8UE?UKi`a%Ng#r988l8]a+pE[aBCTW="E35@8YRF)3S&k`f9s%%VF78i6A@?nd%W=pR8I^nFjR-5)iOOYn?'sa:sM2m!*'-6s4-9?f*=j:HN6Tn:I,=`i>Pu;'BPM\9iWjC@5YeDAgX]Qogd"W2.<nqR`GQi(VV#f&E%Ps'0NiC@VtWDrSE_fqEgDu0[X3DmaOqF(3?a2`@B;P6q`6ifs='*TqP:L$Z^NhIja[:6,JfSflUYo33uBgbr$Oj1F:Ct\03e?`-R%50N-bVfMSYBU6I^V.$o^d_F<"(^e_j/!e@+22rgSUo&,uQU]JmS^]L($8lBjV[ai[O,UDmSpu0O]6DnE`qF+O/t!N-P'R!YKcdf'%T;*A`<[mt!G8sF.r*[,NIdEQh<"ONFX"k>0IdF#-@ed3Tjt[)^(W)@W2ta6:83Hgk#Qg*HGmM9I(kT\6.0(MW$p[??!t\3Z"X#a)%4VrWBpeY2[;u0;`NSUM"7!>3F=Tl>IALrGhLQ99nn3\R[cL=3?1r8Zk.'IoGl*+RjTqfe=pn;1MZM[Pm,?TCEq[kAD,s&9CoN)@3%IDMrHK]"d9B+aLQE\JHAl'l`"Tkm*`Qhf0ET.qdq_X]+C=58ti);D-$?G2JJ*0K#$?($&OOr`Uj5Kft7\(_W`>up[j_N#ci]2.H7%]nVJK=i57_]hdgQQ//A0QBg:(o9SK5mHA8]&TKLhLhDNV=J*GgUebDHKPk=U2)d;`'Q3!&=\lSjqinf;VAQaGC*BuXN/=UDi.19F%'tc:0#4Sju3?Yri!7[hnN!%7b=>6OH/0lK\DAa&pW@)_Hj"Weo<)Gg0+]ZFj,pccN7#g`4:Xn11q4*sMI6e_So6/h.UIClg+^6FM%:M8`>QeuGjgfePk&?&q)Q&LUB%6M/)2;__<3u5B)hP+8Hj+Rl0BO\N"R[nbn:@L?fjjSej(H3LZQ92/c^XQ2HbMTl+=BK202N=?$%S97NHSB%"Y3KJMRjugY:b^#-RRIe';A.6)H\("/E.J8Gb=<g9</[Cc#dL6kLT63\2IIrn^`u!/MYAV"!:'td'!&>F.pB2%2V0T/O%"OO[f$(u>W'0t`$:B6s/QiO^Z+TWiV8VN*,f9S,lV"']A'33P@APAA'G"K_T*/URo7t4?"E:Z(=bsU,kEglE)_`?PjL>s8kL>s8k%L>s8kL'+&:n]V&G2*/-9#gY(8(+0p^81,5:(cIHuSQhUofYFI408qGQ?J(6;O*S!Ckre+SL904E;f?K;KsKTgMj'd56RWbfR+?t#%(]96.`OQGo"]m4nOqEKr@kJO?7'U^@,T%.__2rUBB"nQe"08#7Ks;Sr9O<'-b1j21UB"WtW/BZ@f;]:pARI0tMX@0n>^O)?jAS.+%[\quV8=nj1)DBLV,5F&Wou%jg7Io0?,>4C(VAhUU/jXS9b9cA?q7I*4,5EL]-uPrMUAR0ZKI-2")r$IZlt'4s4e*dSM'__l*@olC%DdFX6i?F,D87IF'R[cDOF/),e#p;k$4!`6k*S*jD;bp77IqRnb@[`(VglO6Ahl#]SQ5_`8jl\XYj`YuZ(RDfphhlU]](nB%Vhb(/%LWKGmV8L/tS[rYkbh"jCp\qcg\ej<Z<goW(Qe3D_2DXSiPLe?qI.eE/C1$!F[88J3(%nj`""MRk;Wl.8Y)M/bHn4n^.u7?[[":X2%>XG,$BaM%j-)n7tP2`*d=bCJE=nUQB.(=d__tntiO+toMkHruj0AYe9L@doGY:V+U(6ocg'pU59TF#PGU9Y7:h:RIV1(BQq3pf:3%fuK#,f4mhu,K>Ti6fH_a([V"?9'$#shm[gB]Lj56Y]e.HlH^[^ZY]g[5>eQT-$HF@j^`jJ@55c#%u"2D68MF'&oYL5-HrKAliD(O%?ot2l@8#r>Dn3WdYScE23l4EdQ4b\GRBUDgOX=h`^;PmXhK]6rUVF":(ur06p$@Uqif3F!T>HJVWlJZVHNZK=@Jd%!48&=_(1[8Q%9BlKTFboTAniB29PiOLHk9RI3+)TC@;u=mASCfBYWH0QZCJge5A+aL7bGUZ-4Vqa2=tNp;Ri:&/?ej6Of/^#0aJE1!M?;ktVb\ap%=[]:q]N.apMO%bb_I+5*fa4L^8)p%9Nk]t!.WEQHqAt>%cE%daQ[Q^u-5Wkqp1IL1reE_kg6o\Reb.gL\2aL1^Wk[8f=*9Sg:mO'%[s@iDT6tQ\/9\I9`dJ\)R^1Rs[)M"BhHp3),NRKjFh@FVQegOUo$MU]:CWRil#]XK\gBXK1Z,?lY@Vk"GUsus#!K@.m7+m7IW6sC%H05@!*VA.3IW8H=afXt84a.E`*+b^'hTNJrc]8g%N.0WWkCTD\o<k%=%=3IScKbZt2O7od)T/M/2s@fWVGRkBcspR&;3nAmI"S"0%/'8_#=9J3j]W?FuCUS--j7CE'%FF-]\8CYGJ)6m>ol)F[]"C=iYN78U%7g@$4[7MLJF!J'DL47E)ta&1SC\3rEj)"G3YQgaK-&p:%V2%"nZ*?n83bp>)TI8Q@G+O,]@D%X/MD)'TZY\6tQ\^C)37GVshli_lRD!Htf?J`=P2b:Snb'W[/418g*MD5KE#3\EZTmoFR><B6%5b?Zc7LLP^1WHWmIHR@kc+?.`iP)LXG<AVb?b($jfAKDq7He'1&`gk.\G7AQGLt"[b@o*$7!><bRics]*+Aqo'HAH=PP:hJSAP`\%au_TF*t;u*I9/i(2p.Gr;<GZ0k+gPob#F#>5-m&ZH%;f8F"(JbhO#`j]ZL[s?fJ@$FF8.P9V%38^jV+K"u(b#+7X[7Jk_fih-UqZ%[_sT*[8Q=6j>64AVG';4[Y?,=!jJW4XlK(lF^:P=^JZK:\d(UMn]dkt3n9feM@NRp8c5i@qTa/Rihr*7?XV3*:c59-n1OV$(YEf(%iM3.COM`tcO,Z&m>1tG`_e$Ggc]:!1Stl/[!di5QfV9omF1Yr.O/BJDZ0/b04=MYK]OT9IL70IRj;iS`[(YHdG-:6pp=s=o*&cp+%7dTr]SL7?*2sg@Njj?QaELg@t""B9mp:*l#F7JP*cS)NC=#\I55/4m^^h=\X[Wh(XX.8<qa*tg;SD,'2I.'fkH,gu`]9?"HZ,]>?%:X02LElXc1#M"1l]5AjB3+h-kC+iPp,(dMaCq/2ggat(hahSq](/L>69[.Q`ieBj9iE\*D^K?9ZdC/P"Qp$ndU-A:"[nZ#7`l2;\%e?$""%s,;9ldmf`ViMYndQX,md&!ORbi0YIER0)`+f4<Y\G)!9ctg2h0s=sZD3lN`6"8n1Hb]H`QRkg:\4Y#\"=_"A.;!YQL*sl-%q=@1iDa+.j_`#0deZ,A<4h]5T1E?@+dl'a5?:.4!>^ZWkmI$IXIc8bPpkbBO?KBm.mrs9'Zu+9IlRqFmhb:t)m_6d.(OPqt$\)l:%l7^PYpXNSfFc@L;a7gBJ\mCPk]&9"-pqHL8IUTQWgOb'raCY'o[tght+YckeWH'n@I<[<3"@]_gEL;3-*k0hQDa]u!"XWlpB]*#7%m=mbf[rNm_]O?lI/WY(m*qpo%V%Bceq=>!\EBg2Ife[]A?XSqAA6/M&f01Z3p&de5_<;>TglkKS]44'5ZuhZu@LpL`2='<DHT9l^%=XW[j_f9_=X8@o?*%)8lNS*94931kK4[->mZk7Xi-Yp,N7F!.D,dGC4;EOU^H@0R2HeWP#_pT.o!M`X1Xkg5%D/u*"*IBW+`86pS%KTSj.,u.YU]o[t1<Nfb#+l^728;jIUL.'pCXc2K4\>$63FupSr4Sl[=AN*l\nTV`C?b`g<&c6D]&t_\!k>M%,qFm29,!Vj.PkI)&%T8L(lA#Hp,?*@W%eLBo27ddSN]Dn&R517Q_O)ql/FK]'HYUKrFm]h!,pT=a^`fSUaXs1k6`#,9!]#>(JpHO?[[;;P,#Z7at/3_Xp%\^mrk\>1Qa/L].\n)[Hn&C0M-V3&*LilpCmkZlnKWRie.&76R7e5U5&A+:A_V5[/\Ic'!,A3I"I:hlIkSa:Qfc$eo*rF3t?OL>%M%*+\O!o$*ar`*/U0#^LDFPj.")^4)ab5?U-f.laa-oZTL>N>s,s]0rEBs7c5-b]180ICpX<U8?bmn6,2X4]dI=c]fN$23fqlr)i#B%;\QfM4o6$dp#PY\go;r^X>?"u`tWY/p(U^-'(+VB!L=8gFO:\mia6F@\)/0M,$i:+B8MJ93!!YfFpC9L#fa2hT4`Y>QrI?Rg%P"V%aM&qc:Yp/-5cu2'7qD>Gb#0N;mtGYV/\\/V@nh3SJ.t_fXH?Hq8TPOL%^7=$M;omgOsk@@KM*eijBeJ,M2Cs?DgY78/tMNN40Jsl%7r:'02uRC5/Y;)b=RRAKO45.rZ=e=SL@>Q5pu^6iYbh*;D#WhmNADVQSoMpROS>W]]K\/TiV?mT@h89YqGh$.DUCZu"@\YPneEdT%>);<1N#Z5$j:]K803rYZ2*<-)8bps*CJE7c^f@j,5SYl&61!SX[)^[)a+o@=>]"bc__OYu*S=j+Bhsda/me*^U[cU,`G6NEpa6Z/%AYkI238:27eX^Pcjm^Oa,@f9u@mc]_@`Z,aXkSOd9edn#b7(_<9M4j"l'N9NYPm9H46CdkQ&,BN6dKSVqZRROJbOO8--D_T?L56$%mM_l(NHK0SMn=SqFkYu?(db5Ao%pguAp71S,Dm,a;r!Me`q'pVfS8qM\hbVqN#eue=qRM/NnB6ZU8P5gD*5"c%!O\pFC)pt987\^%<JcX(N!IVqf[Y!))K]jLK+4!%jM)jT/kHD>Ap6gaBf**Fo_mD\T/J>S1rLmq93_dGr=6<C[4e=L155oj+\s6r7s2\AM3fGC`LF6Q%/ks8aCr?bP3mJWrO<Mo']&F?n@u;(-g2eB2>#XrsWdTojPU6Og'=J(*e^NZ-?lI@7;jXegg6sTdK^W:WV\_nEL)lO?$&a-I5'j<$%V\nDnZLndh=$4P8[uVBgb%L20Qq]BtE"d3#MDh`JKaboL+eCIV>.H\u-iX02O+r_f7?\,ikfu`S16F81JOTXl7pGPeJE5s"5\I>"%!np(k=Z5Cb01gUt8!L7iBgTgE?dK<?8n1H]6kH_(6nb<`"7l;BAU_c^5B+"ORJ*%&f^=fTdH]#[@OoTr@>D#q3@mEp9UgoVZK\MA%k5?=BhWaLu:5J6hUXVe9Q8I%X]@)&$crIQ^]7ClOD0ssQOA?6X?i/U/fArjp`838hS*^WRV_G5I.kP:gXWr:?8_T)u%;FS8qhnnK%'`Bs:WOP6RL=?cAWA:s5/p'.[\ZPSMUi-:')bEDE?,h!RB.UdQ4YesL4%Jn0X'H1C`9n6Ge$.K*M^O'*/fAH:RE;*hU>T:D[*l0\%(UVW`7/8Pk6c,e?3k1R;2=YCg)!7R.RPL[\X0+g!D'gf7E9\lQGoDa0+Aq7_+qYlS,>F5"g*@9=O7l/tjYe]^CJ.bh&r+b)Bo*Le%]^GoBRge'&=@0j*![jgpTbT0d>pmNVPM,5WD+Hf1@AHL1gX#X5(p8f@E-H[_i>O^=qj5o4<e`Dp/M"_!QnkGQ\KGHCDPkme0V)0t%b>IieW=0*,1(^39*82,o)33I[OJmadSAR7LVO+aXd@NOi%^/s,]t15_-RbTMk"9a2?bDK/<pS.>cIeAu2T43p[<oDW$qCc3?Xd]8%>1A0df]&C3rN6S.<BYN-^d_81DtG1WM!nFNOk)&X5G/:!B.tUpSl'0$O#ap.W:=l@+`;Vnh6E8obm;@"6kYWe+lP-tQuU%dLUaY,%W.ls?aKS&m4!=7/?$g"e.PTNAW@F(jG`44F';R(g8!uT0qG)EqB]CmY]P(6l._LekGiMF)Qm#ntQ<7r.j,5>=Yuu!!0QV'%`s*29%a&:4(&kc-T"PmQ`OYobk:$uAu<.h3m1Du&?.Ftfe2pnkaUL[=$/t>VQ,)X;lm6/TJW:JdqSGP^lKlKMY'Q6rc2F97`N9qH8H33gt%Sp2fd+:1mTBk`$IfUP`^%$EcYAD6k6AD0$F9fo>I[32Tn2K2,Bm@6%.HU_DsKu(-s-^](:-ds]J_R,5?R!)2"qn1.3p3C)90C"V,%<$prb/ZLOY%`r_164$_'7kJ:-OZO!@VCcH"6AZIWDMAjAK@GF2#,=NJMS:MPludm.([4pU[I'F#KZLA1]1gfDLAX^l''"\4>=<+X%"1a2#NZtr]`o9,lr>hcPQR1C:95sh[*mQVgd`E5"m\\AIq=)4cdI]S5=DOI^oYkI[PXnGL,gm*XBE5]P>od5r4Mo6:r8>WG)&jB>%]kcj0\,C&1he]WMEtQ8h;`uDJ,*cbB80!*EKl@D.'3%Bo!L$TL&n@sDml#JAg,K]Ci9=MBT=$#\[:s5B+tM&L.h!X)db4G#@-3kL%CIe=E,.TntKi'2FN),DHBREk%@"[h80dNMPa?YknSIe8c:!&N.F4SJW%?En\`M7rWUt&AN`a"s!Qq.mV9K/R2bGMlc3IfH25+:nk%(c7XuIr%H+]0rB#L-$X<SM1muoE2G%Z"1:3;4)24%C<19a_Zk=1>B[57-cNcgN[q)#qLiuBrtPM<$CpG8=pqZK]t4iCH7OH@k4L0%H91#]VstUHJ1?s+:nEe?UErT]TE.k-Xl>&gZl/;)'`6u5N`b.;GEBtL([FWH1Qf&$-Z$hBd1b=:NgH8j?0U:OJXaNA_7h@`G.5^l%"_b:tmD)\i0W!34=VPDjY%Vf>]^.>DG"ekl_bM0[KYjg0G%'nr''ZcV77&U!'G`$Ta+TmigVNec`LE)aH+?S:OGgeY_fL9".CFg`%V:J7!YX/0+INbs^U]8$M1r=+7__S%@>[?^074-]V8_nTeojE#gSpNjE7Lhtfm;snH:tq1Hi<_A(CoE$@c9j-6d!\KrQo3T:GP#u\%7Z^@iQ>H6>n5m%:Ntt@6pIUhBCLNis\^HAG0Nqpm=8R[DJ[LgVXAE>-a6EtH?/s$NLoN-J+rln;e!%K%&`k<#74b:aKYa(leV8su%08-6KE1Zc/-W%X\?)LZ<clI"Ugo%goVisgk[n*_l:K8d;A:'TJ'Pp!u9+SIPKeT2I/?;-"&atr-1-8HhWgrE@;c\ToH4`"(oHG^C%hc']LPCsREF-9?$Ng,cYoKW`JpMP&gPgY:Lg<iDhBNp$V53\OM1\[u=LTTLA$u)VVLMIJ.ZYORt`alP_A@qj&a?EMXr6ulEh_+CH%=WiGm9VaW0DA1#s(a#oY;Kcrc=(H'6$6rGDn&^&LXR->ZakiY-W;qs6`T2-h%k!q'JR%#?G%m@\CW)ZVZb^1YT/!'bD__U!8Xbg<%-:ju"h4psRmJ%1:5q`:",&50YQ!C2@0OKm*buV5rqlX`M/C"pq^_[VQBZC92`YBQ6]0Y10*T2]Z0&8FO[7P3^`)Pr54V:aKdKpm$%20r;p<.X0Hc>T0)>#k?:7O."J)iKB><!d$2VJWMJ7l?0X2-aF]I^@FTrQ<C\H6Qu6hr\B[W:2Wm@.r_*Y+=-!6\71p/./dcD>*F\%T8?m3Z8ru+kR]38TdiN8TekK+@q&C^c9;r%r#&K(.5cVK??<mV\A[]#26Q]Le>&SC])B5i[b<7hgDte=fNmTSSAZb3!2\ZA6.q::%nRmnh/W=>=oa-qd[$GI3XEN]rbICq2DB%a,MCY(A=WC<a+K;8Y]Uu9Yq4Fbqk,Z;h()P)B-HnU#o>..\ok^h[`2,T5C,#MK_</)S%hr_20h)Fof#Fd2,O&#n[.0"aB[*(>`]TQLO'gOs/OYhEnZK6<g:=Gc*/K93:pFj;We%aQ8qk*iGGAk7pVdFoO\,Z0`2o#17^]"*a%J,S\Os6%EU^V9XFDh%Y6Iei]l5Q&?Hqof#Rrm/(2s8'prrnSZGrT2ekrf9;CK-AiBd/5i;q6Rj6o9]IbKEnD_~>%AI9_PrivateDataEnd